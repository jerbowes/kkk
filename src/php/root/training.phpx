<?php
	//#==================================================================
	//# Training Category Management
	//#==================================================================
	//# MKP-USA I-Group Portal
	//# Formerly Warrior Information Center (WIC)
	//# Jerry Bowes, MKP-USA IT Development Coordinator, 2010-2011
	//# Jerry Bowes, MKP-USA I-Group Council Vice-Chairman, 2011-2013
	//#------------------------------------------------------------------
	//# $URL$
	//# $Date: 2013/04/08 03:48:53 $
	//# $Source: /home/jbowes/igroupportal/src/php/root/RCS/training.phpx,v $
	//# $Id: training.phpx,v 1.9 2013/04/08 03:48:53 jbowes Exp $
	//#------------------------------------------------------------------
	//# SET EDITOR FOR 4 space TAB stops
	//# :set autoindent tabstop=4 showmatch	 (vi)
	//#==================================================================
	//#------------------------------------------------------------------
	//# To Edit subversion controlled version
	//#------------------------------------------------------------------
	//# Check out the subversion igroupportal web content directory
	//# % cd /tmp 
	//# % svn co http://svn.mkp.org/repo/igroupportal/httpdocs
	//# -or, locally on MKP1-
	//# % svn co file:///home/subversion/repo/igroupportal/httpdocs
	//#
	//# % cd /tmp/httpdocs
	//# % vi (thisfile)
	//# % svn ci [-m'<message describing change>'] (thisfile)
	//#------------------------------------------------------------------
	//# Deploy as root on mkp1
	//#------------------------------------------------------------------
	//# % cd /var/httpdocs/vhosts/igroupportal.mkp.org/httpdocs
	//# % svn update
	//# % chown -R igroupportalweb.psacln *.php
	//#==================================================================
	//#------------------------------------------------------------------
	require_once("./include/looknfeel-inc.phpx");
	require_once("./include/msutils-inc.phpx");
	require_once("./include/config-inc.phpx");
	require_once("./include/auth-inc.phpx");
	require_once("./include/session-inc.phpx");

	//------------------------------------------------------------------------
	// START AUTH: If you are not authenticated, on to login you go
	//------------------------------------------------------------------------
	session_start();
    global $WICCFG;

	if ( ! isset ( $_SESSION['war_id'] )) {
		$returl = $_SERVER['PHP_SELF'];
		if ( isset ($_SERVER['QUERY_STRING'] )){
			$url = preg_replace('/&/','|', $_SERVER['QUERY_STRING']);
		}
		if (! empty ($url) ) {
			$returl .= '?' . $url;
		}
		header("Location: $WICCFG[SECWICURL]/login.phpx?RetUrl=${returl}");
		exit;
	}
	//------------------------------------------------------------------------
	// END AUTH: 
	//------------------------------------------------------------------------

	//------------------------------------------------------------------------
	// Formatting and navbar options for looknfeel-inc header and footer functions
	//------------------------------------------------------------------------
	//
	$FMT = array (
		'BANNER'		=>	"Available Training Families",
		'TITLE'			=>	"Available Training Families",
		'MODULENAME'	=>	"training.phpx",
		'NAV1'		    =>	"INFO",
		'NAV2'		    =>	"IGT"
	);

	//------------------------------------------------------------------------
	// Local configuration paremeters
	//------------------------------------------------------------------------
	$TRAININGCFG = array (
		'EDITLEVEL'		=>	'6',			// Access level to get edit screen
		'ADMINLEVEL'	=>	'7'			// Access level to edit screen
	);
	//------------------------------------------------------------------------
	// Database Fields
	//------------------------------------------------------------------------
	$ALLFIELD = array(
		'training_id',
		'training_class',
		'training_type',
		'training_name',
		'training_abbreviation',
		'training_description',
		'training_url'
	);

	//
	//	Fields visible in query output list
	//
	$SHOW = array(
		'training_abbreviation',
		'training_class',
		'training_type',
		'training_name'
	);

	//
	// Fields that can have query drill down links on display
	//
	$LINK = array(
		'training_class',
		'training_type'
	);
	//
	// Fields that are from a Menu Picklist that can have new members
	//
	$EXTEND = array(
	);

	//
	// Required for New Entry
	//
	$RequiredField = array(
		'training_class'		=>	'select class of training from list',
		'training_description'	=>	'enter description of training in html',
		'training_name'			=>	'enter name of training',
		'training_type'			=>	'select type of training from list',
		'training_abbreviation'	=>	'enter unique abbreviation'
	);

	//
	// Global query choices
	//
	$InValidChoice = array(
		'All',
		'',
		' ',
		'None',
		'Choose'
	);
	//
	// Edit record fields with edit disabled
	//
	$NoEdit = array(
		'contact_id',
		'training_id'
	);


	$MenuBase = "SELECT choice from menu where table_name = 'training' and ";
	$Menu = array(
		"training_type"	=> "$MenuBase field_name = 'training_type'",
		"training_class" => "$MenuBase field_name = 'training_class'"
	);

	$FieldType = array(
		'training_type'	    		=>	'Menu',
		'training_class'    		=>	'Menu',
		'training_name'	    		=>	'LongText',
		'training_url'	    		=>	'LongText',
		'training_description'		=>	'TextArea'
	);

	//
	// Display exceptions from default tdcs centered display table cell
	//
	$JustifyCss = array(
		'training_name'		=>	'tds'	// small left justified
	);

	//------------------------------------------------------------------------
	// BEGIN Program
	//------------------------------------------------------------------------

	spew_header($FMT);

	if (array_key_exists('Action', $_REQUEST)) {
		echo "<PRE>\n";		// DEVONLY
		print_r($_REQUEST);	// DEVONLY
		echo "</PRE>\n";	// DEVONLY
		spew_query_form();

		//----------------------------------------------------------------------
	  	// Insert New Entry
		//----------------------------------------------------------------------
	  	if ($_REQUEST[Action] == "Insert New Entry" ) {
			caa_connect();
			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('training','training');
			$fields = array_keys($fieldlabel);

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
				if (in_array($_REQUEST[$altkey], $InValidChoice)) {
					unset ($_REQUEST[$altkey]);
				}
			}

			// Find the extended entries for picklists and return 
			// them to base names, overwriting picklist entry
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (array_key_exists($altkey, $_REQUEST)) {
					$_REQUEST[$f] =  $_REQUEST[$altkey];
					unset ($_REQUEST[$altkey]);
				}
			}
			//
			// Delete auto_increment primary keys
			//
			unset ($_REQUEST['training_id']);

			//
			// Requred fields gauntlet
			//
			foreach ($RequiredField as $key => $val) {
				if (! array_key_exists($key, $_REQUEST)) {
					$err .= '<LI>Please ' . $RequiredField[$key] . '.</LI>';
				}
			}
			if ( $err ) {
				echo "<CENTER>\n";
				echo "<TABLE BORDER>\n";
				echo "<TH>Incomplete Information</TH>\n";
				echo "<TR><TD><UL>$err</UL></TD></TABLE>\n";
				echo "</TABLE>\n";
				echo "</CENTER>\n";
				spew_footer($FMT);
				exit;
			}

			$sql = 'INSERT INTO training (';
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$sql .= $f . ',';
				}
			}
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = mysql_real_escape_string($_REQUEST[$f]);
					$sql2 .= "'" . $val . "'" . ',';
				}
			}

			$finalsql = rtrim($sql, ",") .  ') VALUES (' .  rtrim($sql2, ",") . ")";
			echo "<p class=trace>$finalsql</p>\n";	//DEBUG DEVONLY
			$result = mysql_query($finalsql) or die('Error, query failed: $sql' . mysql_error() );
			echo "<CENTER>\n";
			echo "<H2>Record successfully added</H2>\n";
			echo "</CENTER>\n";
			$_REQUEST['training_id'] =  mysql_insert_id();
            $_REQUEST['Action'] = "View";
		}

		//----------------------------------------------------------------------
	  	// Update Existing Entry 
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Update" ) {
			if ( array_key_exists('training_id', $_REQUEST)) {
				$lid = $_REQUEST[training_id];
				if (! is_numeric( $lid ) ) {
					die ("ERROR: Attempt to update requires training_id to be integer. It is not.");
				}
			}else{
				die ("No Item Id Set") ;
			}

			caa_connect();
			//
			// Get Original Record
			//
			$Original = array();
			$sql = "SELECT * FROM training WHERE training_id = '$lid'";
			$result = mysql_query($sql);
			$Original = mysql_fetch_array($result, MYSQL_ASSOC) ;

			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('training','training');

			print '<pre>';	// DEBUG DEVONLY
			echo "Incoming Updated Fields\n"; // DEBUG DEVONLY
			print htmlspecialchars(print_r($fieldlabel), ENT_QUOTES);	// DEBUG DEVONLY
			print '</pre>';	// DEBUG DEVONLY

			$fields = array_keys($fieldlabel);

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
				if (in_array($_REQUEST[$altkey], $InValidChoice)) {
					unset ($_REQUEST[$altkey]);
				}
			}

			//
			// Find the extended entries for picklists and return 
			// them to base names, overwriting picklist entry
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (array_key_exists($altkey, $_REQUEST)) {
					$_REQUEST[$f] =  $_REQUEST[$altkey];
					unset ($_REQUEST[$altkey]);
				}
			}

			$sql = 'UPDATE training SET ';
			$sqlentry = array ();
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = $_REQUEST[$f];
					echo "<BR>$f : Comparing Orig ( $Original[$f] ) with Update ( $_REQUEST[$f] ) \n"; // DEVONLY
					if ( $_REQUEST[$f] != $Original[$f] ) {
						echo "<BR>XXX Different\n"; // DEVONLY
						
						$val = mysql_real_escape_string($_REQUEST[$f]);
						$sqlx =   $f . " = '" . $val . "'";
						array_push($sqlentry, $sqlx);
					}else{
						echo "<BR>YYY Same\n"; // DEVONLY
					}
				}
			}
			$sql .= implode (', ', $sqlentry);
			$sql .= " WHERE training_id = '$lid'";

			echo "<p class=trace>$sql</p>\n";	// DEVONLY DEBUG

			if (count($sqlentry)) {
				$result = mysql_query($sql) or die('Error, update failed: $sql' . mysql_error() );
				echo "<H3>Update successful</H3>\n";
			}else{
				echo "<H3>No Changes Made</H3>\n";
			}

			$_REQUEST['Action'] = "View";
		}


		//----------------------------------------------------------------------
	  	// Query or List
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Query"
	  		|| $_REQUEST['Action'] == "List") {
			$fieldlabel = array();
			$fields = array();

			caa_connect();
			$fieldlabel = get_field_labels('training','training',$WICCFG['DBNAME']);
			$fields = array_keys($fieldlabel);
            $fieldlabel['training_abbreviation'] = 'Tag';
            $fieldlabel['training_name'] = 'Training Family Name';

			//----------------------------------------------------------
			// Capture previous selection criteria and append to links
			// To enable drill down subqueries
			//----------------------------------------------------------

			foreach(explode( '&', $_SERVER[QUERY_STRING])  as $entry ) {
				list($key, $val) = explode( '=', $entry);	

				if ( ! empty( $val ) ) {
					if (! in_array($val, $InValidChoice)) {
						if (in_array($key, $ALLFIELD) ) {
							$parameters[$key] = $val;
						}
					}
				}
			}
			$parameters['Action'] = $_REQUEST['Action'];

			//----------------------------------------------------------
			// Uniquify for duplicate entries
			//----------------------------------------------------------
			$validentries = array();

			foreach ($parameters as $key => $val ) {
				$val = preg_replace('/\s+/', '+', $val);
				$newentry = $key . '=' . $val;
				array_push($validentries, $newentry);
			}

			if (count($validentries)) {
				$drilldown = implode('&', $validentries);
			}

			//
			// Base sql query
			//
			$sql = "SELECT DISTINCT l.training_id,  l.training_name, l.training_abbreviation, ";
			$sql .= " l.training_type, l.training_class, l.training_url ";
			$sql .= " FROM training l";

			//
			// Construct where clause into an array
			//
			$where = array(
			);

			foreach ($fields as $f) {
				if (array_key_exists($f, $_REQUEST)) { 

					$val = mysql_real_escape_string($_REQUEST[$f]);

					if (in_array($val, $InValidChoice)){
						unset($val) ;
					}
					if (!empty( $val) ) {	// DEV: Can we populate an entry with a blank, e.g. reset?
						if ( preg_match('/%/', $val)) { 
							$sqlw = 'l.' . $f . "LIKE '" . $val . "'" ;
						}else{
							$sqlw = 'l.' . $f . "='" . $val . "'" ;
						}
						$where[] = $sqlw;
					}
				}
			}

			if ( count($where) ) {
				$sql .= ' WHERE ' . implode(' AND ', $where);
			}
			//---------------------------------------------------
			// ORDER BY
			//---------------------------------------------------
			$OrderBy = array(
				'Name'			=>	'l.training_name',
				'Family Name'	=>	'l.training_name',
				'Family'		=>	'l.training_name',
				'Class'			=>	'l.training_class, l.training_name',
				'Type'			=>	'l.training_type, l.training_name'
			);
			$sortby = $_REQUEST[Sortmeby];
			$obw =  $OrderBy[$sortby];
			if (empty ($obw)){
				$sql .= ' ORDER BY l.training_name ';
			}else{
				$sql .= ' ORDER BY ' . $OrderBy[$sortby];
			}

			echo "<p class=trace>$sql</p>\n";	// DEVONLY
			$result = mysql_query($sql);
			$numrecords = mysql_num_rows($result);
	

			echo "<CENTER>\n";
			echo "<P class=trace>Returned $numrecords items.</P>\n";
			echo "<TABLE BORDER>\n";

			if ($_SESSION['access'] >= $TRAININGCFG['EDITLEVEL'] ) {
				echo "<TH class=ths>Edit</TH>\n";
			}

			echo "<TH class=ths>View</TH>\n";

			unset($fields[training_id]);

			foreach ($ALLFIELD as $f) {
				if (in_array($f, $SHOW)) {
					echo "<TH class=ths>$fieldlabel[$f]</TH>\n";
				}
			}

			while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
				echo "<TR>\n";

				if ($_SESSION['access'] >= $TRAININGCFG['EDITLEVEL'] ) {
					echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					echo "<A HREF=$_SERVER[PHP_SELF]?training_id=$row[training_id]";
					echo "&Action=Edit>";
					echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0></A>";
					echo "</TD>\n";
				}
	
				echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					echo "<A HREF=$_SERVER[PHP_SELF]?training_id=$row[training_id]";
					echo "&Action=View>";
					echo "<IMG SRC=/images/smallballs/yellowball.gif BORDER=0></A>";
				echo "</TD>\n";
	
				foreach ($ALLFIELD as $f) {
					$css = "tdcs";
					$display = $row[$f];
                    if ( $f == "training_name" ) {
                        if ( ! empty ( $row['training_url'] ) ) {
                            $display = "<A HREF=$row[training_url]>$row[$f]</A>";
                        }
                    }

					if (in_array($f, $SHOW)) {

						if (array_key_exists($f, $JustifyCss)) {
							$css = $JustifyCss[$f];
						}

						echo "<TD VALIGN=TOP class=$css>";
						if (in_array($f, $LINK)) {
							echo "<A HREF=";
							echo "$_SERVER[PHP_SELF]";
							echo '?';
							$url = preg_replace('/\s+/', '+', $row[$f]);
							echo "$f=${url}"; 
							echo "&${drilldown}>";
							echo "$display</A>\n";
						}else{
							echo "$display\n";
						}
						echo "<BR></TD>\n";
					}
				}
			}
			echo "</TABLE>\n";
			echo "</CENTER>\n";
	  	}//if ($_REQUEST[Action] == "Query" || "List")) {
		//----------------------------------------------------------------------
	  	// New Entry Form
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "New" ) {

			$menulist = array();
			$fieldlabel = get_field_labels('training','training',$WICCFG['DBNAME']);
			unset($fieldlabel['training_id']);

			echo "<CENTER>\n";
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			foreach ($ALLFIELD as $fieldname ) {

				if (!in_array($fieldname, $NoEdit)) {
					$val = $fieldlabel[$fieldname];

					echo "<TR>\n";
					echo "<TD VALIGN=TOP CLASS=tdl>";
					echo "<A HREF=/help.phpx?table_name=training&field_name=$fieldname&Action=Help>";
					echo "$val</A></TD>\n";
					echo "<TD VALIGN=TOP>";

					if (array_key_exists($fieldname, $FieldType)) {

						// If Menu type of Menu
						if ( $FieldType[$fieldname] == "Menu"  ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu($menusql);
							sort($menulist);
							spew_select_menu($fieldname, $_REQUEST[$fieldname],'',$menulist);

							if (in_array($fieldname, $EXTEND)) {
								echo "-OR- <INPUT TYPE=TEXT NAME=NEW_${fieldname}>";
							}
	
						}
						if ($FieldType[$fieldname] == "MenuArray" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu_array($menusql);
							spew_select_hash_menu($fieldname, $_REQUEST[$fieldname],'',$menulist);
							if (in_array($fieldname, $EXTEND)) {
								echo "-OR- <INPUT TYPE=TEXT NAME=NEW_${fieldname}>";
							}
						}

						if ($FieldType[$fieldname] == "LongText" ) {
							echo "<INPUT TYPE=TEXT SIZE=60 NAME=$fieldname>";
						}

						if ($FieldType[$fieldname] == "TextArea" ) {
							echo "<TEXTAREA NAME=$fieldname ROWS=30 COLS=60></TEXTAREA>";
						}
	
					}else{
						echo "<INPUT TYPE=TEXT NAME=$fieldname>";
					}
					echo "</TD>\n";
				}
			}
			echo "</TABLE>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Insert New Entry\">\n";
			echo "</FORM>\n";
			echo "</CENTER>\n";
		}


		//----------------------------------------------------------------------
	  	// Edit
		//----------------------------------------------------------------------
	  	if (($_REQUEST['Action'] == "Edit") ) {

			$menulist = array();
			$fieldlabel = array();
			$row = array();

			if ( array_key_exists('training_id', $_REQUEST)) {
				$tid = $_REQUEST['training_id'];
				if ( ! is_numeric($tid) ) {
					die ("Training ID ($tid) is not an integer.") ;
				}
			}else{
				die ("No Training Id Set") ;
			}

			caa_connect();


			$sql = "SELECT * FROM training WHERE training_id = '$tid'";
			echo "<P class=trace>$sql</P>\n"; 	// DEVONLY
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;
			print_r($row); 	// DEVONLY

			$fieldlabel = get_field_labels('training','training');

			echo "<CENTER>\n";

			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			foreach ($ALLFIELD as $fieldname ) {
				$label = $fieldlabel[$fieldname];
				echo "<TR>\n";
				echo "<TD VALIGN=TOP class=tdls>";
				echo "<A HREF=/help.phpx?table_name=training&field_name=$fieldname&Action=Help>$label</A></TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				if (in_array($fieldname, $NoEdit)) {
					echo "$row[$fieldname]<BR>";
				}else{
					if (array_key_exists($fieldname, $FieldType)) {
						// Customized dynamic picklist menus
						if ( $fieldname == "contact_id" ) {
							$Menu[$fieldname] = "SELECT distinct w.war_id, w.war_nname from warrior w, training f";
							$Menu[$fieldname] .= " WHERE w.war_center = $_SESSION[center_id] ";
						}

						if ( $FieldType[$fieldname] == "Menu" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu($menusql);
							sort($menulist);
							spew_select_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ($FieldType[$fieldname] == "MenuArray" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu_array($menusql);
							spew_select_hash_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ( $FieldType[$fieldname] == "TextArea" ) {
							echo "<TEXTAREA NAME=$fieldname COLS=60 ROWS=30>$row[$fieldname]</TEXTAREA>\n";
						}

						if ( $FieldType[$fieldname] == "LongText" ) {
							echo "<INPUT TYPE=TEXT NAME=$fieldname SIZE=60 VALUE=\"$row[$fieldname]\">\n";
						}

					}else{	// No fieldtype
						echo "<INPUT TYPE=TEXT NAME=$fieldname VALUE=\"$row[$fieldname]\"><BR>";
					}
					
				}//Endif NoEdit
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";
			echo "<INPUT TYPE=HIDDEN NAME=training_id VALUE=$_REQUEST[training_id]>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=List>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Update>\n";

			echo "</FORM>\n";
			echo "</CENTER>\n";
	  	}//if ($_REQUEST[Action] == "Edit")


		//----------------------------------------------------------------------
	  	// View
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "View" ) {

			if ( array_key_exists('training_id', $_REQUEST)) {
				$tid = $_REQUEST[training_id];
				if ( ! is_numeric($tid) ) {
					die ("Location ID ($tid) is not an integer.") ;
				}
			}else{
				die ("No Item Id Set") ;
			}

			caa_connect();

			$menulist = array();

			$sql = "SELECT * FROM training WHERE training_id = '$tid'";
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;

			$fieldlabel = get_field_labels('training','training');

			echo "<CENTER>\n";

			//
			// DoWhat Table
			//

			echo "<TABLE BORDER>\n";
			echo "<TH class=ths>For this training type I want to...</TH>\n";
			echo "<TR><TD class=tds>\n";

			echo "<UL>\n";
			echo "<LI><A HREF=/trainings.phpx?training_id=$tid";
				echo "&Action=List>";
				echo "List training events of this type.</A>";
			echo "</LI>\n";

			echo "<LI><A HREF=/warrior.phpx?is_trained=Yes&training_id=$tid&Mode_Training=Yes";
				echo "&war_center=$_SESSION[center_id]";
				echo "&Action=Query>";
				echo "List Warriors in my center who have attended this type of training</A>";
			echo "</LI>\n";

			echo "</UL>\n";
			echo "</TD>\n";
			echo "</TR>\n";
			echo "</TABLE>\n";


			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";
			echo "<TH class=ths COLSPAN=2>Training Type Information</TH>\n";

			foreach ($ALLFIELD as $fieldname ) {
				$display = $row[$fieldname];
				$label = $fieldlabel[$fieldname];

				echo "<TR>\n";
				echo "<TD class=tdls>";
				echo "<A HREF=/help.phpx?table_name=training&field_name=$fieldname&Action=Help>";
                echo "$label";
				echo "</A>";
                echo "</TD>\n";

				echo "<TD VALIGN=TOP class=tds>";
				if ( $fieldname == "training_url" ) {
					$display="<A HREF=$row[$fieldname]>$row[$fieldname]</A>";
				}

				// Show it off

				$display = stripslashes($display);
				echo "$display<BR>";
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";

	  		if ($_SESSION['access'] >= $TRAINGINGCFG['ADMINLEVEL'] ) {
				echo "<INPUT TYPE=HIDDEN NAME=training_id VALUE=$_REQUEST[training_id]>\n";
				echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Edit>\n";
	  		}//if ($_SESSION[Action] >=  ADMIN

	  	}//if  ($_REQUEST[Action] == "View")
		echo "</FORM>\n";
		echo "</CENTER>\n";

		//----------------------------------------------------------------
		// END 'Action' Field parsing
		//----------------------------------------------------------------

	}else{	// No Action Field
		spew_query_form();
	}

	spew_footer($FMT);
	//----------------------------------------------------------------
	// Function spew_query_form
	//----------------------------------------------------------------
	function spew_query_form() {
        $list = array();
		caa_connect();
		// Blurb
        echo "<P class=trace>For help, see";
        echo " <A HREF=/help.php?table_name=training&field_name=Overview&help_type=Explanation&Action=Help>";
        echo "overview</A>.";
        echo "</P>\n";

		echo "<CENTER>\n";
		echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
		echo "<TABLE BORDER>\n";
		echo "<TH class=ths>Training Family</TH>\n";
		echo "<TH class=ths>Tag</TH>\n";
		echo "<TH class=ths>Family Class</TH>\n";
		echo "<TH class=ths>Family Type</TH>\n";
		echo "<TH class=ths>Sort By</TH>\n";

		echo "<TR>\n";

		// Training Family Name
		echo "<TD class=tds>\n";
		$sql = "SELECT distinct training_id, training_name from  training order by training_name" ;
		$list = get_menu_array($sql);
		spew_select_hash_menu('training_id','All','All',$list);
		echo "</TD>\n";

		// Abbreviation
		echo "<TD class=tds>\n";
		$sql = "SELECT distinct training_abbreviation from  training order by training_abbreviation" ;
		$list = array();
		$list = get_menu($sql);
		spew_select_menu('training_abbreviation','All','All',$list);
		echo "</TD>\n";
		
		// Type 
		echo "<TD class=tds>\n";
		$sql = "SELECT distinct training_type from  training order by training_type" ;
		$list = array();
		$list = get_menu($sql);
		spew_select_menu('training_type','All','All',$list);
		echo "</TD>\n";

		// Class
		echo "<TD class=tds>\n";
		$sql = "SELECT distinct training_class from  training order by training_class" ;
		$list = array();
		$list = get_menu($sql);
		spew_select_menu('training_class','All','All',$list);
		echo "</TD>\n";

		// Sort By
		echo "<TD class=tds>\n";
		$sortby = array (
			'Name',
			'Class',
			'Type'
			);
		sort($sortby);
		spew_select_menu('Sortmeby','','Name',$sortby);
		echo "</TD>\n";

		// End Table

		echo "</TR>\n";
		echo "</TABLE>\n";
		// End Form
		echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=List>\n";
        if ($_SESSION['access'] >= $TRAININGCFG['EDITLEVEL'] ) {
		    echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"New\">\n";
        }
		echo "</FORM>\n";
		echo "</CENTER>\n";

	}
?>

