<?php
	//#==================================================================
	//# CAA Database MKPI Geographic Region Utility
	//#------------------------------------------------------------------
	//# MKP-USA I-Group Portal
	//# Formerly Warrior Information Center (WIC)
	//# Jerry Bowes, MKP-USA IT Development Coordinator, 2010-2011
	//# Jerry Bowes, MKP-USA I-Group Council Vice-Chairman, 2011-2013
	//#------------------------------------------------------------------
	//# $URL$
	//# $Date: 2012/12/23 23:55:41 $
	//# $Source: /home/jbowes/igroupportal/src/php/root/RCS/georegion.phpx,v $
	//# $Id: georegion.phpx,v 1.3 2012/12/23 23:55:41 jbowes Exp $
	//#------------------------------------------------------------------
	//# SET EDITOR FOR 4 space TAB stops
	//# :set autoindent tabstop=4 showmatch	 (vi)
	//#------------------------------------------------------------------
	//#==================================================================
	//#------------------------------------------------------------------
	//# To Edit subversion controlled version
	//#------------------------------------------------------------------
	//# Check out the subversion igroupportal web content directory
	//# % cd /tmp 
	//# % svn co http://svn.mkp.org/repo/igroupportal/httpdocs
	//# -or, locally on MKP1-
	//# % svn co file:///home/subversion/repo/igroupportal/httpdocs
	//#
	//# % cd /tmp/httpdocs
	//# % vi (thisfile)
	//# % svn ci [-m'<message describing change>'] (thisfile)
	//#------------------------------------------------------------------
	//# Deploy as root on mkp1
	//#------------------------------------------------------------------
	//# % cd /var/httpdocs/vhosts/igroupportal.mkp.org/httpdocs
	//# % svn update
	//# % chown -R igroupportalweb.psacln *.php
	//#==================================================================

	require_once("./include/auth-inc.phpx");
	require_once("./include/config-inc.phpx");
	require_once("./include/looknfeel-inc.phpx");
	require_once("./include/msutils-inc.phpx");
	require_once("./include/session-inc.phpx");

	//--------------------------------------------------------------------------
	// If you are not authenticated (no war_id in $_SESSION), 
	// Construct return url and redirect to login for authentication
	//--------------------------------------------------------------------------
	//
	session_start();

	if ( ! isset ( $_SESSION['war_id'] )) {
		if (array_key_exists('QUERY_STRING', $_SERVER)){
			$param = preg_replace('/&/', '|', $_SERVER['QUERY_STRING'] );
			$returl =  $_SERVER['PHP_SELF'] . '?' .  $param;
			header("Location: $WICCFG[WICURL]/login.phpx?RetUrl=$returl");;
		}else{
			$returl =  $_SERVER['PHP_SELF'];
			header("Location: $WICCFG[WICURL]/login.phpx?RetUrl=$returl");;
		}
		exit;
	}

	//------------------------------------------------------------------------
	// Formatting and navbar options for looknfeel-inc header and footer functions
	//------------------------------------------------------------------------
	//
	$FMT = array (
		'BANNER'		=>	"MKPI Geographic Regions",
		'TITLE'			=>	"MKPI Geographic Regions",
		'MODULENAME'	=>	"georegion.phpx",
		'NAV1'			=>	"INFO"	// Level 1 menu navigation group
	);

	//------------------------------------------------------------------------
	// Local configuration paremeters
	//------------------------------------------------------------------------
	$GEOREGIONCFG = array (
		'EDITLEVEL'		=>	'7'			// Access level to get edit screen
	);

	//------------------------------------------------------------------------
	// Database Fields
	//------------------------------------------------------------------------
	$ALLFIELD = array(
		'georegion_id',
		'georegion_name',
		'georegion_shortname',
		'georegion_abbreviation',
		'georegion_usaurl',
		'georegion_mkpiurl',
		'georegion_url'
	);

	//
	//	Fields visible in query output list
	//
	$SHOW = array(
		'georegion_name',
		'georegion_shortname',
		'georegion_abbreviation',
		'georegion_usaurl',
		'georegion_mkpiurl',
		'georegion_url'
	);

	//
	// Fields that can have query drill down links on display
	//
	$LINK = array(
	);
	//
	// Fields that are from a Menu Picklist that can have new members
	//
	$EXTEND = array(
	);

	//
	// Required for New Entry
	//
	$RequiredField = array(
		'georegion_name'		=> 	'enter name'
	);
	//
	// Global query choices
	//
	$InValidChoice = array(
		'All',
		'',
		' ',
		'None',
		'Choose'
	);
	//
	// Edit record fields with edit disabled
	//
	$NoEdit = array(
		'georegion_id'
	);

	$FieldType = array(
		'georegion_usaurl'		=>	'LongText',
		'georegion_mkpiurl'		=>	'LongText',
		'georegion_url'			=>	'LongText'
	);

	$Menu = array(
	);

	//
	// Display exceptions from default tdcs centered display table cell
	//
	$JustifyCss = array(
		'georegion_name'		=>	'tds',
		'georegion_url'			=>	'tds',
		'georegion_mkpiurl'		=>	'tds',
		'georegion_usaurl'		=>	'tds'
	);

	//------------------------------------------------------------------------
	// BEGIN Program
	//------------------------------------------------------------------------

	spew_header($FMT);
	// Hardwire to Query
	if (!array_key_exists(Action, $_REQUEST)) {
		$_REQUEST['Action'] = 'Query';
	}
	if (array_key_exists(Action, $_REQUEST)) {
		echo "<PRE>\n";		// DEVONLY
		print_r($_REQUEST);	// DEVONLY
		echo "</PRE>\n";	// DEVONLY
		//spew_query_form();

		//----------------------------------------------------------------------
	  	// Insert New Entry
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Insert New Entry" ) {
			caa_connect();
			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('georegion','georegion',$WICCFG['DBNAME']);
			$fields = array_keys($fieldlabel);

			// Setup default values
			$Default = array ();
			foreach ($Default as $key => $val ) {
				if ( ! isset ( $_REQUEST[$key]) ) {
					$_REQUEST[$key] = $val;
				}
			}

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
			}

			//
			// Delete auto_increment primary keys
			//
			unset ($_REQUEST['georegion_id']);

			//
			// Requred fields gauntlet
			//
			foreach ($RequiredField as $key => $val) {
				if (! array_key_exists($key, $_REQUEST)) {
					$err .= '<LI>Please ' . $RequiredField[$key] . '.</LI>';
				}
			}
			if ( $err ) {

				echo "<CENTER>\n";
				echo "<H3>Incomplete Information</H3>\n";
				echo "<TABLE BORDER>\n";
				echo "<TR><TD><UL>$err</UL></TD></TABLE>\n";
				echo "</TABLE>\n";
				echo "</CENTER>\n";
				spew_footer($FMT);
				exit;
			}

			$sql = 'INSERT INTO georegion (';
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$sql .= $f . ',';
				}
			}
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = mysql_real_escape_string($_REQUEST[$f]);
					$sql2 .= "'" . $val . "'" . ',';
				}
			}

			$finalsql = rtrim($sql, ",") .  ') VALUES (' .  rtrim($sql2, ",") . ")";
			echo "<p class=trace>$finalsql</p>\n";	//DEBUG DEVONLY
			$result = mysql_query($finalsql) or die('Error, query failed: $sql' . mysql_error() );

			echo "<CENTER>\n";
			echo "<H2>Record successfully added</H2>\n";
			echo "</CENTER>\n";
		}

		//----------------------------------------------------------------------
	  	// Update Existing Entry 
		//----------------------------------------------------------------------
	  	if ($_REQUEST[Action] == "Update" ) {

			if ( array_key_exists('georegion_id', $_REQUEST)) {
				$lid = $_REQUEST[georegion_id];
				if (! is_numeric( $lid ) ) {
					die ("ERROR: Attempt to update requires georegion_id to be integer. It is not.");
				}
			}else{
				die ("No Item Id Set") ;
			}

			caa_connect();

			//
			// Get Original Record
			//
			$Original = array();
			$sql = "SELECT * FROM georegion WHERE georegion_id = '$lid'";
			$result = mysql_query($sql);
			$Original = mysql_fetch_array($result, MYSQL_ASSOC) ;

			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('georegion','georegion',$WICCFG['DBNAME']);
			$fields = array_keys($fieldlabel);

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
				if (in_array($_REQUEST[$altkey], $InValidChoice)) {
					unset ($_REQUEST[$altkey]);
				}
			}

			//
			// Find the extended entries for picklists and return 
			// them to base names, overwriting picklist entry
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (array_key_exists($altkey, $_REQUEST)) {
					$_REQUEST[$f] =  $_REQUEST[$altkey];
					unset ($_REQUEST[$altkey]);
				}
			}

			//
			// Update only the fields that have changed
			//
			$sql = 'UPDATE georegion SET ';
			$sqlentry = array ();
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = $_REQUEST[$f];

					if ( $_REQUEST[$f] != $Original[$f] ) {
						echo "<BR>XXX Different\n"; // DEVONLY
						$val = mysql_real_escape_string($_REQUEST[$f]);
						$sqlentry[] = $f . " = '" . $val . "'";
					}else{
						echo "<BR>YYY Same\n"; // DEVONLY
					}
				}
			}
			$sql .= implode (', ', $sqlentry);
			$sql .= " WHERE georegion_id = '$lid'";

			echo "<p class=trace>$sql</p>\n";	// DEVONLY DEBUG

			if (count($sqlentry)) {
				$result = mysql_query($sql) or die('Error, update failed: $sql' . mysql_error() );
				echo "<H3>Update successful</H3>\n";
			}else{
				echo "<H3>No Changes Made</H3>\n";
			}

			$_REQUEST[Action] = "View";
		}

		//----------------------------------------------------------------------
	  	// Query or Full Query
		//----------------------------------------------------------------------
	  	if ($_REQUEST[Action] == "Query" ) {

			caa_connect();
			$fieldlabel = array();

			$fieldlabel = get_field_labels('georegion','georegion',$WICCFG['DBNAME']);
			$fields = array_keys($fieldlabel);

			//----------------------------------------------------------
			// Capture previous selection criteria and append to links
			// To enable drill down subqueries
			//----------------------------------------------------------

			foreach(explode( '&', $_SERVER[QUERY_STRING])  as $entry ) {
				list($key, $val) = explode( '=', $entry);	
				if ( ! empty( $val ) ) {
					if (! in_array($val, $InValidChoice)) {
						if (in_array($key, $ALLFIELD) ) {
							$parameters[$key] = $val;
						}
					}
				}
			}
			$parameters['Action'] = $_REQUEST['Action'];

			//----------------------------------------------------------
			// Uniquify for duplicate entries
			//----------------------------------------------------------
			$validentries = array();

			foreach ($parameters as $key => $val ) {
				$val = preg_replace('/\s+/', '+', $val);
				$validentries[] = $key . '=' . $val;
			}

			if (count($validentries)) {
				$drilldown = implode('&', $validentries);
			}

			//
			// Base sql query
			//
			$Where = array();

			//
			// Construct where clause into an array
			//
			foreach ($fields as $f) {
				if (array_key_exists($f, $_REQUEST)) { 
					$val = mysql_real_escape_string($_REQUEST[$f]);
					if (in_array($val, $InValidChoice)){
						unset($val) ;
					}
					if ( ! empty($val) ) {
						if ( preg_match('/%/', $val)) { 
							$Where[] =  $f . "LIKE '" . $val . "'" ;
						}else{
							$Where[] =  $f . "='" . $val . "'" ;
						}
					}
				}
			}

			$sql = "SELECT * from georegion ";

			if ( count($Where) ) {
				$sql .= ' WHERE ' . implode(' AND ', $Where);
			}
			//---------------------------------------------------
			// ORDER BY
			//---------------------------------------------------
			$OrderBy = array(
				'Name'		=>	'georegion_name'
			);

			$sortby = $_REQUEST['Sortmeby'];
			$sby = $OrderBy[$sortby];

			if (empty ($sby)){
				$sql .= ' ORDER BY georegion_name';
			}else{
				$sql .= ' ORDER BY ' . $sby;
			}

			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$result = mysql_query($sql);

			echo "<CENTER>\n";
			echo "<TABLE BORDER>\n";

			if ($_SESSION['access'] >= $GEOREGIONCFG['EDITLEVEL'] ) {
				echo "<TH class=ths>Edit</TH>\n";		// SECURITY
			}

			echo "<TH class=ths>View</TH>\n";

			unset($fields[georegion_id]);

			foreach ($ALLFIELD as $f) {
				if (in_array($f, $SHOW)) {
					echo "<TH class=ths>$fieldlabel[$f]</TH>\n";
				}
			}

			while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
				echo "<TR>\n";

				// Edit if authorized
				// SECURITY
				if ($_SESSION['access'] >= $GEOREGIONCFG['EDITLEVEL'] ) {	
					echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					echo "<A HREF=$_SERVER[PHP_SELF]?georegion_id=$row[georegion_id]";
					echo "&Action=Edit>";
					echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0></A>";
					echo "</TD>\n";
				}
	
				// View for everyone
				echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					echo "<A HREF=$_SERVER[PHP_SELF]?georegion_id=$row[georegion_id]";
					echo "&Action=View>";
					echo "<IMG SRC=/images/smallballs/yellowball.gif BORDER=0></A>";
				echo "</TD>\n";
	
				foreach ($ALLFIELD as $f) {
					$css = "tdcs";
					$display = stripslashes($row[$f]); 

					// Display Exceptions (lookup)
					if ( $f  == 'georegion_id' ) {
						$display = $row[georegion_name];
					}
					if ( preg_match('/url/', $f ) ) {
						$display = "<A HREF=$row[$f]>$row[$f]</A>";
					}

					if (in_array($f, $SHOW)) {

						if (array_key_exists($f, $JustifyCss)) {
							$css = $JustifyCss[$f];
						}

						echo "<TD class=$css>";
						if (in_array($f, $LINK)) {
							echo "<A HREF=";
							echo "$_SERVER[PHP_SELF]";
							echo '?';
							$url = preg_replace('/\s+/', '+', $row[$f]);
							echo "$f=${url}"; 
							echo "&${drilldown}>";
							echo "$display</A>\n";
						}else{
							echo "$display\n";
						}
						echo "<BR></TD>\n";
					}
				}
			}
			echo "</TABLE>\n";
			echo "</CENTER>\n";
	  	}//if ($_REQUEST[Action] == "Query")) {

		//----------------------------------------------------------------------
	  	// New Entry Form
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "New" ) {
			$menulist = array();
			$table = 'georegion';

			echo "<CENTER>\n";
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			$fieldlabel = get_field_labels('georegion','georegion',$WICCFG['DBNAME']);

			unset($fieldlabel['georegion_id']);

			foreach ($ALLFIELD as $fieldname ) {
				$val = $fieldlabel[$fieldname];
				
				echo "<TR><TD VALIGN=TOP CLASS=tdls>";
				echo "<A HREF=/help.phpx?table_name=$table&field_name=$fieldname&Action=Help>";
				echo "$val</A></TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				if (array_key_exists($fieldname, $FieldType)) {
					if ( $FieldType[$fieldname] == "Menu" ) {
						$menusql = $Menu[$fieldname];
						$menulist = get_menu($menusql);
						sort($menulist);
						spew_select_menu($fieldname, $_REQUEST[$fieldname],'',$menulist);
						if (in_array($fieldname, $EXTEND)) {
							echo "-OR- <INPUT TYPE=TEXT NAME=NEW_${fieldname}>";
						}
					}

					if ($FieldType[$fieldname] == "MenuArray" ) {
						$menusql = $Menu[$fieldname];
						$menulist = get_menu_array($menusql);
						asort($menulist);
						spew_select_hash_menu($fieldname, $_REQUEST[$fieldname],'',$menulist);
					}

					if ($FieldType[$fieldname] == "TextArea" ) {
						echo "<TEXTAREA NAME=$fieldname></TEXTAREA>\n";
					}

					if ($FieldType[$fieldname] == "LongText" ) {
						echo "<INPUT TYPE=TEXT SIZE=60 NAME=$fieldname>";
					}

				}else{
					echo "<INPUT TYPE=TEXT NAME=$fieldname>";
				}
				echo "</TD>\n";
			}
			echo "</TABLE>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Insert New Entry\">\n";
			echo "</FORM>\n";
			echo "</CENTER>\n";
		}//End if ($_REQUEST['Action'] == "New" ) 

		//----------------------------------------------------------------------
	  	// Edit 
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Edit") {
			$table='georegion';

			if ( array_key_exists('georegion_id', $_REQUEST)) {
				if ( isset ($_REQUEST['georegion_id'] ) ) {
					$lid = stripslashes( $_REQUEST['georegion_id']);
				}else{
					die ("NO ID in edit function.") ;
				}
				if ( ! is_numeric($lid) ) {
					die ("Location ID ($lid) is not an integer.") ;
				}
			}else{
				die ("No Item Id Set") ;
			}

			caa_connect();

			$menulist = array();

			$sql = "SELECT * FROM georegion WHERE georegion_id = '$lid'";
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;

			$fieldlabel = get_field_labels('georegion','georegion',$WICCFG['DBNAME']);

			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			foreach ($ALLFIELD as $fieldname ) {
				$label = $fieldlabel[$fieldname];
				echo "<TR><TD VALIGN=TOP class=tdls>";
				echo "<A HREF=/help.phpx?table_name=$table&field_name=$fieldname&Action=Help>";
				echo "$label";
				echo "</A>";
				echo "</TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				if (in_array($fieldname, $NoEdit)) {
					echo "$row[$fieldname]<BR>";
				}else{
					if (array_key_exists($fieldname, $FieldType)) {

						if ( $FieldType[$fieldname] == "Menu" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu($menusql);
							sort($menulist);
							spew_select_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ($FieldType[$fieldname] == "MenuArray" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu_array($menusql);
							ksort($menulist);
							spew_select_hash_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ( $FieldType[$fieldname] == "TextArea" ) {
							echo "<TEXTAREA NAME=$fieldname COLS=60 ROWS=30>$row[$fieldname]</TEXTAREA>\n";
						}

						if ( $FieldType[$fieldname] == "LongText" ) {
							echo "<INPUT TYPE=TEXT NAME=$fieldname SIZE=60 VALUE=\"$row[$fieldname]\">\n";
						}

					}else{	// No fieldtype
						echo "<INPUT TYPE=TEXT NAME=$fieldname VALUE=\"$row[$fieldname]\"><BR>";
					}
						
				}//Endif NoEdit
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";
			echo "<INPUT TYPE=HIDDEN NAME=georegion_id VALUE=$_REQUEST[georegion_id]>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Query>\n";
			// SECURITY
			if ( $_SESSION['access'] >= $GEOREGIONCFG['EDITLEVEL'] ) {
				echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Update>\n";
			}
			echo "</FORM>\n";
			echo "</CENTER>\n";

			show_comment_history($georegion_id, $georegion);

	  	}//if ($_REQUEST[Action] == "Edit") 


		//----------------------------------------------------------------------
	  	// View
		//----------------------------------------------------------------------
	  	if ($_REQUEST[Action] == "View" ) {

			$table = 'georegion';

			if ( array_key_exists('georegion_id', $_REQUEST)) {
				if ( isset ( $_REQUEST[georegion_id] ) ) {
					$georegion_id = $_REQUEST[georegion_id];
				}else{
					die ("No Zzz ID in view function") ;
				}
				if ( ! is_numeric($georegion_id) ) {
					die ("Zzz ID ($georegion_id) is not an integer.") ;
				}
			}else{
				die ("No Zzz Id Set") ;
			}
			$table_id = $georegion_id;

			caa_connect();

			$menulist = array();

			$sql = "SELECT * FROM georegion WHERE georegion_id = '$georegion_id'";
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;

			$fieldlabel = get_field_labels('georegion','georegion',$WICCFG['DBNAME']);

			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			foreach ($ALLFIELD as $fieldname ) {
				$label = $fieldlabel[$fieldname];
				echo "<TR><TD VALIGN=TOP class=tdls>";
				echo "<A HREF=/help.phpx?table_name=$table&field_name=$fieldname&Action=Help>";
				echo "$label</A></TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				$display = stripslashes($row[$fieldname]);

				//
				// View Entry Lookup Map Translations (id -> othertable.name for foreign keys)
				//
				if ( $fieldname == "georegion_id" ) {
					$sql = "SELECT georegion_name from center where georegion_id = '$row[georegion_id]'";
					$display = get_value($sql);
				}

				echo "$display<BR>";
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Query>\n";
			echo "</FORM>\n";

			//
			// Show Comment History
			//
			echo "<FORM ACTION=/comment.phpx TYPE=POST>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_id VALUE=$_REQUEST[$tid]>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_name VALUE=$table>\n";
			if ( $_SESSION['access'] >= $GEOREGIONCFG['EDITLEVEL'] ) {
				echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Edit\">\n";
			}
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Add Comment\">\n";
			echo "</FORM>\n";

			show_comment_history($pid, $table);

			echo "</CENTER>\n";
	  	}//if ($_REQUEST[Action] == "View")

		//----------------------------------------------------------------------
		// END 'Action' Processing Options
		//----------------------------------------------------------------------

	}else{	// No Action Field
		spew_query_form();
	}

	spew_footer($FMT);
	//----------------------------------------------------------------
	// Function spew_query_form
	//----------------------------------------------------------------
	function spew_query_form() {
		global $WICCFG;
		caa_connect();
		echo "<P class=trace>";
		echo "Help and explanations available on topics of ";
		echo "<A HREF=$WICCFG[WICURL]/help.phpx?table_name=hhh&field_name=hhh&Action=Help>Blah</A>, ";
		echo "or <A HREF=$WICCFG[WICURL]/help.phpx?table_name=hhh&field_name=hhh&Action=Help>Blee</A> ";
		echo "</P>\n";

		echo "<CENTER>\n";
		echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
		echo "<TABLE BORDER>\n";
		echo "<TH class=ths>Name</TH>\n";
		echo "<TH class=ths>Type</TH>\n";
		echo "<TH class=ths>Sort By</TH>\n";

		// Name
		echo "<TR><TD class=tds>\n";
		$sql = "SELECT DISTINCT georegion_name from georegion order by georegion_name";
		$namelist = get_menu($sql);
		spew_select_menu('georegion_name','','All',$namelist);
		echo "</TD>\n";

		// Type 
		echo "<TD class=tds>\n";
		$sql = "SELECT distinct type from  georegion order by type" ;
		$typelist = get_menu($sql);
		spew_select_menu('type','All','All',$typelist);
		echo "</TD>\n";

		// Sort By
		echo "<TD class=tds>\n";
		$sortby = array (
			'Name'
			);
		sort($sortby);
		spew_select_menu('Sortmeby','','Name',$sortby);
		echo "</TD>\n";

		// End Table

		echo "</TR>\n";
		echo "</TABLE>\n";
		// End Form
		echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Query>\n";
		// SECURITY
		if ($_SESSION['access'] >= $GEOREGIONCFG['EDITLEVEL'] ) {
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"New\">\n";
		}
		echo "</FORM>\n";
		echo "</CENTER>\n";
	}

	//----------------------------------------------------------------
	// Function Show Comment History
	//----------------------------------------------------------------

	function show_comment_history ( $cid, $ctable ) {
		$ctable = 'georegion';
		global $WICCFG;

		$subname = "show_comment_history";

		echo "<P class=trace>Entering $subname in $program</P>\n" ; // DEBUG DEVONLY;
	
		$Default = array( 
			"author_id"			=>	"45759",
			"comment_type"		=>	"Comment",
			"sortby"			=>	'Date Submitted'
			);
	
		$NoPropagate = array( 
			"sortby"	=>					"sort by",
			"thread"	=>					"thread"
			);
	
		//
		// Get List of nicknames for comment authors
		//
		$Who = array();
		$sql = "SELECT w.war_id, w.war_fname, w.war_nname, w.war_lname, war_email from warrior w, comment c";
		$sql .= " WHERE w.war_id = c.author_id ";
		$sql .= " AND c.table_name = '$ctable' AND c.table_id = '$pid' ";
		$Who = get_warrior_name_picklist($sql);

		//
		// Get List of emails for comment authors
		//
		$AuthorEmail = array();
		$sql = "SELECT w.war_id , war_email from warrior w, comment c";
		$sql .= " WHERE w.war_id = c.author_id ";
		$sql .= " AND c.table_name = '$ctable' AND c.table_id = '$pid' ";
		$AuthorEmail = get_menu_array($sql);

		//
		// Get List of existing comment types
		//
		$sql = "SELECT distinct comment_type from comment";
		$ctypes =  get_menu($sql);

		//
		// Generate SQL query
		//
	
		$dbh = caa_connect;
		$cfields =  get_fields('comment','comment');
	
		$sql = "SELECT  ";
		$sql .= " c.comment_id, c.comment_access,  c.author_id, c.date_created, c.comment_type,";
		$sql .= " c.comment_summary, c.comment_detail"; 
		$sql .= " FROM comment c WHERE c.table_name = '$ctable' and c.table_id = '$pid' ";

		if (! isset($_SESSION[war_id] ) ) {
			$sql .= " AND c.comment_access = 'Public' ";
			echo "<P class=trace>Following are all public entries. ";
			echo "Remaining entries visible after <A HREF=/login.phpx>logging in.</A></P>\n";
		}

		$sql .= " ORDER BY c.date_created desc";
		
		echo  "<P class=trace>$sql</P>\n" ; // DEBUG DEVONLY;

		//
		// Fetch and prepackage via sort/thread criteria WWWW
		//

		$TotalEntries = '0';
		$result = mysql_query($sql);
		$rowcount = mysql_num_rows($result);
		$Sort = array();
		$Comment = array();
		$Allauthors = array();
	
		//--------------------------------------------------------
		// Print Comment History
		//--------------------------------------------------------
		$url = $_SERVER['QUERY_STRING'];

		print "<P class=trace>Incoming URI: $url</P>\n"; // DEVONLY DEBUG

		if ( $_REQUEST[Comment] == "Detail" ) {
			$url = preg_replace('/=Detail/', '=Summary', $url);
			print "<P class=trace>Detail: url: ${url}</P>\n"; // DEVONLY DEBUG
			//print "<P class=trace><A HREF=\"$_SERVER[PHP_SELF]?$url\">Show Comment Summary Only</P>\n";
		}else{
			$url = preg_replace('/&Comment=Summary/', '', $url);
			print "<P class=trace>NO Detail: url: $url</P>\n"; // DEVONLY DEBUG
			//print "<P class=trace><A HREF=\"$_SERVER[PHP_SELF]?${url}&Comment=Detail\">Show Comment Details</P>\n";
		}

		$count = mysql_num_rows($result);
		echo "<CENTER>\n";
		$howmany = "Entries";

		if ( $count == "1" ) {
			$howmany = "Entry";
		}
		echo "<TABLE id=${ctable}_comment_table BORDER CELLSPACING=2 CELLPADDING=4>\n";

		if ( $_REQUEST['Comment'] == "Detail" ) {
			echo "<TH class=ths>Details of $count Comment $howmany\n";
			echo "(Show <A HREF=\"$_SERVER[PHP_SELF]?$url\">summaries only</A>.)";
			echo "</TH>\n";
		}else{
			echo "<TH class=ths>Summary of $count Comment $howmany\n";
			echo "(Show <A HREF=\"$_SERVER[PHP_SELF]?${url}&Comment=Detail\">details</A>.)";
			echo "</TH>\n";
		}
		echo "<TR><TD class=tds>\n";
		echo "<UL id=commentlist>\n";

		while ($Comment = mysql_fetch_array($result, MYSQL_ASSOC) ) {

			$ts =  timestamp2display($Comment[date_created]);
			echo "<LI>";
			echo "<A HREF=\"/comment.phpx?comment_id=$Comment[comment_id]&Action=View\">";
			echo "<IMG SRC=/images/smallballs/greenball.gif HEIGHT=10 WIDTH=10 VALIGN=CENTER></A>\n";
			echo "&nbsp;[$ts]&nbsp;\n";
			$author_id = $Comment['author_id'];

			echo "<A HREF=\"mailto:$AuthorEmail[$author_id]\">$Who[$author_id]</A>:\n";

			echo "$Comment[comment_summary]\n";

			if ( $_REQUEST[Comment] == "Detail" ) {
				echo "<UL id=commentlistbody><LI>\n";
				echo "<PRE>\n";
				$cleantext = stripslashes($Comment[comment_detail]);
				$display = wordwrap($cleantext, 60, "\n");
				echo "$display";
				echo "</PRE>\n";
				echo "</LI></UL>\n";
			}

			echo "</LI>\n";
		}#Endwhile

		if (! $count) {
			echo "<LI>No comment entries</LI>\n";
		}
		echo "</UL>\n";
		echo "</TD>\n";
		echo "</TABLE>\n";
	
	}// End funtion show_comment_history
	//----------------------------------------------------------------
	// Function Get Warrior Full Name Picklist
	//----------------------------------------------------------------
	function get_warrior_name_picklist ( $sql ) {
		global $WICCFG;
		caa_connect();
		$row = array();
		$MyWho = array();
		if (empty ($sql) ) {
			die ("Function get_warrior_name_picklist attempted without sql statement: $sql");
		}
		$result =  mysql_query($sql);
		while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
			if ( empty ( $row['war_nname'] ) ) {
				$name = $row['war_fname'] . ' ' . $row['war_lname'];
			}else{
				$name = $row['war_nname'] . ' ' . $row['war_lname'];
			}
			$id = $row['war_id'];
			$MyWho[$id]  = $name;
		}
		return($MyWho);
	}// End funtion get_warrior_name_picklist



	//----------------------------------------------------------------
	// Function send_email_ack
	//----------------------------------------------------------------
	function send_email_ack ( array $Data ) {
		global $WICCFG;
		//
		// Config parameters for email acknowledgement
		//
		$LOGINEMAIL = array (
			'subject'		=>	"MKP Login Assistance", 
			'fromemail'		=>	"mkphelp@mkp.org",
			'toemail'		=>	"jerbowes@yahoo.com",	// Safety, overwritten in send_email_ack
			'fromname'		=>	"MKP Login Assistant" 
		);

		if ( $Data[war_email] ) {
			$LOGINEMAIL[toemail] = $Data[war_email];
			echo "<CENTER>\n";
			echo "<H2>The info has been emailed to $Data[war_email]</H2>\n";
			echo "</CENTER>\n";
		}

		echo '<pre>';	//DEBUG DEVONLY
		echo "ENTERING EMAIL ACK<BR>\n";//DEBUG DEVONLY
		echo "LOGINEMAIL<BR>\n";//DEBUG DEVONLY
		echo htmlspecialchars(print_r($LOGINEMAIL), ENT_QUOTES);	//DEBUG DEVONLY
		echo "Incoming Data<BR>\n";//DEBUG DEVONLY
		echo htmlspecialchars(print_r($Data), ENT_QUOTES);	//DEBUG DEVONLY
		echo '</pre>';	//DEBUG DEVONLY

		$fd = popen($WICCFG[MAILER],"w"); 
		//
		// Construct Mail Headers
		//
		fputs($fd, "From: $LOGINEMAIL[fromname] <$LOGINEMAIL[fromemail]>\n"); 
		fputs($fd, "To: $LOGINEMAIL[toname] <$LOGINEMAIL[toemail]>\n"); 

		if ( $Data[war_email2] ) {
			fputs($fd, "Cc: $Data[war_email2]\n"); 
			echo "<CENTER>\n";
			echo "<H2>A copy has also been sent to your alternate email $Data[war_email2]</H2>\n";
			echo "</CENTER>\n";
		}
		//
		// Subject
		//
		fputs($fd, "Subject: $LOGINEMAIL[subject]\n\n"); 
		//
		// Body
		//
		fputs($fd, "Your MKP login password has been reset. Below are your MKP login credentials\n\n"); 
		fputs($fd, "Username (Warrior User Name): $Data[access_username]\n");
		fputs($fd, "Password: $Data[password]\n\n");
		fputs($fd, "Phonetic: $Data[phonetic]\n\n");
		fputs($fd, "Expiration Date: $Data[expiration_date]\n\n");
		fputs($fd, "You must reset your password before the expiration date.\n");
		fputs($fd, "Click on the following link to log in and reset your password\n\n");
		fputs($fd, "$WICCFG[WICURL]/login.phpx?wid=$Data[war_id]&encpw=$Data[encrypted_password]&login=$Data[login]&Action=Change\n\n");
		fputs($fd, "Do not reply to this email. If you are having any difficulties, please fill\n");
		fputs($fd, "out an MKP IT helpdesk request at the following link url:\n\n");
		fputs($fd, "\thttp://helpdesk.mkp.org\n");

		pclose($fd); 
	}//End function send_email_ack

	//----------------------------------------------------------------
	// END FUNCTIONS
	//----------------------------------------------------------------
		
?>
