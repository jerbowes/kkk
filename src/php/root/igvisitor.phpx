<?php
	//#==================================================================
	//# Manage Uninitiated Men I-Group Visitors/Members
	//#------------------------------------------------------------------
	//# MKP-USA I-Group Portal
	//# Formerly Warrior Information Center (WIC)
	//# Jerry Bowes, MKP-USA IT Development Coordinator, 2010-2011
	//# Jerry Bowes, MKP-USA I-Group Council Vice-Chairman, 2011-2013
	//#------------------------------------------------------------------
	//# $URL$
	//# $Date: 2012/12/23 23:57:21 $
	//# $Source: /home/jbowes/igroupportal/src/php/root/RCS/igvisitor.phpx,v $
	//# $Id: igvisitor.phpx,v 1.3 2012/12/23 23:57:21 jbowes Exp $
	//#------------------------------------------------------------------
	//# SET EDITOR FOR 4 space TAB stops
	//# :set autoindent tabstop=4 showmatch	 (vi)
	//#==================================================================
	//#------------------------------------------------------------------
	//# To Edit subversion controlled version
	//#------------------------------------------------------------------
	//# Check out the subversion igroupportal web content directory
	//# % cd /tmp 
	//# % svn co http://svn.mkp.org/repo/igroupportal/httpdocs
	//# -or, locally on MKP1-
	//# % svn co file:///home/subversion/repo/igroupportal/httpdocs
	//#
	//# % cd /tmp/httpdocs
	//# % vi (thisfile)
	//# % svn ci [-m'<message describing change>'] (thisfile)
	//#------------------------------------------------------------------
	//# Deploy as root on mkp1
	//#------------------------------------------------------------------
	//# % cd /var/httpdocs/vhosts/igroupportal.mkp.org/httpdocs
	//# % chown -R igroupportalweb.psacln *.php
	//#==================================================================

	require_once("./include/auth-inc.phpx");
	require_once("./include/config-inc.phpx");
	require_once("./include/looknfeel-inc.phpx");
	require_once("./include/msutils-inc.phpx");
	require_once("./include/session-inc.phpx");

	//------------------------------------------------------------------------
	// START AUTH: If you are not authenticated, on to login you go
	//------------------------------------------------------------------------
	session_start();
    global $WICCFG;

	if ( ! isset ( $_SESSION['war_id'] )) {
		$url = preg_replace('/&/','|', $_SERVER['QUERY_STRING']);
		$returl = $_SERVER['PHP_SELF'];
		if (! empty ($url) ) {
			$returl .= '?' . $url;
		}
		header("Location: $WICCFG[SECWICURL]/login.phpx?RetUrl=${returl}");
		exit;
	}
	//------------------------------------------------------------------------
	// END AUTH: 
	//------------------------------------------------------------------------

	//------------------------------------------------------------------------
	// Formatting and navbar options for looknfeel-inc header and footer functions
	//------------------------------------------------------------------------
	//
	$FMT = array (
		'BANNER'		=>	"MKP Uninitiated Men In I-Groups",
		'TITLE'			=>	"MKP Uninitiated Men In I-Groups",
		'MODULENAME'	=>	"igvisitor.phpx",
		'NAV1'			=>	"INFO"	
	);

	//------------------------------------------------------------------------
	// Local configuration paremeters
	//------------------------------------------------------------------------
	$IGVCFG = array (
		'EDITLEVEL'		=>	'4',			// Access level to get edit screen
		'ADMINLEVEL'	=>	'4'			// Promote to Enroll in NWTA
	);

	//------------------------------------------------------------------------
	// Database Fields
	//------------------------------------------------------------------------
	$ALLFIELD = array(
		'igvisitor_id',
		'igvisitor_fname',
		'igvisitor_nname',
		'igvisitor_aname',
		'igvisitor_mname',
		'igvisitor_lname',
		'igvisitor_suffix',
		'igvisitor_center',
		'igvisitor_email',
		'igvisitor_street',
		'igvisitor_city',
		'igvisitor_state',
		'igvisitor_zip',
		'igvisitor_country',
		'igvisitor_hphone',
		'igvisitor_wphone',
		'igvisitor_cphone',
		'igvisitor_fphone',
		'igvisitor_status'
	);
	$VIEW = array(
		'igvisitor_fname',
		'igvisitor_nname',
		'igvisitor_lname',
		'igvisitor_aname',
		'igvisitor_suffix',
		'igvisitor_center',
		'igvisitor_email',
		'igvisitor_street',
		'igvisitor_city',
		'igvisitor_state',
		'igvisitor_zip',
		'igvisitor_country',
		'igvisitor_hphone',
		'igvisitor_wphone',
		'igvisitor_cphone',
		'igvisitor_status'
	);

	//
	//	Fields visible in query output list
	//
	$SHOW = array(
		'igvisitor_fname',
		'igvisitor_lname',
		'igvisitor_email',
		'igvisitor_center',
		'igvisitor_city',
		'igvisitor_state',
		'igvisitor_zip',
		'igvisitor_hphone',
		'igvisitor_wphone',
		'igvisitor_cphone',
		'igvisitor_status'
	);

	//
	// Fields that can have query drill down links on display
	//
	$LINK = array(
		'igvisitor_city',
		'igvisitor_state',
		'igvisitor_zip'
	);

	//
	// Required for New Entry
	//
	$RequiredField = array(
		'igvisitor_fname'		=>  'first name',
		'igvisitor_lname'		=>  'last name',
		//'igvisitor_aname'		=>  'animal name',
		'igvisitor_email'		=>  'primary email',
		//'igvisitor_street'	=>  'street address',
		'igvisitor_city'		=>  'city',
		'igvisitor_state'		=>  'state',
		//'igvisitor_zip'		=>  'zip code',
		'igvisitor_country'   =>  'country',
		//'igvisitor_hphone'	=>  'home phone',
		//'igvisitor_cphone'	=>  'cell phone',
		//'igvisitor_wphone'	=>  'work phone',
		//'igvisitor_status'	=>  'status',   // Yes, required,but hardwired to 'Visitor'
		'igvisitor_center'	=>  'center'
	);

	//
	// Global query choices
	//
	$InValidChoice = array(
		'All',
		'',
		' ',
		'None',
		'Choose'
	);
	//
	// Edit record fields with edit disabled
	//
	$NoEdit = array(
		'igvisitor_id'
	);

	$FieldType = array(
		'igvisitor_center'			=>	'MenuArray',
		'igvisitor_status'			=>	'Menu'
	);

	$Menu = array(
		"igvisitor_center"		=> "SELECT center_id, center_name from center",
		"igvisitor_status"		=> "SELECT choice from menu where table_name = 'igvisitor' AND field_name = 'igvisitor_status' ORDER BY choice"
	);

	//
	// Display exceptions from default tdcs centered display table cell
	//
	$JustifyCss = array(
		'igvisitor_name'		=>	'tds'	// small left justified
	);

	//------------------------------------------------------------------------
	// BEGIN Program
	//------------------------------------------------------------------------
	spew_header($FMT);

	if (array_key_exists(Action, $_REQUEST)) {
		echo "<PRE>\n";		// DEVONLY
		print_r($_REQUEST);	// DEVONLY
		echo "</PRE>\n";	// DEVONLY

		//----------------------------------------------------------------------
	  	// Insert New Entry
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Insert New Entry" ) {
			caa_connect();
			$today = date('Y-m-d');

			//
			// Identify data entry originator
			//
			$Who = array();
			$wid = $_SESSION['war_id'];
			$sql = "SELECT war_id, war_fname, war_lname FROM warrior WHERE war_id = '$wid'";
            echo "<P class=trace>$sql</P>\n"; // DEVONLY
            $result = mysql_query($sql);
			$Who = mysql_fetch_array($result, MYSQL_ASSOC) ;
            print_r($Who); // DEVONLY

			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('igvisitor','igvisitor');
			$fields = array_keys($fieldlabel);


			//
			// Define default values
			//
			$Default = array (
				'igvisitor_status'	=>  'Visitor',
				'igvisitor_country'   =>  'US',
				'igvisitor_center'	=>  "$_SESSION[center_id]",
				'igvisitor_change'	=>  'NOW()'
			);

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
			}

			//
			// Setup default values
			//
			foreach ($Default as $key => $val ) {
				if (  empty ( $_REQUEST[$key] )) {
					$_REQUEST[$key] = $val;
				}
			}

			//
			// Delete auto_increment primary key
			//
			unset ($_REQUEST['igvisitor_id']);

			//
			// Required fields gauntlet
			//
			foreach ($RequiredField as $key => $val) {
				if (! array_key_exists($key, $_REQUEST)) {
					if ( $key == 'igvisitor_hphone' || $key == 'igvisitor_cphone' || $key == 'igvisitor_wphone' ) {
						$missing_phone++;
					}else{
						$err .= '<LI>Please enter or select ' . $RequiredField[$key] . '.</LI>';
					}
				}else{
					if ( empty ($val) ) {
						$err .= '<LI>Please enter or select ' . $RequiredField[$key] . '.</LI>';
					}
				}
			}

			//if ($missing_phone > 2) {
				//$err .= '<LI>Please enter at least one phone number</LI>';
			//}

			if ( $err ) {
				echo "<CENTER>\n";
				echo "<H3>Incomplete Information</H3>\n";
				echo "<TABLE BORDER>\n";
				echo "<TR><TD><UL>$err</UL></TD></TABLE>\n";
				echo "</TABLE>\n";
				echo "</CENTER>\n";
				spew_footer($FMT);
				exit;
			}

			//
			// Required Gauntlet Passed, Insert record
			//
			$sql = 'INSERT INTO igvisitor (';
            $sql2 = '';
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$sql .= $f . ',';
				}
			}
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = mysql_real_escape_string($_REQUEST[$f]);
					$sql2 .= "'" . $val . "'" . ',';
				}
			}

			$finalsql = rtrim($sql, ",") .  ') VALUES (' .  rtrim($sql2, ",") . ")";
			echo "<p class=trace>$finalsql</p>\n";	//DEBUG DEVONLY
			$result = mysql_query($finalsql) or die('Error, query failed: $sql' . mysql_error() );

			echo "<CENTER>\n";
			echo "<H3>Uninitiated man/igvisitor record successfully added</H3>\n";

			$pid = mysql_insert_id();
			$_REQUEST['igvisitor_id'] = $pid;

			//----------------------------------------------------------------------
			// If this came in with an igroup_id (add uninitiated man to my I-Group)
			// Add him to that I-Group (igvisitor_igroup) and to the igvisitor_ighistory
			//----------------------------------------------------------------------
			if ( isset ( $_REQUEST['igroup_id'] )) {
				$iid =  $_REQUEST['igroup_id'];
				//
				// Get name of I-Group
				//
				$inamesql = "SELECT igroup_name from igroup where igroup_id = '$iid'";
				$igname = get_value($inamesql);

				//
				// Insert into igvisitor_igroup
				//
				$sql = "INSERT INTO igvisitor_igroup (igvisitor_id, igroup_id) VALUES ('$pid','$iid')";
				echo "<p class=trace>$sql</p>\n";	// DEVONLY
				mysql_query($sql);
				$xid = mysql_insert_id();

				if ( $pid != $xid ) {
					echo "<H3>Addition as member of <I>$igname</I> I-Group successful</H3>\n";
				}

				//
				// Insert into igvisitor_ighistory
				//
				$sql = "INSERT INTO igvisitor_ighistory (igvisitor_id, igroup_id, start_date) VALUES ('$pid','$iid','$today')";
				echo "<p class=trace>$sql</p>\n";	// DEVONLY
				mysql_query($sql);
				$hid = mysql_insert_id();

				if ( $hid != $xid ) {
					echo "<H3>Update in igvisitor I-Group history successful</H3>\n";
				}

				//
				// Identify I-Group for igvisitor_notes
				//
				$igsql = "SELECT igroup_name from igroup where igroup_id = '$iid'";
				$igroup_name = get_value($igsql);
	
				$pnote = "Created as part of adding an uninitiated member to I-Group";
				$pnote .= " <A HREF=/igroups.phpx?igroup_id=$iid&Action=View>$igroup_name</A>";
				$pnote .= " by <A HREF=/warrior.phpx?war_id=$wid&Action=View>";
				$pnote .= $Who['war_fname'] . ' ' . $Who['war_lname'];
                $pnote .= "</A> on $today";
			}


			//
			if ( isset ( $_REQUEST['igroup_id'] )) {
				//echo "<H2>Return to <A HREF=/igroups.phpx?igroup_id=$iid&Action=View>$igname</A></H2>\n";
				echo "<H2>Return to <A HREF=/igroups.phpx?Action=Manage+My+I-Group>Manage My I-Group(s)</A></H2>\n";
			}

			echo "</CENTER>\n";
			$_REQUEST['Action'] = "View";
		}

		//----------------------------------------------------------------------
	  	// Update Existing Entry 
		//----------------------------------------------------------------------
	  	if ($_REQUEST[Action] == "Update" ) {
			$Original = array();
			$Visitor = array();
			$fieldlabel = array();

			if ( array_key_exists('igvisitor_id', $_REQUEST)) {
				$pid = $_REQUEST['igvisitor_id'];
				if (! is_numeric( $pid ) ) {
					die ("ERROR: Attempt to update requires igvisitor_id to be integer. It is not.");
				}
			}else{
				die ("No Visitor Id Set") ;
			}

			caa_connect();

			//
			// Get Original Record
			//
			$sql = "SELECT * FROM igvisitor WHERE igvisitor_id = '$pid'";
			$result = mysql_query($sql);
			$Original = mysql_fetch_array($result, MYSQL_ASSOC) ;

			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('igvisitor','igvisitor');
			$fields = array_keys($fieldlabel);

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
			}
			//
			// Update only the fields that have changed
			//
			$sql = 'UPDATE igvisitor SET ';
			$sqlentry = array ();
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = $_REQUEST[$f];
					echo "<BR>$f : Comparing Orig ( $Original[$f] ) with Update ( $_REQUEST[$f] ) \n"; // DEVONLY

					if ( $_REQUEST[$f] != $Original[$f] ) {
						echo "<BR>XXX Different\n"; // DEVONLY
						$val = mysql_real_escape_string($_REQUEST[$f]);
						$sqlentry[] = $f . " = '" . $val . "'";
					}else{
						echo "<BR>YYY Same\n"; // DEVONLY
					}
				}
			}
			$sql .= implode (', ', $sqlentry);
			$sql .= " WHERE igvisitor_id = '$pid'";

			echo "<p class=trace>$sql</p>\n";	// DEVONLY DEBUG

			if (count($sqlentry)) {
				$result = mysql_query($sql) or die('Error, update failed: $sql' . mysql_error() );
				echo "<H3>Update successful</H3>\n";
			}else{
				echo "<H3>No Changes Made</H3>\n";
			}

			$_REQUEST[Action] = "View";
		}

		//----------------------------------------------------------------------
	  	// Query or Full Query
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Query") {
			caa_connect();
		    spew_query_form();
			$fieldlabel = array();

			$fieldlabel = get_field_labels('igvisitor','igvisitor');
			$fields = array_keys($fieldlabel);

			//----------------------------------------------------------
			// Capture previous selection criteria and append to links
			// To enable drill down subqueries
			//----------------------------------------------------------

			foreach(explode( '&', $_SERVER[QUERY_STRING])  as $entry ) {
				list($key, $val) = explode( '=', $entry);	

				if ( ! empty( $val ) ) {
					if (! in_array($val, $InValidChoice)) {
						if (in_array($key, $ALLFIELD) ) {
							$parameters[$key] = $val;
						}
					}
				}
			}
			$parameters['Action'] = $_REQUEST['Action'];

			//----------------------------------------------------------
			// Uniquify for duplicate entries
			//----------------------------------------------------------
			$validentries = array();

			foreach ($parameters as $key => $val ) {
				$val = preg_replace('/\s+/', '+', $val);
				$newentry = $key . '=' . $val;
				array_push($validentries, $newentry);
			}

			if (count($validentries)) {
				$drilldown = implode('&', $validentries);
			}

			//
			// Base sql query
			//
			$where = array(
				'p.igvisitor_center = c.center_id'
			);

			//
			// Construct where clause into an array from igvisitor
			//
			foreach ($fields as $f) {
				if (array_key_exists($f, $_REQUEST)) { 
					$val = mysql_real_escape_string($_REQUEST[$f]);
					if (in_array($val, $InValidChoice)){
						unset($val) ;
					}
					if ( ! empty($val) ) {	
						if ( preg_match('/%/', $val)) { 
							$where[] = 'p.' .  $f . "LIKE '" . $val . "'" ;
						}else{
							$where[] =  'p.' . $f . "='" . $val . "'" ;
						}
					}
				}
			}

			$sql = "SELECT p.*, c.center_name FROM igvisitor p, center c";

			if ( count($where) ) {
				$sql .= ' WHERE ' . implode(' AND ', $where);
			}
			//---------------------------------------------------
			// ORDER BY
			//---------------------------------------------------
			$OrderBy = array(
				'First Name'		=>	'p.igvisitor_fname, p.igvisitor_lname',
				'Last Name'		=>	'p.igvisitor_lname, p.igvisitor_fname',
				'City'		=>	'p.igvisitor_city, p.igvisitor_lname',
				'State'		=>	'p.igvisitor_state, p.igvisitor_city, p.igvisitor_lname',
				'Center'		=>	'c.center_name, p.igvisitor_state, p.igvisitor_city'
			);

			$sortby = $_REQUEST[Sortmeby];
			$sby = $OrderBy[$sortby];
			if (empty ($sby)){
				$sql .= ' ORDER BY p.igvisitor_lname, p.igvisitor_fname';
			}else{
				$sql .= ' ORDER BY ' . $sby;
			}

			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$result = mysql_query($sql);
	
			echo "<CENTER>\n";
			echo "<TABLE BORDER>\n";

			if ($_SESSION['access'] >= $IGVCFG[EDITLEVEL] ) {
				echo "<TH class=ths>Edit</TH>\n";		// SECURITY
			}

			echo "<TH class=ths>View</TH>\n";

			unset($fields[igvisitor_id]);

			foreach ($ALLFIELD as $f) {
				if (in_array($f, $SHOW)) {
					echo "<TH class=ths>$fieldlabel[$f]</TH>\n";
				}
			}

			while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
				echo "<TR>\n";

				// Edit if authorized
				if ($_SESSION['access'] >= $IGVCFG[EDITLEVEL] ) {	// SECURITY
					echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					echo "<A HREF=$_SERVER[PHP_SELF]?igvisitor_id=$row[igvisitor_id]";
					echo "&Action=Edit>";
					echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0></A>";
					echo "</TD>\n";
				}
	
				// View for everyone
				echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					echo "<A HREF=$_SERVER[PHP_SELF]?igvisitor_id=$row[igvisitor_id]";
					echo "&Action=View>";
					echo "<IMG SRC=/images/smallballs/yellowball.gif BORDER=0></A>";
				echo "</TD>\n";
	
				foreach ($ALLFIELD as $f) {
					$css = "tdcs";
					$display = stripslashes($row[$f]); 

					// Display Exceptions (lookup)
					if ( $f  == 'igvisitor_center' ) {
						$display = $row['center_name'];
					}

					if (in_array($f, $SHOW)) {

						if (array_key_exists($f, $JustifyCss)) {
							$css = $JustifyCss[$f];
						}

						echo "<TD VALIGN=TOP class=$css>";
						if (in_array($f, $LINK)) {
							echo "<A HREF=";
							echo "$_SERVER[PHP_SELF]";
							echo '?';
							$url = preg_replace('/\s+/', '+', $row[$f]);
							echo "$f=${url}"; 
							echo "&${drilldown}>";
							echo "$display</A>\n";
						}else{
							echo "$display\n";
						}
						echo "<BR></TD>\n";
					}
				}
			}
			echo "</TABLE>\n";
			echo "</CENTER>\n";
	  	}//if ($_REQUEST[Action] == "Query")) {

		//----------------------------------------------------------------------
	  	// New Entry Form
		//----------------------------------------------------------------------
	  	if ($_REQUEST[Action] == "New" ) {
			$menulist = array();
			$fieldlabel = array();
			$Default = array(
				'igvisitor_center'	=> "$_SESSION[center_id]",
				'igvisitor_country'	=>  'US',
				'igvisitor_status'	=>  'Visitor'
			);
			foreach ($Default as $field => $val ) {
				if ( empty ($_REQUEST[$field] ) ) {
					$_REQUEST[$field] = $val;
				}
			}

			$NEW = array_keys($RequiredField);

			echo "<CENTER>\n";
            echo "<H2>Enter Uninitiated Person as I-Group Member/Visitor</H2>\n";
            echo "<P class=trace>";
            echo "Enter visitor information and click <I>Insert New Entry</I> button.";
            echo "<BR>For more help, see";
            echo "<A HREF=/help.phpx?table_name=igvisitor&field_name=Overview&help_type=Explanation";
            echo "&Action=Help>";
            echo " overview</A>";
            echo "</P>\n";
            echo "<P class=trace>Field name links give help information. Field names edged in green are required.";
            echo "</P>\n";
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			$fieldlabel = get_field_labels('igvisitor','igvisitor');

			unset($fieldlabel['igvisitor_id']);
			unset($NEW['igvisitor_status']);

			foreach ($VIEW as $fieldname ) {
				$val = $fieldlabel[$fieldname];
				
				echo "<TR>\n";
                echo "<TD VALIGN=TOP CLASS=tdls>";
                echo "<A HREF=/help.phpx?table_name=igvisitor&field_name=$fieldname&help_type=Explanation&Action=Help>";
                echo "$val</A></TD>\n";

				if (in_array($fieldname, $NEW)) {
                    echo "<TD VALIGN=TOP CLASS=tds BGCOLOR=#33DD33>";
                }else{
                    echo "<TD VALIGN=TOP CLASS=tds>";
                }

				if (array_key_exists($fieldname, $FieldType)) {
					if ( $FieldType[$fieldname] == "Menu" ) {
						$menusql = $Menu[$fieldname];
						$menulist = get_menu($menusql);
						sort($menulist);
						spew_select_menu($fieldname, $Default[$fieldname], $_REQUEST[$fieldname] , $menulist);
					}

					if ($FieldType[$fieldname] == "MenuArray" ) {
						$menusql = $Menu[$fieldname];
						$menulist = get_menu_array($menusql);
						asort($menulist);
						spew_select_hash_menu($fieldname, $Default[$fieldname] , '', $menulist);
					}

					if ($FieldType[$fieldname] == "TextArea" ) {
						echo "<TEXTAREA NAME=$fieldname></TEXTAREA>\n";
					}

					if ($FieldType[$fieldname] == "LongText" ) {
						echo "<INPUT TYPE=TEXT SIZE=60 NAME=$fieldname VALUE=\"$_REQUEST[$fieldname]\">";
					}

				}else{
					echo "<INPUT TYPE=TEXT NAME=$fieldname VALUE=\"$_REQUEST[$fieldname]\">";
				}
				echo "</TD>\n";
			}
			echo "</TABLE>\n";
			if (isset ( $_REQUEST['igroup_id'] ) ) {
				$iid = $_REQUEST['igroup_id'];
				echo "<INPUT TYPE=HIDDEN NAME=igroup_id VALUE=\"$iid\">\n";
			}
			if (isset ( $_REQUEST['igroup_id'] ) ){
				echo "<INPUT TYPE=HIDDEN NAME=igvisitor_status VALUE=\"Visitor\">\n";
			}
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Insert New Entry\">\n";
			echo "</FORM>\n";
			echo "</CENTER>\n";
		}

		//----------------------------------------------------------------------
	  	// Edit 
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Edit") {
			$table = 'igvisitor';

			if ( array_key_exists('igvisitor_id', $_REQUEST)) {
				$pid = $_REQUEST[igvisitor_id];
				if ( ! is_numeric($pid) ) {
					die ("Location ID ($pid) is not an integer.") ;
				}
			}else{
				die ("No Visitor Id Set") ;
			}

			caa_connect();

			$menulist = array();

			$sql = "SELECT * FROM igvisitor WHERE igvisitor_id = '$pid'";
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;

			$fieldlabel = get_field_labels('igvisitor','igvisitor');

			echo "<CENTER>\n";
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			foreach ($VIEW as $fieldname ) {
				$label = $fieldlabel[$fieldname];
				echo "<TR><TD VALIGN=TOP class=tdls>$label</TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				if (in_array($fieldname, $NoEdit)) {
					echo "$row[$fieldname]<BR>";
				}else{
					if (array_key_exists($fieldname, $FieldType)) {

						if ( $FieldType[$fieldname] == "Menu" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu($menusql);
							sort($menulist);
							spew_select_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ($FieldType[$fieldname] == "MenuArray" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu_array($menusql);
							ksort($menulist);
							spew_select_hash_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ( $FieldType[$fieldname] == "TextArea" ) {
							echo "<TEXTAREA NAME=$fieldname COLS=60 ROWS=30>$row[$fieldname]</TEXTAREA>\n";
						}

						if ( $FieldType[$fieldname] == "LongText" ) {
							echo "<INPUT TYPE=TEXT NAME=$fieldname SIZE=60 VALUE=\"$row[$fieldname]\">\n";
						}

					}else{	// No fieldtype
						echo "<INPUT TYPE=TEXT NAME=$fieldname VALUE=\"$row[$fieldname]\"><BR>";
					}
						
				}//Endif NoEdit
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";
			echo "<INPUT TYPE=HIDDEN NAME=igvisitor_id VALUE=$pid>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Query>\n";
			if ( $_SESSION['access'] >= $IGVCFG['EDITLEVEL'] ) {   // SECURITY
				echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Update>\n";  // SECURITY
			}   // SECURITY
			echo "</FORM>\n";
			echo "</CENTER>\n";

			show_comment_history($pid, $table);

	  	}//if ($_REQUEST[Action] == "Edit") 

		//----------------------------------------------------------------------
	  	// View
		//----------------------------------------------------------------------
	  	if ($_REQUEST[Action] == "View" ) {
			$table = 'igvisitor';

			if ( array_key_exists('igvisitor_id', $_REQUEST)) {
				$vid = $_REQUEST['igvisitor_id'];
				if ( ! is_numeric($vid) ) {
					die ("Visitor ID ($vid) is not an integer.") ;
				}
			}else{
				die ("No Visitor Id Set") ;
			}

			caa_connect();

			$menulist = array();

			$sql = "SELECT * FROM igvisitor WHERE igvisitor_id = '$vid'";
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;

			$fieldlabel = get_field_labels('igvisitor','igvisitor');

			echo "<CENTER>\n";
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			foreach ($VIEW as $fieldname ) {
				$label = $fieldlabel[$fieldname];
				echo "<TR><TD VALIGN=TOP class=tdls>$label</TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				$display = stripslashes($row[$fieldname]);
				//
				// View Entry Lookup Map Translations (id -> othertable.name for foreign keys)
				//
				if ( $fieldname == "igvisitor_center" ) {
					$sql = "SELECT center_name from center where center_id = '$row[igvisitor_center]'";
					$display = get_value($sql);
				}

				echo "$display<BR>";
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Query>\n";
			echo "</FORM>\n";

			//
			// Transfer to Prospect for NWTA
			//
            if ( $_SESSION['access'] >= $IGVCFG['ADMINLEVEL'] ) {
			    echo "<FORM ACTION=/prospect.phpx TYPE=POST>\n";
			    echo "<INPUT TYPE=HIDDEN NAME=igvisitor_id VALUE=$vid>\n";
			    echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Enroll In NWTA\">\n";
			    echo "</FORM>\n";
            }

			//
			// Show Comment History
			//
			echo "<FORM ACTION=/comment.phpx TYPE=POST>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_id VALUE=$vid>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_name VALUE=$table>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Add Comment\">\n";
			echo "</FORM>\n";

			show_comment_history($pid, $table);

			echo "</CENTER>\n";
	  	}//if ($_REQUEST[Action] == "View")

		//----------------------------------------------------------------------
		// END 'Action' Processing Options
		//----------------------------------------------------------------------

	}else{	// No Action Field
		spew_query_form();
	}

	spew_footer($FMT);
	//----------------------------------------------------------------
	// Function spew_query_form
	//----------------------------------------------------------------
	function spew_query_form() {
		global $WICCFG;
		caa_connect();
		$list = array();

		echo "<P class=trace>";
		echo "For help, see ";
		echo "<A HREF=$WICCFG[WICURL]/help.phpx?table_name=igvisitor&field_name=Overview&Action=Help>overview</A>.";
		echo "</P>\n";

		echo "<CENTER>\n";
		echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
		echo "<TABLE BORDER>\n";
		echo "<TH class=ths>First Name</TH>\n";
		echo "<TH class=ths>Last Name</TH>\n";
		echo "<TH class=ths>Center</TH>\n";
		echo "<TH class=ths>City</TH>\n";
		echo "<TH class=ths>State</TH>\n";
		echo "<TH class=ths>Sort By</TH>\n";

		echo "<TR>\n";

		// First Name
		echo "<TD class=tds>\n";
		echo "<INPUT TYPE=TEXT NAME=igvisitor_fname SIZE=8>\n";
		echo "</TD>\n";

		// Last Name
		echo "<TD class=tds>\n";
		echo "<INPUT TYPE=TEXT NAME=igvisitor_lname SIZE=8>\n";
		echo "</TD>\n";

		// Center
		echo "<TD class=tds>\n";
		$sql = "SELECT center_id, center_name from center order by center_name";
		$list = get_menu_array($sql);
		spew_select_hash_menu('igvisitor_center',$_SESSION['center_id'],'All',$list);
		echo "</TD>\n";

		// City
		echo "<TD class=tds>\n";
		echo "<INPUT TYPE=TEXT NAME=igvisitor_city SIZE=8>\n";
		echo "</TD>\n";

		// State
		echo "<TD class=tds>\n";
		echo "<INPUT TYPE=TEXT NAME=igvisitor_state SIZE=6>\n";
		echo "</TD>\n";

		// Sort By
		echo "<TD class=tds>\n";
		$sortby = array (
			'First Name',
			'Last Name',
			'City',
			'State',
			'Center'
			);
		sort($sortby);
		spew_select_menu('Sortmeby','','Last Name',$sortby);
		echo "</TD>\n";

		// End Table
		echo "</TR>\n";
		echo "</TABLE>\n";
		echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Query>\n";
		echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=New>\n";
		echo "</FORM>\n";
		echo "</CENTER>\n";
	}

	//----------------------------------------------------------------
	// Function Show Comment History
	//----------------------------------------------------------------
	function show_comment_history ( $cid, $ctable ) {
		global $WICCFG;
		$subname = "show_comment_history";
		echo "<P class=trace>Entering $subname in $program, cid is $cid, table is $ctable </P>\n" ; // DEBUG DEVONLY;
	
		$Default = array( 
			"author_id"			=>	"45759",
			"comment_type"		=>	"Comment",
			"sortby"			=>	'Date Submitted'
			);
	
		$NoPropagate = array( 
			"sortby"	=>					"sort by",
			"thread"	=>					"thread"
			);
	
		caa_connect;

		//
		// Get List of nicknames for comment authors
		//
		$Who = array();
		$sql = "SELECT w.war_id, w.war_fname, w.war_nname, w.war_lname, war_email from warrior w, comment c";
		$sql .= " WHERE w.war_id = c.author_id ";
		$sql .= " AND c.table_name = '$ctable' AND c.table_id = '$cid' ";
		$Who = get_warrior_name_picklist($sql);

		//
		// Get List of emails for comment authors
		//
		$AuthorEmail = array();
		$sql = "SELECT w.war_id , war_email from warrior w, comment c";
		$sql .= " WHERE w.war_id = c.author_id ";
		$sql .= " AND c.table_name = '$ctable' AND c.table_id = '$cid' ";
		$AuthorEmail = get_menu_array($sql);

		//
		// Get List of existing comment types
		//
		$sql = "SELECT distinct comment_type from comment";
		$ctypes =  get_menu($sql);

		//
		// Generate SQL query
		//
	
		$fieldlabel = get_field_labels('comment','comment');
		$fields = array_keys($fieldlabel);
	
		$sql = "SELECT  ";
		$sql .= " c.comment_id, c.comment_access,  c.author_id, c.date_created, c.comment_type,";
		$sql .= " c.comment_summary, c.comment_detail"; 
		$sql .= " FROM comment c WHERE c.table_name = '$ctable' and c.table_id = '$cid' ";

		$sql .= " ORDER BY c.date_created desc";
		
		echo  "<P class=trace>$sql</P>\n" ; // DEBUG DEVONLY;

		//
		// Fetch and prepackage via sort/thread criteria WWWW
		//

		$TotalEntries = '0';
		$result = mysql_query($sql);
		$rowcount = mysql_num_rows($result);
		$Sort = array();
		$Comment = array();
		$Allauthors = array();
	
		//--------------------------------------------------------
		// Print Comment History
		//--------------------------------------------------------
		$url = $_SERVER['QUERY_STRING'];

		print "<P class=trace>Incoming URI: $url</P>\n"; // DEVONLY DEBUG

		if ( $_REQUEST[Comment] == "Detail" ) {
			$url = preg_replace('/=Detail/', '=Summary', $url);
			print "<P class=trace>Detail: url: ${url}</P>\n"; // DEVONLY DEBUG
			//print "<P class=trace><A HREF=\"$_SERVER[PHP_SELF]?$url\">Show Comment Summary Only</P>\n";
		}else{
			$url = preg_replace('/&Comment=Summary/', '', $url);
			print "<P class=trace>NO Detail: url: $url</P>\n"; // DEVONLY DEBUG
			//print "<P class=trace><A HREF=\"$_SERVER[PHP_SELF]?${url}&Comment=Detail\">Show Comment Details</P>\n";
		}

		$count = mysql_num_rows($result);
		echo "<CENTER>\n";
		$howmany = "Entries";

		if ( $count == "1" ) {
			$howmany = "Entry";
		}
		echo "<TABLE id=${ctable}_comment_table BORDER CELLSPACING=2 CELLPADDING=4>\n";

		if ( $_REQUEST['Comment'] == "Detail" ) {
			echo "<TH class=ths>Details of $count Comment $howmany\n";
			echo "(Show <A HREF=\"$_SERVER[PHP_SELF]?$url\">summaries only</A>.)";
			echo "</TH>\n";
		}else{
			echo "<TH class=ths>Summary of $count Comment $howmany\n";
			echo "(Show <A HREF=\"$_SERVER[PHP_SELF]?${url}&Comment=Detail\">details</A>.)";
			echo "</TH>\n";
		}
		echo "<TR><TD class=tds>\n";
		echo "<UL id=commentlist>\n";

		while ($Comment = mysql_fetch_array($result, MYSQL_ASSOC) ) {

			$ts =  timestamp2display($Comment[date_created]);
			echo "<LI>";
			//echo "<A HREF=\"/comment.phpx?comment_id=$Comment[comment_id]&Action=View\">";
			//echo "<IMG SRC=/images/smallballs/greenball.gif HEIGHT=10 WIDTH=10 VALIGN=CENTER></A>\n";
			echo "&nbsp;[$ts]&nbsp;\n";
			$author_id = $Comment['author_id'];

			echo "<A HREF=\"mailto:$AuthorEmail[$author_id]\">$Who[$author_id]</A> :\n";

			echo "$Comment[comment_summary]\n";

			if ( $_REQUEST[Comment] == "Detail" ) {
				echo "<UL id=commentlistbody><LI>\n";
				echo "<PRE>\n";
				$cleantext = stripslashes($Comment[comment_detail]);
				$display = wordwrap($cleantext, 60, "\n");
				echo "$display";
				echo "</PRE>\n";
				echo "</LI></UL>\n";
			}

			echo "</LI>\n";
		}#Endwhile

		if (! $count) {
			echo "<LI>No comment entries</LI>\n";
		}
		echo "</UL>\n";
		echo "</TD>\n";
		echo "</TABLE>\n";
	
	}// End funtion show_comment_history

	//----------------------------------------------------------------
	// Function Get Warrior Full Name Picklist
	//----------------------------------------------------------------
	function get_warrior_name_picklist ( $sql ) {
		global $WICCFG;
		caa_connect();
		$row = array();
		$MyWho = array();
		echo "<P class=trace>entering get_warrior_name_picklist: $sql</P>\n";   // DEVONLY
		if (empty ($sql) ) {
			die ("Function get_warrior_name_picklist attempted without sql statement: $sql");
		}
		$result =  mysql_query($sql);
		while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
			if ( empty ( $row['war_nname'] ) ) {
				$name = $row['war_fname'] . ' ' . $row['war_lname'];
			}else{
				$name = $row['war_nname'] . ' ' . $row['war_lname'];
			}
			$id = $row['war_id'];
			$MyWho[$id]  = $name;
		}
		return($MyWho);
	}// End funtion get_warrior_name_picklist

	//----------------------------------------------------------------
	// END FUNCTIONS
	//----------------------------------------------------------------
		
?>
