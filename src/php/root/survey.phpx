<?php
	//#==================================================================
	//# Survey Utility
	//#------------------------------------------------------------------
	//# MKP-USA I-Group Portal
	//# Formerly Warrior Information Center (WIC)
	//# Jerry Bowes, MKP-USA IT Development Coordinator, 2010-2011
	//# Jerry Bowes, MKP-USA I-Group Council Vice-Chairman, 2011-2013
	//#------------------------------------------------------------------
	//# $URL$
	//# $Date: 2013/05/14 14:48:31 $
	//# $Source: /home/jbowes/igroupportal/src/php/root/RCS/survey.phpx,v $
	//# $Id: survey.phpx,v 1.121 2013/05/14 14:48:31 jbowes Exp $
	//#------------------------------------------------------------------
	//# SET EDITOR FOR 4 space TAB stops
	//# :set autoindent tabstop=4 showmatch	 (vi)
	//#==================================================================
	//#------------------------------------------------------------------
	//# To Edit subversion controlled version
	//#------------------------------------------------------------------
	//# Check out the subversion igroupportal web content directory
	//# % cd /tmp 
	//# % svn co http://svn.mkp.org/repo/igroupportal/httpdocs
	//# -or, locally on MKP1-
	//# % svn co file:///home/subversion/repo/igroupportal/httpdocs
	//#
	//# % cd /tmp/httpdocs
	//# % vi (thisfile)
	//# % svn ci [-m'<message describing change>'] (thisfile)
	//#------------------------------------------------------------------
	//# Deploy as root on mkp1
	//#------------------------------------------------------------------
	//# % cd /var/httpdocs/vhosts/igroupportal.mkp.org/httpdocs
	//# % svn update
	//# % chown -R igroupportalweb.psacln *.php
	//#==================================================================

	require_once("./include/auth-inc.phpx");
	require_once("./include/config-inc.phpx");
	require_once("./include/looknfeel-inc.phpx");
	require_once("./include/msutils-inc.phpx");
	require_once("./include/session-inc.phpx");

	//--------------------------------------------------------------------------
	// If you are not authenticated (no war_id in $_SESSION), 
	// Construct return url and redirect to login for authentication
	//--------------------------------------------------------------------------
	//
	session_start();

	if ( ! isset ( $_SESSION['war_id'] )) {
		if (array_key_exists('QUERY_STRING', $_SERVER)){
			$param = preg_replace('/&/', '|', $_SERVER['QUERY_STRING'] );
			$returl =  $_SERVER['PHP_SELF'] . '?' .  $param;
			header("Location: $WICCFG[WICURL]/login.phpx?RetUrl=$returl");;
		}else{
			$returl =  $_SERVER['PHP_SELF'];
			header("Location: $WICCFG[WICURL]/login.phpx?RetUrl=$returl");;
		}
		exit;
	}

	//------------------------------------------------------------------------
	// Formatting and navbar options for looknfeel-inc header and footer functions
	//------------------------------------------------------------------------
	//
	$FMT = array (
		'BANNER'		=>	"Survey",
		'TITLE'			=>	"Survey",
		'MODULENAME'	=>	"Survey",
		'NAV1'		=>	"INFO"	// Level 1 menu navigation group
	);

	//------------------------------------------------------------------------
	// Local configuration paremeters
	//------------------------------------------------------------------------
	$SURVEYCFG = array (
		'EDITLEVEL'		=>	'7'			// Access level to get edit screen
	);

	//------------------------------------------------------------------------
	// Database Fields
	//------------------------------------------------------------------------
	$SURVEYFIELD = array(
		'survey_id',
		'survey_name',
		'author_id',
		'open_date',
		'close_date',
		'audience',
		'survey_description'
	);

	//
	//	Fields visible in query output list
	//
	$SHOW = array(
		'author_id',
		'survey_name',
		'open_date',
		'close_date',
		'audience'
	);

	//
	// Fields that can have query drill down links on display
	//
	$LINK = array(
		'audience'
	);
	//
	// Fields that are from a Menu Picklist that can have new members
	//
	$EXTEND = array(
	);

	//
	// Required for New Entry
	//
	$RequiredField = array(
		'survey_name'			=>	'enter name of survey',
		'author_id'				=>	'log in to capture author of survey',
		'open_date'				=>	'select survey open date',
		'close_date'			=>	'select closing date of survey',
		'audience'				=>	'enter target audience of survey',
		'survey_description'	=>	'enter description of survey'
	);
	//
	// Global query choices
	//
	$InValidChoice = array(
		'All',
		'',
		' ',
		'None',
		'Choose'
	);
	//
	// Edit record fields with edit disabled
	//
	$NoEdit = array(
		'survey_id'
	);

	$FieldType = array(
		'audience'				=>	'LongText',
		'survey_name'			=>	'LongText',
		'author_id'				=>	'Who',
		'open_date'				=>	'Date',
		'close_date'			=>	'Date',
		'survey_description'	=>	'TextArea'
	);

	$Menu = array(
	);

	//
	// Display exceptions from default tdcs centered display table cell
	//
	$JustifyCss = array(
		'survey_name'		=>	'tds'	// small left justified
	);

	//------------------------------------------------------------------------
	// BEGIN Program
	//------------------------------------------------------------------------

	spew_header($FMT);
	if (!array_key_exists('Action', $_REQUEST)) {
		$_REQUEST['Action'] = 'List Open';
	}

	if (array_key_exists(Action, $_REQUEST)) {
		echo "<PRE>\n";		// DEVONLY
		print_r($_REQUEST);	// DEVONLY
		echo "</PRE>\n";	// DEVONLY

		//----------------------------------------------------------------------
	  	// Insert New Entry
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Insert New Entry" ) {
			$dbh = caa_connect();
			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('survey','survey',$WICCFG['DBNAME']);
			$fields = array_keys($fieldlabel);


			// Setup default values
			foreach ($Default as $key => $val ) {
				if ( ! isset ( $_REQUEST[$key]) ) {
					$_REQUEST[$key] = $val;
				}
			}

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
				if (in_array($_REQUEST[$altkey], $InValidChoice)) {
					unset ($_REQUEST[$altkey]);
				}
			}

			//
			// Delete auto_increment primary keys
			//
			unset ($_REQUEST['survey_id']);

			//
			// Requred fields gauntlet
			//
			foreach ($RequiredField as $key => $val) {
				if (! array_key_exists($key, $_REQUEST)) {
					$err .= '<LI>Please ' . $RequiredField[$key] . '.</LI>';
				}
			}
			if ( $err ) {

				echo "<CENTER>\n";
				echo "<H3>Incomplete Information</H3>\n";
				echo "<TABLE BORDER>\n";
				echo "<TR><TD><UL>$err</UL></TD></TABLE>\n";
				echo "</TABLE>\n";
				echo "</CENTER>\n";
				spew_footer($FMT);
				exit;
			}

			$sql = 'INSERT INTO survey (';
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$sql .= $f . ',';
				}
			}
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = mysql_real_escape_string($_REQUEST[$f]);
					$sql2 .= "'" . $val . "'" . ',';
				}
			}

			$finalsql = rtrim($sql, ",") .  ') VALUES (' .  rtrim($sql2, ",") . ")";
			echo "<p class=trace>$finalsql</p>\n";	//DEBUG DEVONLY
			$result = mysql_query($finalsql) or die('Error, query failed: $sql' . mysql_error() );

			echo "<CENTER>\n";
			echo "<H2>Record successfully added</H2>\n";
			echo "</CENTER>\n";
		}

		//----------------------------------------------------------------------
	  	// Review
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Review" 
	  		|| $_REQUEST['Action'] == "My Survey" ) {

			global $WICCFG;
			if ( array_key_exists('survey_id', $_REQUEST)) {
				if ( isset ( $_REQUEST['survey_id'] ) ) {
					$survey_id = $_REQUEST['survey_id'];
				}else{
					die ("No Survey ID in view function") ;
				}
				if ( ! is_numeric($survey_id) ) {
					die ("Survey ID ($survey_id) is not an integer.") ;
				}
			}else{
				die ("No Survey Id Set") ;
			}
			$wid = $_SESSION['war_id'];

			$dbh = caa_connect();

			//mysql> desc surveyquestion
			//+-----------------------------+------------------+------+-----+---------+----------------+
			//| Field                       | Type             | Null | Key | Default | Extra          |
			//+-----------------------------+------------------+------+-----+---------+----------------+
			//| surveyquestion_id           | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| author_id                   | int(10) unsigned | YES  |     | NULL    |                |
			//| surveyquestion_question     | varchar(120)     | YES  |     | NULL    |                |
			//| surveyquestion_type         | varchar(30)      | YES  |     | NULL    |                |
			//| surveyquestion_instructions | text             | YES  |     | NULL    |                |
			//+-----------------------------+------------------+------+-----+---------+----------------+

			//mysql> desc surveymanifest;
			//+-------------------+------------------+------+-----+---------+----------------+
			//| Field             | Type             | Null | Key | Default | Extra          |
			//+-------------------+------------------+------+-----+---------+----------------+
			//| surveymanifest_id | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| surveysection_id  | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| survey_id         | int(10) unsigned | NO   |     | NULL    |                |
			//| surveyquestion_id | int(10) unsigned | YES  |     | NULL    |                |
			//| sequence          | tinyint(4)       | YES  |     | NULL    |                |
			//+-------------------+------------------+------+-----+---------+----------------+

			//mysql> describe surveyanswer;
			//+---------------------+------------------+------+-----+---------+----------------+
			//| Field               | Type             | Null | Key | Default | Extra          |
			//+---------------------+------------------+------+-----+---------+----------------+
			//| surveyanswer_id     | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| surveyanswer_answer | varchar(120)     | YES  |     | NULL    |                |
			//| answer_type         | varchar(30)      | YES  |     | NULL    |                |
			//| valid_range         | varchar(80)      | YES  |     | NULL    |                |
			//| answer_value        | text             | YES  |     | NULL    |                |
			//+---------------------+------------------+------+-----+---------+----------------+

			//mysql> desc surveyresult;
			//+-----------------+------------------+------+-----+---------+----------------+
			//| Field           | Type             | Null | Key | Default | Extra          |
			//+-----------------+------------------+------+-----+---------+----------------+
			//| surveyresult_id | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| survey_id       | int(10) unsigned | NO   |     | NULL    |                |
			//| question_id     | int(10) unsigned | NO   |     | NULL    |                |
			//| answer_id       | int(10) unsigned | NO   |     | NULL    |                |
			//| author_id       | int(10) unsigned | NO   |     | NULL    |                |
			//| answer_value    | text             | YES  |     | NULL    |                |
			//+-----------------+------------------+------+-----+---------+----------------+
			//-------------------------------------------
			// Get information from Survey
			//-------------------------------------------
			//
			$row = array();
			$Survey = array();
			$today = date('Y-m-d');
			$todayts = strtotime($today);

			$sql = "SELECT * FROM survey where survey_id = '$survey_id'";
			echo "<p class=trace>$sql</p>\n";	//DEBUG DEVONLY
			$sresult = mysql_query($sql);
			$Survey = mysql_fetch_array($sresult, MYSQL_ASSOC) ;
			$close_date = $Survey['close_date'];
			$close_datets = strtotime($close_date);
			$open_date = $Survey['open_date'];
			$open_datets = strtotime($open_date);
			echo "<p class=trace> ( $today < $close_date  ??)  </p>\n";		//	DEBUG DEVONLY
			echo "<p class=trace> ( $todayts < $close_datets  ??)  </p>\n";	//	DEBUG DEVONLY
			print_r($Survey);	// DEVONLY
			
			if ( $survey_id > 100 ) {
				if ($todayts < $close_datets  ) {
					echo "<CENTER>\n";
					echo "<H1>Survey <I>$Survey[survey_name]</I> still open, results not yet available.";
					echo "<BR>Results will be available after survey close date of $close_date.";
					echo "</H1>\n";
					echo "</CENTER>\n";
					//
					// Back door for administrator to pre-review prior to close date
					//
					if ( $_SESSION['access'] < $SURVEYCFG['EDITLEVEL'] ) {
						spew_footer($FMT);	// LIVEONLY
						exit;				// LIVEONLY
					}else{
						echo "<CENTER>\n";
						echo "<H1>Pre-Close Survey <I>$Survey[survey_name]</I> Results.";
						echo "<BR>Survey gathering period from $open_date to $close_date.";
						echo "</H1>\n";
						echo "</CENTER>\n";
					}
				}else{
					echo "<CENTER>\n";
					echo "<H1>Survey <I>$Survey[survey_name]</I> Results.";
					echo "<BR>Survey gathering period from $open_date to $close_date.";
					echo "</H1>\n";
					echo "</CENTER>\n";
				}
			}else{
				echo "<CENTER>\n";
				echo "<H1>Survey <I>$Survey[survey_name]</I> Results.";
				echo "</H1>\n";
				echo "</CENTER>\n";
			}

			//-------------------------------------------
			// Generate linked list sequence arrays
			//-------------------------------------------
			//
			$row = array();
			$rrow = array();
			$Ans=array();

			$sql = "SELECT m.*, c.surveysection_name, q.surveyquestion_question, q.surveyquestion_type";
			$sql .= " FROM surveymanifest m, surveysection c, surveyquestion q";
			$sql .= " WHERE m.survey_id = '$survey_id'";
			$sql .= " AND m.surveysection_id = c.surveysection_id";
			$sql .= " AND m.surveyquestion_id = q.surveyquestion_id";
			$sql .= " ORDER BY c.surveysection_id, c.sequence";

			echo "<p class=trace>$sql</p>\n";	//DEBUG DEVONLY
			
			$result = mysql_query($sql);
			unset($lastsecid);

			while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
				//-----------------------------------------
				// Question Loop
				//-----------------------------------------
				//
				print_r($row);	// DEVONLY
				$secid = $row['surveysection_id'];
				$qid = $row['surveyquestion_id'];

				if ( $secid != $lastsecid ){
					$secidx++;
					echo "<H1 class=surveysection>${secidx}.0 $row[surveysection_name]</H1>\n";
					$qcnt=1;
				}else{
					$qcnt++;
				}
				echo "<P class=trace>qcnt is $qcnt, lastqcnt is $lastqcnt</P>\n"; // DEVONLY

				echo "<H2 class=surveyquestion>${secidx}.${qcnt} $row[surveyquestion_question]</H2>\n";

				//------------------------------------
				// Response Loop, Calculate Aggregates
				//------------------------------------
				//
				$rsql = "SELECT DISTINCT r.*, a.*,";
				$rsql .= " count(r.answer_value) as valcount,";
				$rsql .= " count(a.surveyanswer_answer) as anscount";
				$rsql .= " FROM surveyresult r, surveyanswer a ";
				$rsql .= " WHERE r.survey_id = '$survey_id'";
				$rsql .= " AND a.surveyanswer_id = r.surveyanswer_id";
				$rsql .= " AND r.surveyquestion_id = '$qid'";

				if ($_REQUEST['Action'] == 'My Survey' ) {
					$rsql .= " AND r.responder_id = '$wid'";
				}

				$rsql .= " GROUP BY a.surveyanswer_answer, r.answer_value ";
				$rsql .= " ORDER BY a.surveyanswer_answer, r.answer_value DESC";

				echo "<p class=trace>$rsql</p>\n";	//DEBUG DEVONLY
				$rresult = mysql_query($rsql);

				echo "<P class=trace>$row[surveyquestion_type]</P>\n"; // DEVONLY


				//======================================================
				// Entire Survey Calculate: Aggregates and Totals
				//======================================================
				//

				//------------------------------------------------------------------------
				// Select from List 
				//------------------------------------------------------------------------

				if ( $row['surveyquestion_type'] == 'Select From Menu' ) {
					global $WICCFG;
					echo "<P class=trace>Entering Select From Menu Aggregator</P>\n";	// DEVONLY
					$FromMenuDisplay = array();
					$xrow = array();
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						echo "<PRE>\n";		// DEVONLY
						print_r($rrow);	 // DEVONLY
						echo "</PRE>\n";	// DEVONLY
						$answer = $rrow['answer_value'];
						$query = $rrow['surveyanswer_answer'];
						echo "<P class=trace><B>MENU</B> with key $answer value of anscount $rrow[anscount]</P>\n"; // DEVONLY
						echo "<P class=trace><B>MENU</B> query is $query</P>\n"; // DEVONLY

						$dbhx = caa_connect();
						var_dump($dbhx); // DEVONLY
						echo "<P class=trace><B>MENU</B> Made Connection </P>\n"; // DEVONLY


						echo "<P class=trace><B>MENU</B> Ready for prepare</P>\n"; // DEVONLY
						$stmt = $dbhx->prepare("$query");
						echo "<P class=trace><B>MENU</B> Executed prepare: $stmt</P>\n"; // DEVONLY

						echo "<P class=trace><B>MENU</B> Ready for bind</P>\n"; // DEVONLY
            			$stmt->bind_param("i", $answer);
						echo "<P class=trace><B>MENU</B> Executed bind s to $answer</P>\n"; // DEVONLY

						echo "<P class=trace><B>MENU</B> Ready for execute</P>\n"; // DEVONLY
	     				if ( $stmt->execute() == true ){
							echo "<P class=trace><B>MENU</B> Execute is true </P>\n"; // DEVONLY
		          			$xrow = $stmt->fetch(); 
							echo "<P class=trace><B>MENU</B> returned $xrow[0] $xrow[1]</P>\n"; // DEVONLY
						}
						$stmt->close();
					}
				}

				if ( $row['surveyquestion_type'] == 'Select Man In My Center' ) {
					global $WICCFG;
					echo "<P class=trace>Entering Select Man In My Center From Menu Aggregator</P>\n";	// DEVONLY
					$FromMenu = array();
					$FromMenuDisplay = array();
					$xrow = array();
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						echo "<PRE>\n";	// DEVONLY
						print_r($rrow); // DEVONLY
						echo "</PRE>\n";	// DEVONLY
						$answer = $rrow['answer_value'];
						$query = $rrow['surveyanswer_answer'];
						$FromMenu[$answer] += $rrow['anscount'];
						echo "<P class=trace><B>MENU</B> with anser key $answer value of anscount $rrow[anscount]</P>\n"; // DEVONLY
						echo "<P class=trace><B>MENU</B> query is [$query]</P>\n"; // DEVONLY

						// create a prepared statement 
						$query = 'SELECT war_fname, war_lname from warrior where war_id=?';
						echo "<P class=trace><B>MENU</B> Hotwired query is [$query]</P>\n"; // DEVONLY

						$dbhx = caa_connect();
						$stmt = $dbhx->prepare("$query");
            			$stmt->bind_param("i", $answer);

	     				if ( $stmt->execute( ) == true ){
		          			$xrow = $stmt->fetch();
							echo "<P class=trace><B>MENU</B> Fetch returned $xrow[0] $xrow[1]</P>\n"; // DEVONLY
							$display = "<A HREF=/warrior.phpx?war_id=$answer&Action=View>$xrow[0] $xrow[1]</A>";
							$FromMenuDisplay[$display] += $rrow['anscount'];
						}else{
							echo "<P class=trace>Execute != true</P>\n"; 	// DEVONLY
						}
					}
				}

				//------------------------------------------------------------------------
				// Rating
				//------------------------------------------------------------------------
				// Select from Lists
				//------------------------------------------------------------------------
				print_r($rrow); // DEVONLY
				if ( $row['surveyquestion_type'] == 'Select One Of Many' 
					|| $row['surveyquestion_type'] == 'Select From List' ) {
					echo "<P class=trace>Entering Select One Of Many/ From List  Aggregator</P>\n";	// DEVONLY
					$OneOfMany = array();

					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						print_r($rrow);	// DEVONLY
						if ($row['surveyquestion_type'] == 'Select From List' ) {
							$answer = $rrow['answer_value'];
						}else{
							$answer = $rrow['surveyanswer_answer'];
						}
						$OneOfMany[$answer] += $rrow['anscount'];
						echo "<P class=trace>Adding to OneOfMany: key $answer, anscount $rrow[anscount]</P>\n"; // DEVONLY
					}
				}

				if ( $row['surveyquestion_type'] == 'Select One Or Several Of Many' ) {
					echo "<P class=trace>Entering Select One Of Several Aggregator</P>\n";	// DEVONLY
					$OneOfSeveral = array();
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						print_r($rrow); // DEVONLY
						$answer = $rrow['surveyanswer_answer'];
						$OneOfSeveral[$answer] += $rrow['anscount'];
						echo "<P class=trace>OneOfSeveral: Adding to OneOfSeveral with key $answer value of anscount $rrow[anscount]</P>\n"; // DEVONLY
					}
				}
				//------------------------------------------------------------------------
				// Rating
				//------------------------------------------------------------------------
				if ( $row['surveyquestion_type'] == 'Rate Each 1-4' ) {
					echo "<P class=trace>Entering Rate Each 1-4 Aggregator</P>\n";	// DEVONLY
					$RatingOfFour = array();
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						print_r($rrow);	// DEVONLY
						$answer = $rrow['surveyanswer_answer'];
						$rating = $rrow['answer_value'];
						$key = $answer . '|' . $rating;
						$RatingOfFour[$key] .= $rrow['anscount'];
						echo "<P class=trace>Appending anscount $rrow[anscount] to RatingOfFour with key [$key] </P>\n";	// DEVONLY
					}
				}
				if ( $row['surveyquestion_type'] == 'Rate Each 1-9' ) {
					$RatingOfNine = array();
					echo "<P class=trace>Entering Rate Each 1-9 Aggregator</P>\n";	// DEVONLY
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						print_r($rrow); // DEVONLY
						$answer = $rrow['surveyanswer_answer'];
						$rating = $rrow['answer_value'];
						$key = $answer . '|' . $rating;
						$RatingOfNine[$key] .= $rrow['anscount'];
						echo "<P class=trace>Appending anscount $rrow[anscount] to RatingOfNine with key [$key] </P>\n";	// DEVONLY
					}
				}

				//------------------------------------------------------------------------
				// Ranking
				//------------------------------------------------------------------------
				if ( $row['surveyquestion_type'] == 'Rank Each 1-4'  
					||  $row['surveyquestion_type'] == 'Rank Each 1-9'  
					||  $row['surveyquestion_type'] == 'Rank Each In Order' ) {

					echo "<P class=trace>Entering Rank Aggregator</P>\n";	// DEVONLY
					$RankOrder = array();
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						print_r($rrow); // DEVONLY

						$answer = $rrow['surveyanswer_answer'];
						$rank = $rrow['answer_value'];
						$key = $answer . '|' . $rank;
						$RankOrder[$key] = $rrow['anscount'];
						echo "<P class=trace>Setting RankOrder with key [$key] to $rrow[anscount]</P>\n";	// DEVONLY
					}
				}

				//------------------------------------------------------------------------
				// Open Text Answers
				//------------------------------------------------------------------------

				if ( $row['surveyquestion_type'] == 'Open Short Answer' ) {
					echo "<P class=trace>Entering Open Short Answer  Aggregator</P>\n";	// DEVONLY
					$TextAns = '';
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						print_r($rrow); // DEVONLY
						$answer = $rrow['answer_value'];
						$TextAns .= "<LI>" . $answer . "</LI>";
						echo "<P class=trace>Appending [$answer] to TextAns</P>\n";	// DEVONLY
					}
				}
				if ( $row['surveyquestion_type'] == 'Open Long Answer' ) {
					echo "<P class=trace>Entering Open Long Answer Aggregator</P>\n";	// DEVONLY
					$LongTextAns = '';
					while ($rrow = mysql_fetch_array($rresult, MYSQL_ASSOC) ) {
						print_r($rrow); // DEVONLY
						$answer = $rrow['answer_value'];
						$LongTextAns .= "<LI>" . $answer . "</LI>";
						echo "<P class=trace>Appending [$answer] to LongTextAns</P>\n";	// DEVONLY
					}
				}


				//======================================================================
				// When question changes, dump answers to prior question
				//======================================================================
				//
				if ($qcnt != $lastqcnt ) {
					echo "<TABLE>\n";

					if ( $row['surveyquestion_type'] == 'Select From Menu' 
						|| $row['surveyquestion_type'] == 'Select Man In My Center' ) {

						$Tot=0;
						print_r( $FromMenuDisplay);	// DEVONLY
						foreach ($FromMenuDisplay as $ans => $count) {
							$Tot += $count;
						}

						echo "<TH class=ths>Response</TH>\n";
						echo "<TH class=ths>Number</TH>\n";
						echo "<TH class=ths>Pct of Total</TH>\n";
						foreach ( $FromMenuDisplay as $ans => $count ) {
							echo "<TR>\n";
							echo "<TD class=tds>$ans</TD>";
							echo "<TD class=tdrs>$count</TD>";
							$numpct = (100 * ($count / $Tot));
							$pct = sprintf('%03.1f', $numpct);
							echo "<TD class=tdrs>$pct</TD>";
						}

					}


					if ( $row['surveyquestion_type'] == 'Select One Of Many' 
						|| $row['surveyquestion_type'] == 'Select From List' ) {
						$Tot=0;
						print_r($OneOfMany);	// DEVONLY

						foreach ($OneOfMany as $ans => $count) {
							$Tot += $count;
						}

						echo "<TH class=ths>Response</TH>\n";
						echo "<TH class=ths>Number</TH>\n";
						echo "<TH class=ths>Pct of Total</TH>\n";
						foreach ( $OneOfMany as $ans => $count ) {
							echo "<TR>\n";
							echo "<TD class=tds>$ans</TD>";
							echo "<TD class=tdrs>$count</TD>";
							$numpct = (100 * ($count / $Tot));
							$pct = sprintf('%03.1f', $numpct);
							echo "<TD class=tdrs>$pct</TD>";
						}
					}

					if ( $row['surveyquestion_type'] == 'Select One Or Several Of Many' ) {
						$Tot=0;
						print_r($OneOfSeveral);	// DEVONLY
						foreach ($OneOfSeveral as $ans => $count) {
							$Tot += $count;
						}

						echo "<TH class=ths>Response</TH>\n";
						echo "<TH class=ths>Number</TH>\n";
						echo "<TH class=ths>Pct of Total</TH>\n";
						foreach ( $OneOfSeveral as $ans => $count ) {
							echo "<TR>\n";
							echo "<TD class=tds>$ans</TD>";
							echo "<TD class=tdrs>$count</TD>";
							$numpct = (100 * ($count / $Tot));
							$pct = sprintf('%03.1f', $numpct);
							echo "<TD class=tdrs>$pct</TD>";
						}

					}

					if ( $row['surveyquestion_type'] == 'Rate Each 1-4' ) {


						unset($thisans);
						echo "<TH class=ths>Rated Selection</TH>\n";
						echo "<TH class=ths>&nbsp;1&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;2&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;3&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;4&nbsp;</TH>\n";
						echo "<TH class=ths>Sum</TH>\n";	// DEVONLY
						echo "<TH class=ths># Responses</TH>\n";
						echo "<TH class=ths>Average</TH>\n";
						ksort($RatingOfFour);

						$TotalRatingSum = array();
						$TotalRatingCount = array();
						$RatingCount = array();

						foreach ( $RatingOfFour as $key => $count ) {
							list($ans,$rating) = explode('|',$key);
							if (! isset($thisans) ) {
								$thisans = $ans;
							}

							// Total responses for this selection
							$TotalRatingCount[$ans] += $count;

							if ( $thisans == $ans ) {
								// Total responses for this selection and rating
								$RatingCount[$rating] = $count;

								// Weighted sum of all ratings 
								$TotalRatingSum[$ans] += ($count * $rating);
							}


							echo "<P class=trace>TRC $ans : $TotalRatingCount[$ans]</P>\n";	// DEVONLY
							echo "<P class=trace>RC $rating : $count</P>\n";	// DEVONLY
							echo "<P class=trace>TRSum $ans : $TotalRatingSum[$ans]</P>\n";	// DEVONLY

							if ( $thisans != $ans ) {
							
								echo "<TR>\n";
								echo "<TD class=tds>$thisans</TD>";
								echo "<TD class=tdrs>$RatingCount[1]</TD>";
								echo "<TD class=tdrs>$RatingCount[2]</TD>";
								echo "<TD class=tdrs>$RatingCount[3]</TD>";
								echo "<TD class=tdrs>$RatingCount[4]</TD>";
								echo "<TD class=tdrs>$TotalRatingSum[$thisans]</TD>\n";	// DEVONLY
								echo "<TD class=tdrs>$TotalRatingCount[$thisans]</TD>\n";	
								if ( $TotalRatingCount[$thisans] > 0 ) {
									$rawavg = ($TotalRatingSum[$thisans]/$TotalRatingCount[$thisans]);
									$avg = sprintf('%03.2f', $rawavg);
									echo "<TD class=tdrs>$avg</TD>";
								}else{
									echo "<TD class=tdrs><BR></TD>";
								}

								$TotalRatingCount = array();
								$TotalRatingCount = array();
								$RatingCount = array();

								$TotalRatingCount[$ans] += $count;
								$RatingCount[$rating] = $count;
								$TotalRatingSum[$ans] += ($count * $rating);
								echo "<P class=trace>New TRC $ans : $TotalRatingCount[$ans]</P>\n";	// DEVONLY
								echo "<P class=trace>New RC $rating : $count</P>\n";		// DEVONLY
								echo "<P class=trace>New TRSum $ans : $TotalRatingSum[$ans]</P>\n";		// DEVONLY
							}

							$thisans = $ans;
						}
						// Final Flush
						echo "<TR>\n";
						echo "<TD class=tds>$thisans</TD>";
						echo "<TD class=tdrs>$RatingCount[1]</TD>";
						echo "<TD class=tdrs>$RatingCount[2]</TD>";
						echo "<TD class=tdrs>$RatingCount[3]</TD>";
						echo "<TD class=tdrs>$RatingCount[4]</TD>";
						echo "<TD class=tdrs>$TotalRatingSum[$thisans]</TD>\n";	// DEVONLY
						echo "<TD class=tdrs>$TotalRatingCount[$thisans]</TD>\n";	
						if ( $TotalRatingCount[$thisans] > 0 ) {
							$rawavg = ($TotalRatingSum[$thisans]/$TotalRatingCount[$thisans]);
							$avg = sprintf('%03.2f', $rawavg);
							echo "<TD class=tdrs>$avg</TD>";
						}else{
							echo "<TD class=tdrs><BR></TD>";
						}
					}

					if ( $row['surveyquestion_type'] == 'Rate Each 1-9' ) {

						unset($thisans);
						echo "<TH class=ths>Rated Selection</TH>\n";
						echo "<TH class=ths>&nbsp;1&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;2&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;3&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;4&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;5&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;6&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;7&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;8&nbsp;</TH>\n";
						echo "<TH class=ths>&nbsp;9&nbsp;</TH>\n";
						echo "<TH class=ths>Sum</TH>\n";	// DEVONLY
						echo "<TH class=ths># Responses</TH>\n";
						echo "<TH class=ths>Average</TH>\n";
						ksort($RatingOfNine);

						$TotalRatingSum = array();
						$TotalRatingCount = array();
						$RatingCount = array();

						foreach ( $RatingOfNine as $key => $count ) {
							list($ans,$rating) = explode('|',$key);
							if (! isset($thisans) ) {
								$thisans = $ans;
							}

							// Total responses for this selection
							$TotalRatingCount[$ans] += $count;

							if ( $thisans == $ans ) {
								// Total responses for this selection and rating
								$RatingCount[$rating] = $count;

								// Weighted sum of all ratings 
								$TotalRatingSum[$ans] += ($count * $rating);
							}


							echo "<P class=trace>TRC $ans : $TotalRatingCount[$ans]</P>\n";	// DEVONLY
							echo "<P class=trace>RC $rating : $count</P>\n";	// DEVONLY
							echo "<P class=trace>TRSum $ans : $TotalRatingSum[$ans]</P>\n";	// DEVONLY

							if ( $thisans != $ans ) {
							
								echo "<TR>\n";
								echo "<TD class=tds>$thisans</TD>";
								echo "<TD class=tdrs>$RatingCount[1]</TD>";
								echo "<TD class=tdrs>$RatingCount[2]</TD>";
								echo "<TD class=tdrs>$RatingCount[3]</TD>";
								echo "<TD class=tdrs>$RatingCount[4]</TD>";
								echo "<TD class=tdrs>$RatingCount[5]</TD>";
								echo "<TD class=tdrs>$RatingCount[6]</TD>";
								echo "<TD class=tdrs>$RatingCount[7]</TD>";
								echo "<TD class=tdrs>$RatingCount[8]</TD>";
								echo "<TD class=tdrs>$RatingCount[9]</TD>";
								echo "<TD class=tdrs>$TotalRatingSum[$thisans]</TD>\n"; // DEVONLY
								echo "<TD class=tdrs>$TotalRatingCount[$thisans]</TD>\n";	
								if ( $TotalRatingCount[$thisans] > 0 ) {
									$rawavg = ($TotalRatingSum[$thisans]/$TotalRatingCount[$thisans]);
									$avg = sprintf('%03.2f', $rawavg);
									echo "<TD class=tdrs>$avg</TD>";
								}else{
									echo "<TD class=tdrs><BR></TD>";
								}

								$TotalRatingCount = array();
								$TotalRatingCount = array();
								$RatingCount = array();

								$TotalRatingCount[$ans] += $count;
								$RatingCount[$rating] = $count;
								$TotalRatingSum[$ans] += ($count * $rating);
								echo "<P class=trace>New TRC $ans : $TotalRatingCount[$ans]</P>\n";	// DEVONLY
								echo "<P class=trace>New RC $rating : $count</P>\n";	// DEVONLY
								echo "<P class=trace>New TRSum $ans : $TotalRatingSum[$ans]</P>\n";	// DEVONLY
							}

							$thisans = $ans;
						}
						// Final Flush
						echo "<TR>\n";
						echo "<TD class=tds>$thisans</TD>";
						echo "<TD class=tdrs>$RatingCount[1]</TD>";
						echo "<TD class=tdrs>$RatingCount[2]</TD>";
						echo "<TD class=tdrs>$RatingCount[3]</TD>";
						echo "<TD class=tdrs>$RatingCount[4]</TD>";
						echo "<TD class=tdrs>$RatingCount[5]</TD>";
						echo "<TD class=tdrs>$RatingCount[6]</TD>";
						echo "<TD class=tdrs>$RatingCount[7]</TD>";
						echo "<TD class=tdrs>$RatingCount[8]</TD>";
						echo "<TD class=tdrs>$RatingCount[9]</TD>";
						echo "<TD class=tdrs>$TotalRatingSum[$thisans]</TD>\n"; // DEVONLY
						echo "<TD class=tdrs>$TotalRatingCount[$thisans]</TD>\n";	
						if ( $TotalRatingCount[$thisans] > 0 ) {
							$rawavg = ($TotalRatingSum[$thisans]/$TotalRatingCount[$thisans]);
							$avg = sprintf('%03.2f', $rawavg);
							echo "<TD class=tdrs>$avg</TD>";
						}else{
							echo "<TD class=tdrs><BR></TD>";
						}
					}

					//----------------------------------------------------------------
					// Ranking
					//----------------------------------------------------------------
	
					if ( $row['surveyquestion_type'] == 'Rank Each 1-4'  
						||  $row['surveyquestion_type'] == 'Rank Each 1-9' 
						||  $row['surveyquestion_type'] == 'Rank Each In Order' ) {

						if ( $row['surveyquestion_type'] == 'Rank Each 1-4' ) {
							$maxrank=4;
						}
						if ( $row['surveyquestion_type'] == 'Rank Each 1-9' ) {
							$maxrank=9;
						}
						if ( $row['surveyquestion_type'] == 'Rank Each In Order' ) {

							foreach ( $RankOrder as $key => $count ) {
								list($ans,$rank) = explode('|',$key);
								if ( $rank > $maxrank ) {
									$maxrank = $rank;
								}
							}
						}
						echo "<P class=trace>MaxRank is $maxrank</P>\n"; 	// DEVONLY


						unset($thisans);
						echo "<TH class=ths>Ranked Selection</TH>\n";
						foreach ( range(1,$maxrank) as $rankidx){
							echo "<TH class=ths>&nbsp;$rankidx&nbsp;</TH>\n";
						}
						echo "<TH class=ths>Sum</TH>\n";	// DEVONLY
						echo "<TH class=ths># Responses</TH>\n";
						echo "<TH class=ths>Average</TH>\n";
						ksort($RankOrder);

						$TotalRankingSum = array();
						$TotalRankingCount = array();
						$RankingCount = array();

						foreach ( $RankOrder as $key => $count ) {
							list($ans,$rank) = explode('|',$key);
							if (! isset($thisans) ) {
								$thisans = $ans;
							}

							// Total responses for this selection
							$TotalRankingCount[$ans] += $count;

							if ( $thisans == $ans ) {
								// Total responses for this selection and rating
								$RankingCount[$rank] = $count;

								// Weighted sum of all ratings 
								$TotalRankingSum[$ans] += ($count * $rank);
							}


							echo "<P class=trace>TRC $ans : $TotalRankingCount[$ans]</P>\n";	// DEVONLY
							echo "<P class=trace>RC $rank : $count</P>\n";	// DEVONLY
							echo "<P class=trace>TRSum $ans : $TotalRankingSum[$ans]</P>\n";	// DEVONLY

							if ( $thisans != $ans ) {
							
								echo "<TR>\n";
								echo "<TD class=tds>$thisans</TD>";
								foreach ( range(1,$maxrank) as $rankidx) {
									echo "<TD class=tdrs>$RankingCount[$rankidx]</TD>";
								}
								echo "<TD class=tdrs>$TotalRankingSum[$thisans]</TD>\n";	// DEVONLY
								echo "<TD class=tdrs>$TotalRankingCount[$thisans]</TD>\n";
								if ( $TotalRankingCount[$thisans] > 0 ) {
									$rawavg = ($TotalRankingSum[$thisans]/$TotalRankingCount[$thisans]);
									$avg = sprintf('%03.2f', $rawavg);
									echo "<TD class=tdrs>$avg</TD>";
								}else{
									echo "<TD class=tdrs>-</TD>";
								}

								$TotalRankingCount = array();
								$TotalRankingCount = array();
								$RankingCount = array();

								$TotalRankingCount[$ans] += $count;
								$RankingCount[$rank] = $count;
								$TotalRankingSum[$ans] += ($count * $rank);

								echo "<P class=trace>New TRC $ans : $TotalRankingCount[$ans]</P>\n";	// DEVONLY
								echo "<P class=trace>New RC $rank : $count</P>\n";	// DEVONLY
								echo "<P class=trace>New TRSum $ans : $TotalRankingSum[$ans]</P>\n";	// DEVONLY
							}

							$thisans = $ans;
						}
						// Final Flush
						echo "<TR>\n";
						echo "<TD class=tds>$thisans</TD>";
						foreach (range(1,$maxrank) as $rankidx){
							echo "<TD class=tdrs>$RankingCount[$rankidx]</TD>";
						}
						echo "<TD class=tdrs>$TotalRankingSum[$thisans]</TD>\n";	// DEVONLY
						echo "<TD class=tdrs>$TotalRankingCount[$thisans]</TD>\n";	
						if ( $TotalRankingCount[$thisans] > 0 ) {
							$rawavg = ($TotalRankingSum[$thisans]/$TotalRankingCount[$thisans]);
							$avg = sprintf('%03.2f', $rawavg);
							echo "<TD class=tdrs>$avg</TD>";
						}else{
							echo "<TD class=tdrs><BR></TD>";
						}

					}

					//----------------------------------------------------------------
					// Open Answers
					//----------------------------------------------------------------
					if ( $row['surveyquestion_type'] == 'Open Short Answer' ) {
							echo "<TR>\n";
							echo "<TD class=tds><OL>$TextAns</OL></TD>";
					}
					if ( $row['surveyquestion_type'] == 'Open Long Answer' ) {
							echo "<TR>\n";
							echo "<TD class=tds><OL>$LongTextAns</OL></TD>";
					}
					echo "</TABLE>\n";
				}
				$lastsecid =  $secid ;
				$lastqcnt = $qcnt;
			}

	  	}//if ($_REQUEST['Action'] == "Review")) {

		//----------------------------------------------------------------------
	  	// Take, Next, Previous
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Next" 
			|| $_REQUEST['Action'] == "Resume"
			|| $_REQUEST['Action'] == "Previous"
			|| $_REQUEST['Action'] == "Take") {

			if ( array_key_exists('survey_id', $_REQUEST)) {
				if ( isset ( $_REQUEST['survey_id'] ) ) {
					$survey_id = $_REQUEST['survey_id'];
				}else{
					die ("No Survey ID in view function") ;
				}
				if ( ! is_numeric($survey_id) ) {
					die ("Survey ID ($survey_id) is not an integer.") ;
				}
			}else{
				die ("No Survey Id Set") ;
			}

			$dbh = caa_connect();
			//
			// Get all information regarding Survey
			//
			$today = date('Y-m-d');
			$Survey = array();
			$sql = "SELECT * FROM survey where survey_id = '$survey_id'";
			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$result = mysql_query($sql);
			$Survey = mysql_fetch_array($result, MYSQL_ASSOC) ;

			//
			// Genereric Parsing: Restricted to I-Group Members?
			//
			if ($Survey['igroup_members'] == 'Yes'){
				$wid = $_SESSION['war_id'];
				$sql = "SELECT w.war_ig_id from warrior_igroup w, igroup i ";
				$sql .= " WHERE i.igroup_name NOT LIKE 'None:%' ";
				$sql .= " AND i.igroup_id = w.war_ig_ig ";
				$sql .= " AND  w.war_ig_war = '$wid'";
				echo "<P class=trace>$sql</P>\n";	// DEVONLY
				$igresult = mysql_query($sql);
				$igcnt = mysql_num_rows($igresult);
				if ( $igcnt < 1 ){
					$rejectmsg .= "<LI>This survey is restricted to men currently registered in the I-Group Portal";
					$rejectmsg .= " database as active in an active I-Group.";
					$rejectmsg .= " If you are in an active I-Group, please contact a menber in your I-Group";
					$rejectmsg .= " and ask them to add you to the roster via the ";
					$rejectmsg .= " <A HREF=http://igroups.mkp.org/igroups.php?Action=Manage+My+I-Group>";
					$rejectmsg .= " Manage My I-Group</A> function under the I-Groups section.";
					$rejectmsg .= " </LI>\n";
				}
			}
			//
			// Genereric Parsing: Restricted to Center
			//
			if ($Survey['center_id'] > 1){
				$rcid = $Survey['center_id'];
				$mycid = $_SESSION['center_id'];
				$sql = "SELECT center_name from center where center_id = '$rcid'";
				$center = get_value($sql);
				if ( $rcid != $mycid ){
					$rejectmsg .= "<LI>This survey is restricted to men in the $center center.</LI>\n";
				}
			}
			//
			// Genereric Parsing: Organization Role
			//
			//if ($Survey['orgrole_id'] > 1){
				//$sql = "SELECT DISTINCT  h.warrior_id, h.orgroleholder_id, w.war_fname, w.war_lname  ";
				//$sql .= " FROM org o, orgrole r, orgroleholder h, warrior w, center c ";
				//$sql .= " WHERE o.org_id = r.org_id ";
				//$sql .= " AND r.orgrole_id = h.orgrole_id ";
				//$sql .= " AND w.war_id = h.warrior_id ";
				//$sql .= " AND h.warrior_id = $_SESSION[war_id]";
				//$sql .= " AND h.end_date > '$today' ";
				//$sql .= " AND o.org_tier = 'Center' ";
				//$sql .= " AND c.georegion_id = '5' ";
				//$sql .= " AND h.which_id = c.center_id ";
				//$sql .= " AND o.org_name = 'Executive Council' ";
				//$sql .= " AND r.orgrole_name = 'Director' ";
			//}

			//
			// USA Center Director Qualification
			//
			if ($Survey['audience'] == 'USA Center Directors'){
				$sql = "SELECT DISTINCT  h.warrior_id, h.orgroleholder_id, w.war_fname, w.war_lname  ";
				$sql .= " FROM org o, orgrole r, orgroleholder h, warrior w, center c ";
				$sql .= " WHERE o.org_id = r.org_id ";
				$sql .= " AND r.orgrole_id = h.orgrole_id ";
				$sql .= " AND w.war_id = h.warrior_id ";
				$sql .= " AND h.warrior_id = $_SESSION[war_id]";
				$sql .= " AND h.end_date > '$today' ";
				$sql .= " AND o.org_tier = 'Center' ";
				$sql .= " AND c.georegion_id = '5' ";
				$sql .= " AND h.which_id = c.center_id ";
				$sql .= " AND o.org_name = 'Executive Council' ";
				$sql .= " AND r.orgrole_name = 'Director' ";
				echo "<P class=trace>$sql</P>\n";	// DEVONLY

				$Eligible = array();
				$row = array();
				$result = mysql_query($sql);
				while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
					$wid = $row['warrior_id'];
					$Eligible[$wid] = $row['war_fname'] . ' ' . $row['war_lname'];
				}
				print_r($Eligible);	// DEVONLY
				$wid = $_SESSION['war_id'];
				if (! isset($Eligible[$wid])){
					$rejectmsg .=  "<LI>To take this particular survey, you must be registered in the ";
					$rejectmsg .=  "<A HREF=/orgchart.phpx>I-Group Portal Org Chart</A> as one of the ";
					$rejectmsg .=  "<A HREF=/orgchart.phpx?org_tier=Center&org_name=Executive+Council";
					$rejectmsg .=  "&orgrole_name=Director&Sortmeby=Role&georegion_id=5";
					$rejectmsg .=  "&Sortmeby=Center";
					$rejectmsg .=  "&Action=List+Current+Holders>USA Center Directors</A>.";
					$rejectmsg .=  " If the org chart is wrong, you may ";
					$rejectmsg .=  "<A HREF=/orgchart.phpx?org_tier=Center&org_name=Executive+Council";
					$rejectmsg .=  "&orgrole_name=Director&georegion_id=5&center_id=All";
					$rejectmsg .=  "&Action=New>update</A> it to add yourself and then take this survey.";
					$rejectmsg .=  "</LI>";
				}
			}//Endif USA Center Director Qualification

			//
			// Compare times as unix timestamps
			//
			$close_date = $Survey['close_date'];
			$open_date = $Survey['open_date'];
			$close_datets = strtotime($close_date);
			$open_datets = strtotime($open_date);
			$todayts = strtotime($today);

			//
			// Closed
			//
			if ($close_datets < $todayts) {
				echo "<P class=trace>Close date $close_date ($close_datets) < today $today ($todayts)</P>\n"; 	// DEVONLY
				$rejectmsg .= "<LI>Sorry, survey $Survey[survey_name] closed for participation on $Survey[close_date]\n";
				$rejectmsg .= "If desired, you can review the ";
				$rejectmsg .=  " <A HREF=/survey.phpx?survey_id=$survey_id&Action=Review>results</A>.";
				$rejectmsg .=  "</LI>\n";
			}
			//
			// Not Yet Open
			//
			if ($open_datets > $todayts) {
				echo "<P class=trace>Open date $open_date ($open_datets) > today $today ($todayts)</P>\n"; 	// DEVONLY
				$rejectmsg .=  "<LI>Sorry, survey $Survey[survey_name] is not yet open for participation.\n";
				$rejectmsg .=  " Please retry after $Survey[open_date].\n";
				$rejectmsg .=  " If desired, you can";
				$rejectmsg .=  " <A HREF=/survey.phpx?survey_id=$survey_id&Action=Preview>preview</A>";
				$rejectmsg .=  " the survey in its current draft form.";
				$rejectmsg .=  "</LI>\n";
			}

			//
			// Reject if failed qualification quantlet
			//
			if (isset($rejectmsg)){
				echo "<CENTER>\n";
				echo "<TABLE BORDER>\n";
				echo "<TH class=ths>Survey $Survey[survey_name] for $Survey[audience].</TH>\n";
				echo "<TR>\n";
				echo "<TD class=tds>\n";
				echo "<UL>\n";
				echo "$rejectmsg\n";
				echo "</UL>\n";
				echo "</TD>\n";
				echo "</TR>\n";
				echo "</TABLE>\n";
				echo "</CENTER>\n";
				spew_footer($FMT);
				exit;
			}


			//mysql> desc surveyquestion
			//+-----------------------------+------------------+------+-----+---------+----------------+
			//| Field                       | Type             | Null | Key | Default | Extra          |
			//+-----------------------------+------------------+------+-----+---------+----------------+
			//| surveyquestion_id           | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| author_id                   | int(10) unsigned | YES  |     | NULL    |                |
			//| surveyquestion_question     | varchar(120)     | YES  |     | NULL    |                |
			//| surveyquestion_type         | varchar(30)      | YES  |     | NULL    |                |
			//| surveyquestion_instructions | text             | YES  |     | NULL    |                |
			//+-----------------------------+------------------+------+-----+---------+----------------+

			//mysql> desc surveymanifest;
			//+-------------------+------------------+------+-----+---------+----------------+
			//| Field             | Type             | Null | Key | Default | Extra          |
			//+-------------------+------------------+------+-----+---------+----------------+
			//| surveymanifest_id | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| surveysection_id  | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| survey_id         | int(10) unsigned | NO   |     | NULL    |                |
			//| surveyquestion_id | int(10) unsigned | YES  |     | NULL    |                |
			//| sequence          | tinyint(4)       | YES  |     | NULL    |                |
			//+-------------------+------------------+------+-----+---------+----------------+

			//mysql> describe surveyanswer;
			//+---------------------+------------------+------+-----+---------+----------------+
			//| Field               | Type             | Null | Key | Default | Extra          |
			//| surveyanswer_answer | varchar(120)     | YES  |     | NULL    |                |
			//| answer_type         | varchar(30)      | YES  |     | NULL    |                |
			//| valid_range         | varchar(80)      | YES  |     | NULL    |                |
			//| answer_value        | text             | YES  |     | NULL    |                |
			//+---------------------+------------------+------+-----+---------+----------------+

			//mysql> desc surveyresult;
			//+-----------------+------------------+------+-----+---------+----------------+
			//| Field           | Type             | Null | Key | Default | Extra          |
			//+-----------------+------------------+------+-----+---------+----------------+
			//| surveyresult_id | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
			//| survey_id       | int(10) unsigned | NO   |     | NULL    |                |
			//| question_id     | int(10) unsigned | NO   |     | NULL    |                |
			//| answer_id       | int(10) unsigned | NO   |     | NULL    |                |
			//| author_id       | int(10) unsigned | NO   |     | NULL    |                |
			//| answer_value    | text             | YES  |     | NULL    |                |
			//+-----------------+------------------+------+-----+---------+----------------+

			//---------------------------------------------------
			// Generate section,question list sequence arrays
			//---------------------------------------------------
			//
			$NextQ = array();
			$PreviousQ = array();
			$row = array();

			$sql = "SELECT * FROM surveymanifest WHERE survey_id = '$survey_id'";
			$sql .= " ORDER BY surveysection_id, sequence";
			echo "<p class=trace>$sql</p>\n";	//DEBUG DEVONLY
			$result = mysql_query($sql);
			while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
				$qid = $row['surveyquestion_id'];
				if (! isset($firstqid)){
					$firstqid = $qid;
				}
				$PreviousQ[$qid] = $lastqid;
				$NextQ[$lastqid] = $qid;
				$lastqid = $qid;
			}
			print_r($NextQ); // DEVONLY
			print_r($PreviousQ); // DEVONLY

			//
			//-------------------------------------------
			// Initializa Survey
			//-------------------------------------------
			//
			if ($_REQUEST['Action'] == 'Take' 
				|| $_REQUEST['Action'] == 'Resume'){

				//
				// If partially complete, find last answered question and go to next question
				//
				$Res = array();
				$wid = $_SESSION['war_id'];

				//
				// Search for any results for this survey for this man
				//
				$sql = "SELECT m.surveyquestion_id ";
				$sql .= " FROM surveymanifest m, surveyresult r ";
				$sql .= " WHERE m.survey_id = '$survey_id'";
				$sql .= " AND m.survey_id = r.survey_id";
				$sql .= " AND m.surveyquestion_id = r.surveyquestion_id";
				$sql .= " AND r.responder_id = '$wid'" ;
				$sql .= " ORDER BY m.surveysection_id DESC, m.sequence DESC LIMIT 1";
				echo "<p class=trace>$sql</p>\n";	//DEBUG DEVONLY
				$found = get_value($sql);
				echo "<p class=trace>Returned: $found</p>\n";	//DEBUG DEVONLY
				if ($found > 0 ) {
					// Some questions have been completed
					echo "<P class=trace>You are returning to a survey in progress.\n";
					echo "Returning you to your survey at your first unanswered question.";
					echo "</P>\n";
					if ( isset ($NextQ[$found])){
						// Some questions have been completed, but not the last one
						$qid = $NextQ[$found];
					}else{
						// All questions (or at least the last one has) have been completed
						// CAUTION: Allows a Retake
						$qid = $firstqid;
					}
				}else{
					// First time
					$qid = $firstqid;
					spew_instructions();
				}

				spew_question($survey_id, $qid);
			}

			//----------------------------------------------
			// Save responses and continue to next question
			//----------------------------------------------
			if ( $_REQUEST['Action'] == "Previous" || $_REQUEST['Action'] == "Next") {
				$qid = $_REQUEST['surveyquestion_id'];
				$sid = $_REQUEST['survey_id'];
				$wid = $_SESSION['war_id'];
	
				foreach ($_REQUEST as $key => $val ) {
					unset ($sql);
					// Menu Picklists
					if ( preg_match('/^ANSM_/',$key)) {
						list($null,$q,$a) = explode('_', $key);
						$cleanval = mysql_real_escape_string($val);
						$sql = "INSERT INTO surveyresult ";
						$sql .= "(survey_id, surveyquestion_id, surveyanswer_id, responder_id, answer_value)";
						$sql .= "VALUES('$sid','$q','$a','$wid','$cleanval')";
						$sql .= " ON DUPLICATE KEY UPDATE answer_value = '$cleanval'";
					}

					// Checkboxes
					if ( preg_match('/^ANSC_/',$key)) {
						list($null,$q,$a) = explode('_', $key);
						$cleanval = mysql_real_escape_string($val);
						$sql = "INSERT INTO surveyresult ";
						$sql .= "(survey_id, surveyquestion_id, surveyanswer_id, responder_id, answer_value)";
						$sql .= "VALUES('$sid','$q','$a','$wid','$cleanval')";
						$sql .= " ON DUPLICATE KEY UPDATE answer_value = '$cleanval'";
					}

					// Radio Buttons Rating: ANSR_qid -> aid
					if ( preg_match('/^ANSR_/',$key)) {
						list($null,$q) = explode('_', $val);
						$sql = "INSERT INTO surveyresult ";
						$sql .= "(survey_id, surveyquestion_id, surveyanswer_id, responder_id, answer_value)";
						$sql .= "VALUES('$sid','$qid','$val','$wid','Selected')";
						$sql .= " ON DUPLICATE KEY UPDATE answer_value = 'Selected'";
					}
					
					// Radio Buttons, Rank: ANSRR_qid_rank -> aid
					if ( preg_match('/^ANSRR_/',$key)) {
						list($null,$q,$rank) = explode('_', $key);
						$sql = "INSERT INTO surveyresult ";
						$sql .= "(survey_id, surveyquestion_id, surveyanswer_id, responder_id, answer_value)";
						$sql .= "VALUES('$sid','$qid','$val','$wid','$rank')";
						$sql .= " ON DUPLICATE KEY UPDATE answer_value = '$rank'";
					}

					// Text and Textarea answers
					if ( preg_match('/^ANST_/',$key)) {
						list($null,$a) = explode('_', $key);
						$cleanval = mysql_real_escape_string($val);
						$sql = "INSERT INTO surveyresult ";
						$sql .= "(survey_id, surveyquestion_id, surveyanswer_id, responder_id, answer_value)";
						$sql .= "VALUES('$sid','$qid','$a','$wid','$cleanval')";
						$sql .= " ON DUPLICATE KEY UPDATE answer_value = '$cleanval'";
					}
					if (isset ($sql)){
						echo "<p class=trace>$sql</p>\n";	//DEBUG DEVONLY
						run_sql($sql);
						$rid = mysql_insert_id();
						echo "<p class=trace>Returned result_id of $rid</p>\n";	//DEBUG DEVONLY
					}
				}//Endforeach

				if ( $_REQUEST['Action'] == "Previous"){
					if (isset($PreviousQ[$qid])){
						$qid = $PreviousQ[$qid];
					}else{
						echo "<H2>That was the first question of this survey</H2>";
					}
				}
				if ( $_REQUEST['Action'] == "Next") {
					if (isset ( $NextQ[$qid])){
						echo "<P class=trace>NextQ is set to $NextQ[$qid]</P>\n"; // DEVONLY
						$qid = $NextQ[$qid];
					}else{
						echo "<P class=trace>No NextQ, sending email ack for survey $sid</P>\n"; // DEVONLY
						date_default_timezone_set($WICCFG['TIMEZONE']);
						$now = date('D, d M Y H:i:s');
						$sql = "INSERT INTO surveyresult ";
						$sql .= "(survey_id, surveyquestion_id, surveyanswer_id, responder_id, answer_value)";
						$sql .= "VALUES('$sid','1','1','$wid','Completed $now')";
						$sql .= " ON DUPLICATE KEY UPDATE answer_value = 'Completed $now'";
						echo "<p class=trace>$sql</p>\n";	//DEBUG DEVONLY
						run_sql($sql);
						$rid = mysql_insert_id();
						echo "<p class=trace>Returned result_id of $rid</p>\n";	//DEBUG DEVONLY

						send_email_ack($sid);
						spew_footer($FMT);
						exit;
					}
				}
				spew_question($sid,$qid);
	  		}//Endif ($_REQUEST[Action] == "Next, Previous")) {

	  	}//if ($_REQUEST[Action] == "Next, Take, Previous")) {

		//----------------------------------------------------------------------
	  	// Update Existing Entry 
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Update" ) {

			if ( array_key_exists('survey_id', $_REQUEST)) {
				$lid = $_REQUEST['survey_id'];
				if (! is_numeric( $lid ) ) {
					die ("ERROR: Attempt to update requires survey_id to be integer. It is not.");
				}
			}else{
				die ("No Survey Id Set") ;
			}

			$dbh = caa_connect();

			//
			// Get Original Record
			//
			$Original = array();
			$sql = "SELECT * FROM survey WHERE survey_id = '$lid'";
			$result = mysql_query($sql);
			$Original = mysql_fetch_array($result, MYSQL_ASSOC) ;

			//
			// Get list of fields for this table
			//
			$fieldlabel = get_field_labels('survey','aaaaaaaaaa',$WICCFG['DBNAME']);

			print '<pre>';						// DEBUG DEVONLY
			echo "Incoming Updated Fields\n";   // DEBUG DEVONLY
			print htmlspecialchars(print_r($fieldlabel), ENT_QUOTES);	// DEBUG DEVONLY
			print '</pre>';						// DEBUG DEVONLY

			$fields = array_keys($fieldlabel);

			//
			// Eliminate all keys that have invalid answers
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (in_array($_REQUEST[$f], $InValidChoice)) {
					unset ($_REQUEST[$f]);
				}
				if (in_array($_REQUEST[$altkey], $InValidChoice)) {
					unset ($_REQUEST[$altkey]);
				}
			}

			//
			// Find the extended entries for picklists and return 
			// them to base names, overwriting picklist entry
			//
			foreach ($fields as $f) {
				$altkey = "NEW_" . $f;
				if (array_key_exists($altkey, $_REQUEST)) {
					$_REQUEST[$f] =  $_REQUEST[$altkey];
					unset ($_REQUEST[$altkey]);
				}
			}

			//
			// Update only the fields that have changed
			//
			$sql = 'UPDATE survey SET ';
			$sqlentry = array ();
			foreach ($fields as $f) {
				if ( array_key_exists($f, $_REQUEST)) {
					$val = $_REQUEST[$f];
					echo "<BR>$f : Comparing Orig ( $Original[$f] ) with Update ( $_REQUEST[$f] ) \n"; // DEVONLY

					if ( $_REQUEST[$f] != $Original[$f] ) {
						echo "<BR>XXX Different\n"; // DEVONLY
						$val = mysql_real_escape_string($_REQUEST[$f]);
						$sqlentry[] = $f . " = '" . $val . "'";
					}else{
						echo "<BR>YYY Same\n"; // DEVONLY
					}
				}
			}
			$sql .= implode (', ', $sqlentry);
			$sql .= " WHERE survey_id = '$lid'";

			echo "<p class=trace>$sql</p>\n";	// DEVONLY DEBUG

			if (count($sqlentry)) {
				$result = mysql_query($sql) ;
				echo "<H3>Update successful</H3>\n";
			}else{
				echo "<H3>No Changes Made</H3>\n";
			}

			$_REQUEST['Action'] = "View";
		}

		//----------------------------------------------------------------------
	  	// List or CurentList
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "List" 
			|| $_REQUEST['Action'] == "List Closed"
			|| $_REQUEST['Action'] == "Query Closed"
			|| $_REQUEST['Action'] == "Query Open"
			|| $_REQUEST['Action'] == "Query"
			|| $_REQUEST['Action'] == "List Closed"
			|| $_REQUEST['Action'] == "My Surveys"
			|| $_REQUEST['Action'] == "List Open") {
			
			echo "<CENTER>\n";
			$dbh = caa_connect();

			spew_query_form();

			$fieldlabel = array();

			$fieldlabel = get_field_labels('survey','survey',$WICCFG['DBNAME']);
			$fields = array_keys($fieldlabel);
			//----------------------------------------------------------
			// Get list of surveys this person has started
			//----------------------------------------------------------
			$MySurveys = array();
			$wid = $_SESSION['war_id'];
			$sql = "SELECT DISTINCT s.survey_id, s.survey_name ";
			$sql .= " FROM surveyresult r, survey s ";
			$sql .= " WHERE r.responder_id = '$wid'";
			$sql .= " AND s.survey_id = r.survey_id ";
			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$MySurveys = get_menu_array($sql);
			echo "<BR><B>MySurveys</B>\n";	// DEVONLY
			print_r($MySurveys);	// DEVONLY

			//----------------------------------------------------------
			// Get list of surveys this person has completed
			//----------------------------------------------------------
			$CompletedSurveys = array();
			$wid = $_SESSION['war_id'];
			$sql = "SELECT DISTINCT r.survey_id, r.answer_value ";
			$sql .= " FROM surveyresult r ";
			$sql .= " WHERE r.responder_id = '$wid'";
			$sql .= " AND r.surveyquestion_id = '1'";
			$sql .= " AND r.surveyanswer_id = '1'";
			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$CompletedSurveys = get_menu_array($sql);
			echo "<BR><B>CompletedSurveys</B>\n";	// DEVONLY
			print_r($CompletedSurveys);	// DEVONLY

			//----------------------------------------------------------
			// Get number of surveys Started
			//----------------------------------------------------------
			$NumStarted = array();
			$sql = "SELECT DISTINCT survey_id, count(distinct responder_id) as count ";
			$sql .= " FROM surveyresult ";
			$sql .= " group by survey_id";
			$sql .= " order by survey_id, responder_id ";
			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$NumStarted = get_menu_array($sql);
			echo "<BR><B>Started Surveys</B>\n";	// DEVONLY
			print_r($NumStarted);	// DEVONLY

			//----------------------------------------------------------
			// Get number of surveys Completed
			//----------------------------------------------------------
			$NumCompleted = array();
			$sql = "SELECT DISTINCT survey_id, count(distinct responder_id) as count ";
			$sql .= " FROM surveyresult ";
			$sql .= " WHERE surveyquestion_id = '1'";
			$sql .= " AND surveyanswer_id = '1'";
			$sql .= " group by survey_id ";
			$sql .= " order by survey_id ";
			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$NumCompleted = get_menu_array($sql);
			echo "<BR><B>Completed Surveys</B>\n";	// DEVONLY
			print_r($NumCompleted);	// DEVONLY

			//----------------------------------------------------------
			// Capture previous selection criteria and append to links
			// To enable drill down subqueries
			//----------------------------------------------------------

			foreach(explode( '&', $_SERVER[QUERY_STRING])  as $entry ) {
				list($key, $val) = explode( '=', $entry);	

				if ( ! empty( $val ) ) {
					if ( in_array($val, $InValidChoice)) {
						unset ($_REQUEST[$key]);
					}else{
						if (in_array($key, $SURVEYFIELD) ) {
							$parameters[$key] = $val;
						}
					}
				}
			}
			$parameters['Action'] = $_REQUEST['Action'];

			//----------------------------------------------------------
			// Uniquify for duplicate entries
			//----------------------------------------------------------
			$validentries = array();

			foreach ($parameters as $key => $val ) {
				$val = preg_replace('/\s+/', '+', $val);
				$validentries[] = $key . '=' . $val;
			}

			if (count($validentries)) {
				$drilldown = implode('&', $validentries);
			}

			//
			// Base sql query
			//
			$What = array(
				's.*',
				'w.war_fname',
				'w.war_lname'
			);
			$Where = array(
				's.author_id = w.war_id'
			);
			$From = array(
				'survey'	=>	's',
				'warrior'	=>	'w'
			);

			// Modify Scope base on Action Selected
			$today = date('Y-m-d');
			if ($_REQUEST['Action'] == 'List Open'){
				$Where[] = "s.close_date > '$today'";
				$Where[] = "s.open_date <= '$today'";
				echo "<H2>Currently Open Surveys</H2>\n";
			}
			if ($_REQUEST['Action'] == 'List Closed'){
				$Where[] = "s.close_date < '$today'";
				echo "<H2>Currently Closed Surveys</H2>\n";
			}
			if ($_REQUEST['Action'] == 'List'){
				echo "<H2>All Surveys</H2>\n";
			}

			// Blurb
			echo "<P class=trace>";
			echo "Click on author and audience links to drill down and refine query.";
			echo "<BR>";
			echo "<B>Preview</B> will list questions by section in that survey, <B>Review</B> will display results of completed survey.";
			echo "</P>\n";

			//
			// Construct where clause into an array
			//
			foreach ($fields as $f) {
				if (array_key_exists($f, $_REQUEST)) { 

					$val = $_REQUEST[$f];

					if (in_array($val, $InValidChoice)){
						unset($val) ;
					}else{
						$val = mysql_real_escape_string($_REQUEST[$f]);
					}

					if ( ! empty($val) ) {	// DEV: Can we populate an entry with a blank, e.g. reset?
						if ( preg_match('/%/', $val)) { 
							$Where[] = 's.' .  $f . "LIKE '" . $val . "'" ;
						}else{
							$Where[] =  's.' . $f . "='" . $val . "'" ;
						}
					}
				}
			}

			$sql = "SELECT DISTINCT " . implode(',', $What);

			$Fromsql = array();

			foreach ($From as $table => $abbr) {
				$Fromsql[] = $table . ' ' . $abbr;
			}
			$Fromsql = array_unique($Fromsql);

			$sql .= ' FROM ' . implode(', ', $Fromsql);

			if ( count($Where) ) {
				$sql .= ' WHERE ' . implode(' AND ', $Where);
			}
			//---------------------------------------------------
			// ORDER BY
			//---------------------------------------------------
			$OrderBy = array(
				'Name'			=>	's.survey_name',
				'Author'		=>	'w.war_lname, w.war_fname',
				'Open Date'		=>	's.open_date, s.close_date, s.survey_name',
				'Close Date'	=>	's.close_date, s.open_date, s.survey_name',
				'Audience'		=>	's.audience, s.survey_name'
			);

			$sortby = $_REQUEST['Sortmeby'];
			$sby = $OrderBy[$sortby];

			if (empty ($sby)){
				$sql .= ' ORDER BY s.survey_name';
			}else{
				$sql .= ' ORDER BY ' . $sby;
			}

			echo "<P class=trace>$sql</P>\n";	// DEVONLY
			$result = mysql_query($sql);

			$today = date('Y-m-d');
			$todayts = strtotime($today);
			echo "<P class=trace>$today : $todayts</P>\n";	// DEVONLY

			echo "<TABLE BORDER>\n";

			if ($_SESSION['access'] >= $SURVEYCFG['EDITLEVEL'] ) {
				echo "<TH class=ths>Edit</TH>\n";		// SECURITY
			}

			echo "<TH class=ths>View</TH>\n";
			echo "<TH class=ths>Action</TH>\n";		

			unset($fields[survey_id]);

			foreach ($SURVEYFIELD as $f) {
				if (in_array($f, $SHOW)) {
					echo "<TH class=ths>$fieldlabel[$f]</TH>\n";
				}
			}

			echo "<TH class=ths># Started</TH>\n";
			echo "<TH class=ths># Complete</TH>\n";

			while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
				$sid = $row['survey_id'];
				echo "<TR>\n";
				$opendatets = strtotime($row['open_date']);
				$closedatets = strtotime($row['close_date']);

				// Edit if authorized
				// SECURITY
				if ($_SESSION['access'] >= $SURVEYCFG['EDITLEVEL'] ) {	
					echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					//echo "<P class=trace>Open $row[open_date] : $opendatets</P>\n";	// DEVONLY
					echo "<A HREF=$_SERVER[PHP_SELF]?survey_id=$row[survey_id]";
					echo "&Action=Edit>";
					echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0></A>";
					echo "</TD>\n";
				}
				// View for everyone
				echo "<TD ALIGN=CENTER VALIGN=TOP class=tdcs>";
					//echo "<P class=trace>Close $row[close_date] : $closedatets</P>\n";	// DEVONLY
					echo "<A HREF=$_SERVER[PHP_SELF]?survey_id=$row[survey_id]";
					echo "&Action=View>";
					echo "<IMG SRC=/images/smallballs/yellowball.gif BORDER=0></A>";
				echo "</TD>\n";

				// Actions
				echo "<TD VALIGN=TOP class=tds>";
					// Preview
					echo "<A HREF=$_SERVER[PHP_SELF]?survey_id=$row[survey_id]";
					echo "&Action=Preview>Preview</A>";
					echo "&nbsp;|&nbsp;";

					// Action: Take or Retake || or Review
				
					if ($todayts > $closedatets ) {
						echo "<A HREF=$_SERVER[PHP_SELF]?survey_id=$row[survey_id]&Action=Review>Review";
					}else{
						$sid = $row['survey_id'];
						if ($MySurveys[$sid] ) {
							if ($CompletedSurveys[$sid] ) {
								echo "<A HREF=$_SERVER[PHP_SELF]?survey_id=$row[survey_id]&Action=Review>";
								echo "Review";
							}else{
								echo "<A HREF=$_SERVER[PHP_SELF]?survey_id=$row[survey_id]&Action=Take>";
								echo "Resume";
							}
						}else{
							echo "<A HREF=$_SERVER[PHP_SELF]?survey_id=$row[survey_id]&Action=Take>";
							echo "Take";
						}
					}
					echo "</A>";
				echo "</TD>\n";
	
	
				foreach ($SURVEYFIELD as $f) {
					$css = "tdcs";
					$display = stripslashes($row[$f]); 

					// Display Exceptions (lookup)
					if ( $f  == 'author_id' ) {
						$display = "<A HREF=/warrior.phpx?war_id=$row[$f]&Action=View>";
						$display .= "$row[war_fname] $row[war_lname] </A>";
					}

					if (in_array($f, $SHOW)) {

						if (array_key_exists($f, $JustifyCss)) {
							$css = $JustifyCss[$f];
						}

						echo "<TD VALIGN=TOP class=$css>";
						if (in_array($f, $LINK)) {
							echo "<A HREF=";
							echo "$_SERVER[PHP_SELF]";
							echo '?';
							$url = preg_replace('/\s+/', '+', $row[$f]);
							echo "$f=${url}"; 
							echo "&${drilldown}>";
							echo "$display</A>\n";
						}else{
							echo "$display\n";
						}
						echo "<BR></TD>\n";
					}
				}
				// Number of started
				echo "<TD class=tdcs>$NumStarted[$sid]</TD>\n";

				// Number of Completed
				echo "<TD class=tdcs>$NumCompleted[$sid]</TD>\n";


			}
			echo "</TABLE>\n";
			echo "</CENTER>\n";
	  	}//if ($_REQUEST[Action] == "List")) {

		//----------------------------------------------------------------------
	  	// New Entry Form
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "New" ) {
			echo "<CENTER>\n";
			echo "<H1> Option not supported... see ";
		 	echo "<A HREF=$WICCFG[WICURL]/help.phpx?table_name=survey&field_name=Overview&Action=Help>overview</A>.";
			echo "</H1>\n";
			echo "<CENTER>\n";
			spew_footer($FMT);
			exit;
			$menulist = array();
			$table = 'survey';

			$today = date('Y-m-d');
			$DateRange = array();
			$sql = "SELECT calendar_date from allacl where calendar_date > '$today' LIMIT 120";
			$DateRange = get_menu($sql);

			$Who = array();
			$sql = "SELECT war_id, war_fname, war_lname from warrior";
			$Who = get_warrior_name_picklist($sql);

			echo "<CENTER>\n";
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			$fieldlabel = get_field_labels('survey','survey',$WICCFG['DBNAME']);

			unset($fieldlabel['survey_id']);

			foreach ($SURVEYFIELD as $fieldname ) {
				$val = $fieldlabel[$fieldname];
				
				echo "<TR>\n";
				echo "<TD VALIGN=TOP CLASS=tdls>";
				echo "<A HREF=/help.phpx?table_name=$table&field_name=$fieldname&Action=Help>";
				echo "$val</A></TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				if (array_key_exists($fieldname, $FieldType)) {
					if ( $FieldType[$fieldname] == "Menu" ) {
						$menusql = $Menu[$fieldname];
						$menulist = get_menu($menusql);
						sort($menulist);
						spew_select_menu($fieldname, $_REQUEST[$fieldname],'',$menulist);
						if (in_array($fieldname, $EXTEND)) {
							echo "-OR- <INPUT TYPE=TEXT NAME=NEW_${fieldname}>";
						}
					}

					if ($FieldType[$fieldname] == "MenuArray" ) {
						$menusql = $Menu[$fieldname];
						$menulist = get_menu_array($menusql);
						asort($menulist);
						spew_select_hash_menu($fieldname, $_REQUEST[$fieldname],'',$menulist);
					}

					if ($FieldType[$fieldname] == "Who" ) {
						spew_select_hash_menu($fieldname, $_REQUEST[$fieldname],'',$Who);
					}

					if ($FieldType[$fieldname] == "Date" ) {
						spew_select_menu($fieldname, $_REQUEST[$fieldname],$today,$DateRange);
					}

					if ($FieldType[$fieldname] == "TextArea" ) {
						echo "<TEXTAREA NAME=$fieldname></TEXTAREA>\n";
					}

					if ($FieldType[$fieldname] == "LongText" ) {
						echo "<INPUT TYPE=TEXT SIZE=60 NAME=$fieldname>";
					}

				}else{
					echo "<INPUT TYPE=TEXT NAME=$fieldname>";
				}
				echo "</TD>\n";
			}
			echo "</TABLE>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Insert New Entry\">\n";
			echo "</FORM>\n";
			echo "</CENTER>\n";
		}//End if ($_REQUEST['Action'] == "New" ) 

		//----------------------------------------------------------------------
	  	// Edit Survey
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "Edit") {
			$table='survey';
			$NoEdit = array(
				'survey_id',
				'author_id',
				'audience'
			);
			global $FieldType;
			print_r($_SESSION); // DEVONLY

			if ( array_key_exists('survey_id', $_REQUEST)) {
				if ( isset ($_REQUEST['survey_id'] ) ) {
					$survey_id = stripslashes( $_REQUEST['survey_id']);
				}else{
					die ("NO Survey ID in edit function.") ;
				}
				if ( ! is_numeric($survey_id) ) {
					die ("Location ID ($survey_id) is not an integer.") ;
				}
			}else{
				die ("No Survey Id Set") ;
			}

			$dbh = caa_connect();

			$today = date('Y-m-d');
			$DateRange = array();
			$sql = "SELECT calendar_date from allcal where calendar_date > '$today' LIMIT 120";
			echo "<p class=trace>$sql</P>\n"; 	// DEVONLY
			$DateRange = get_menu($sql);
			//print_r($DateRange);	// DEVONLY

			$Who = array();
			$wid = $_SESSION['war_id'];
			$sql = "SELECT war_id, war_fname, war_lname from warrior where war_id = '$wid'";
			echo "<p class=trace>$sql</P>\n"; 	// DEVONLY
			$Who = get_warrior_name_picklist($sql);
			print_r($Who);	// DEVONLY

			$menulist = array();

			$sql = "SELECT * FROM survey WHERE survey_id = '$survey_id'";
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;

			$fieldlabel = get_field_labels('survey','survey',$WICCFG['DBNAME']);

			echo "<CENTER>\n";
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<TABLE BORDER>\n";

			foreach ($SURVEYFIELD as $fieldname ) {
				$label = $fieldlabel[$fieldname];
				echo "<TR>\n";
				echo "<TD VALIGN=TOP class=tdls>";
				echo "<A HREF=/help.phpx?table_name=$table&field_name=$fieldname&Action=Help>";
				echo "$label";
				echo "</A>";
				echo "</TD>\n";
				echo "<TD VALIGN=TOP class=tds>";

				if (in_array($fieldname, $NoEdit)) {
					if ( $fieldname == 'author_id' ) {
						$author = "<A HREF=http://igroupportal.mkp.org/warrior.phpx?war_id=$wid&Action=View>";
						$author .= $Who[$wid] . "</A>";
						echo "$author\n";
					}else{
						echo "$row[$fieldname]<BR>";
					}
				}else{
					if (array_key_exists($fieldname, $FieldType)) {

						if ( $FieldType[$fieldname] == "Menu" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu($menusql);
							sort($menulist);
							spew_select_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ($FieldType[$fieldname] == "MenuArray" ) {
							$menusql = $Menu[$fieldname];
							$menulist = get_menu_array($menusql);
							ksort($menulist);
							spew_select_hash_menu($fieldname, $row[$fieldname],'',$menulist);
						}

						if ( $FieldType[$fieldname] == "TextArea" ) {
							echo "<TEXTAREA NAME=$fieldname COLS=60 ROWS=30>$row[$fieldname]</TEXTAREA>\n";
						}

						if ($FieldType[$fieldname] == "Who" ) {
							spew_select_hash_menu($fieldname, $row[$fieldname],'',$Who);
						}

						if ( $FieldType[$fieldname] == "Date" ) {
							spew_select_menu($fieldname, $row[$fieldname],$row[$fieldname],$DateRange);
						}

						if ( $FieldType[$fieldname] == "LongText" ) {
							echo "<INPUT TYPE=TEXT NAME=$fieldname SIZE=60 VALUE=\"$row[$fieldname]\">\n";
						}

					}else{	// No fieldtype
						echo "<INPUT TYPE=TEXT NAME=$fieldname VALUE=\"$row[$fieldname]\"><BR>";
					}
						
				}//Endif NoEdit
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";
			echo "<INPUT TYPE=HIDDEN NAME=survey_id VALUE=$_REQUEST[survey_id]>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=List>\n";
			// SECURITY, only admin and author may update
			if ( $_SESSION['access'] >= $SURVEYCFG['EDITLEVEL']
				|| $_SESSION['war_id'] == $row['author_id'] ) {
				echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Update>\n";
			}
			echo "</FORM>\n";
			echo "</CENTER>\n";

			show_comment_history($survey_id, $table);

	  	}//if ($_REQUEST[Action] == "Edit") 


		//----------------------------------------------------------------------
	  	// View
		//----------------------------------------------------------------------
	  	if ($_REQUEST['Action'] == "View" 
	  		|| $_REQUEST['Action'] == "Preview" 
			) {

			$table = 'survey';

			if ( array_key_exists('survey_id', $_REQUEST)) {
				if ( isset ( $_REQUEST[survey_id] ) ) {
					$survey_id = $_REQUEST[survey_id];
				}else{
					die ("No Survey ID in view function") ;
				}
				if ( ! is_numeric($survey_id) ) {
					die ("Survey ID ($survey_id) is not an integer.") ;
				}
			}else{
				die ("No Survey Id Set") ;
			}
			$table_id = $survey_id;

			$dbh = caa_connect();

			$menulist = array();
			$fieldlabel = array();
			$fields = array();

			$sql = "SELECT * FROM survey WHERE survey_id = '$survey_id'";
			$result = mysql_query($sql);
			$row = mysql_fetch_array($result, MYSQL_ASSOC) ;

			$fieldlabel = get_field_labels('survey','survey',$WICCFG['DBNAME']);
			$fields = array_keys($fieldlabel);
			$fieldlabel['author_id'] = 'Author';	// TODO: Update Message Table
			$fieldlabel['survey_id'] = 'Survey ID';	// TODO: Update Message Table
			// Blurb
			echo "<P class=trace>";
			echo "Details for this survey. For explanations and help, you can view the help";
			echo " <A HREF=/help.phpx?table_name=survey&field_name=Overview&Action=Help>Overview</A>";
			echo "<BR>";
			echo " or click on the field labels in the left column for explanation";
			echo " about that attribute of the survey.";
			echo "<BR>";
			echo " The <B>Preview</B> link or button shows roster of all questions in survey.";
			echo "</P>";

			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<CENTER>\n";
			echo "<TABLE BORDER WIDTH=90%>\n";

			foreach ($SURVEYFIELD as $fieldname ) {
				$label = $fieldlabel[$fieldname];
				echo "<TR>\n";

				echo "<TD VALIGN=TOP class=tdls>";
				echo "<A HREF=/help.phpx?table_name=$table&field_name=$fieldname&Action=Help>";
				echo "$label</A></TD>\n";

				echo "<TD VALIGN=TOP class=tds>";
				$display = stripslashes($row[$fieldname]);

				//
				// View Entry Lookup Map Translations (id -> othertable.name for foreign keys)
				//
				if ( $fieldname == "author_id" ) {
					$who = array();
					$sql = "SELECT war_fname, war_lname from warrior where war_id = '$row[$fieldname]'";
					$who = get_menu($sql);
					$display = "<A HREF=/warrior.phpx?war_id=$row[$fieldname]&Action=View>";
					$display .= implode(' ', $who);
					$display .= '</A>';
				}

				echo "$display<BR>";
				echo "</TD>\n";
			}//Endforeach fieldname
			echo "</TABLE>\n";
			// Normal Close
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=List>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"List Open\">\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"List Closed\">\n";
			echo "</FORM>\n";
			//
			// Preview with option for author to edit
			//
			echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
			echo "<INPUT TYPE=HIDDEN NAME=survey_id VALUE=$survey_id>\n";
			// Give Author/Administrator option to edit
			if ( $_SESSION['access'] >= $SURVEYCFG['EDITLEVEL'] 
				|| $_SESSION['war_id'] == $row['author_id'] ) {
				if ( $_SESSION['access'] >= $SURVEYCFG['EDITLEVEL'] ) {
					echo "<P class=trace>I am Administrator, >= $SURVEYCFG[EDITLEVEL]</P>\n"; // DEVONLY
				}
				if (  $_SESSION['war_id'] == $row['author_id'] ) {
					echo "<P class=trace> I amd author</P>\n"; // DEVONLY
				}
				echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Edit>\n";
			}
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=Preview>\n";
			echo "</FORM>\n";
			echo "</CENTER>\n";
			//
			// Preview List of Questions
			//
	  		if( $_REQUEST['Action'] == "Preview" ) {
				echo "<CENTER>\n";
				echo "<H1>Questions in this suvey</H1>\n";
				echo "</CENTER>\n";
				$Ord = array();
				$Qord = array();
				$Sord = array();
				$sql = "SELECT m.*, q.surveyquestion_question, s.surveysection_name";
				$sql .= " FROM surveymanifest m, surveyquestion q, surveysection s";
				$sql .= " WHERE m.survey_id  = '$survey_id'";
				$sql .= " AND m.surveyquestion_id = q.surveyquestion_id";
				$sql .= " AND m.surveysection_id = s.surveysection_id";		// TTTT
				//$sql .= " AND m.surveysection_id = s.sequence";		// TTTT
				$sql .= " ORDER BY m.surveysection_id, m.surveyquestion_id";
				echo "<p class=trace>$sql</p>\n";				// DEVONLY
				$oresult = mysql_query($sql);
				while ($Ord = mysql_fetch_array($oresult, MYSQL_ASSOC) ) {
					$tsid = $Ord['surveysection_id'];
					$tqid = $Ord['surveyquestion_id'];
					if ($tsid != $last_tsid){
						if (isset ($last_tsid)){
							echo "</OL>\n";
						}
						echo "<H3>$Ord[surveysection_name]</H3>\n";
						echo "<OL>\n";
						$seccnt++;
						$questioncnt=1;
						$Sord[$tsid] = $seccnt;
					};
					$Qord[$tqid] = $seccnt . '.' . $questioncnt;
					echo "<LI>$Ord[surveyquestion_question]</LI>\n";
		
					$questioncnt++;
					$last_tsid = $tsid;
					$last_tqid = $tqid;
				}
				echo "</OL>\n";
				print_r($Qord);	// DEVONLY
			}
	  		if( $_REQUEST['Action'] == "View" ) {
	
				//
				// Show Comment History
				//
				// Blurb
				echo "<P class=trace>Comments from those those who have completed survey</P>\n";
				echo "<CENTER>\n";
				show_comment_history($survey_id, $table);
				echo "</CENTER>\n";

			}
	  	}//if ($_REQUEST[Action] == "View")

		//----------------------------------------------------------------------
		// END 'Action' Processing Options
		//----------------------------------------------------------------------

	}else{	// No Action Field
		spew_query_form();
	}

	spew_footer($FMT);
	//----------------------------------------------------------------
	// Function spew_query_form
	//----------------------------------------------------------------
	function spew_query_form() {
		global $WICCFG;
		$list = array();
		$dbh = caa_connect();
		// Blurb
		echo "<P class=trace>";
		echo "Online help has more information in the\n";
		echo " <A HREF=$WICCFG[WICURL]/help.phpx?table_name=survey&field_name=Overview&Action=Help>overview</A>.";
		echo " Before taking survey, please review the\n";
		echo " <A HREF=$WICCFG[WICURL]/help.phpx?table_name=survey&field_name=Instructions&Action=Help>instructions</A>.";
		echo " How to create a new survey is described in the\n";
		echo " <A HREF=$WICCFG[WICURL]/help.phpx?table_name=survey&field_name=New+Survey&Action=Help>tutorial</A>.";
		echo "</P>\n";

		echo "<CENTER>\n";
		echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
		echo "<TABLE BORDER>\n";
		echo "<TH class=ths>Suvery Name</TH>\n";
		echo "<TH class=ths>Audience</TH>\n";
		echo "<TH class=ths>Author</TH>\n";
		echo "<TH class=ths>Sort By</TH>\n";

		echo "<TR>\n";
		// Surve Name
		echo "<TD class=tds>\n";
		$sql = "SELECT DISTINCT survey_id, survey_name from survey order by survey_name";
		$list = get_menu_array($sql);
		spew_select_hash_menu('survey_id','','All',$list);
		echo "</TD>\n";

		// Audience
		echo "<TD class=tds>\n";
		$sql = "SELECT distinct audience from survey order by audience" ;
		$list = get_menu($sql);
		spew_select_menu('audience','All','All',$list);
		echo "</TD>\n";

		// Author
		echo "<TD class=tds>\n";
		$sql = "SELECT DISTINCT w.war_id, w.war_fname, w.war_lname";
		$sql .= " FROM warrior w, survey s";
		$sql .= " WHERE w.war_id = s.author_id";
		$row = array();
		$Who = array();
		$result = mysql_query($sql);
		while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
			$wid = $row['war_id'];
			$Who[$wid] = $row['war_fname'] . ' ' . $row['war_lname'];
		};
		spew_select_hash_menu('author_id','All','All',$Who);
		echo "</TD>\n";

		// Sort By
		echo "<TD class=tds>\n";
		$sortby = array (
			'Name',
			'Audience',
			'Open Date',
			'Close Date',
			'Author'
			);
		sort($sortby);
		spew_select_menu('Sortmeby','','Name',$sortby);
		echo "</TD>\n";

		// End Table

		echo "</TR>\n";
		echo "</TABLE>\n";
		// End Form
		echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=List>\n";
		echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"List Open\">\n";
		echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"List Closed\">\n";
		// SECURITY
		//if ($_SESSION['access'] >= $SURVEYCFG['EDITLEVEL'] ) {
			//echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"New\">\n";
		//}
		echo "</FORM>\n";
		echo "</CENTER>\n";
	}

	//----------------------------------------------------------------
	// Function Show Comment History
	//----------------------------------------------------------------

	function show_comment_history ( $cid, $ctable ) {
		global $WICCFG;

		$subname = "show_comment_history";
		$cfieldlabel = array();
		$cfields = array();

		echo "<P class=trace>Entering $subname, id = $cid, table = $ctable </P>\n" ; // DEBUG DEVONLY;
	
		$Default = array( 
			"author_id"			=>	"45759",
			"comment_type"		=>	"Comment",
			"sortby"			=>	'Date Submitted'
			);
	
		$NoPropagate = array( 
			"sortby"	=>					"sort by",
			"thread"	=>					"thread"
			);
	
		//
		// Get List of nicknames for comment authors
		//
		$Who = array();
		$sql = "SELECT DISTINCT w.war_id, w.war_fname, w.war_nname, w.war_lname, w.war_email";
		$sql .= " FROM warrior w, comment c";
		$sql .= " WHERE w.war_id = c.author_id ";
		$sql .= " AND c.table_name = '$ctable' AND c.table_id = '$cid' ";
		echo "<P class=trace>$sql</P> ";	// DEVONLY
		$Who = get_warrior_name_picklist($sql);
		print_r($Who);	//DEVONLY

		//
		// Get List of emails for comment authors
		//
		$AuthorEmail = array();
		$sql = "SELECT w.war_id , w.war_email from warrior w, comment c";
		$sql .= " WHERE w.war_id = c.author_id ";
		$sql .= " AND c.table_name = '$ctable' AND c.table_id = '$cid' ";
		echo "<P class=trace>$sql</P> ";	// DEVONLY
		$AuthorEmail = get_menu_array($sql);
		print_r($AuthorEmail);	//DEVONLY

		//
		// Get List of existing comment types
		//
		$ctypes = array();
		$sql = "SELECT distinct comment_type from comment";
		$ctypes =  get_menu($sql);

		//
		// Generate SQL query
		//
		$dbh = caa_connect;
	
		$cfieldlabel = get_field_labels('survey','survey',$WICCFG['DBNAME']);
		$cfields = array_keys($cfieldlabel);
	
		$sql = "SELECT  ";
		$sql .= " c.comment_id, c.comment_access,  c.author_id, c.date_created, c.comment_type,";
		$sql .= " c.comment_summary, c.comment_detail"; 
		$sql .= " FROM comment c WHERE c.table_name = '$ctable' and c.table_id = '$cid' ";

		if (! isset($_SESSION['war_id'] ) ) {
			$sql .= " AND c.comment_access = 'Public' ";
			echo "<P class=trace>Following are all public entries. ";
			echo "Remaining entries visible after <A HREF=/login.phpx>logging in.</A></P>\n";
		}

		$sql .= " ORDER BY c.date_created desc";
		
		echo  "<P class=trace>$sql</P>\n" ; // DEBUG DEVONLY;

		//
		// Fetch and prepackage via sort/thread criteria WWWW
		//

		$TotalEntries = '0';
		$result = mysql_query($sql);
		$rowcount = mysql_num_rows($result);
		$Sort = array();
		$Comment = array();
		$Allauthors = array();
	
		//--------------------------------------------------------
		// Print Comment History
		//--------------------------------------------------------
		$url = $_SERVER['QUERY_STRING'];

		print "<P class=trace>Incoming URI: $url</P>\n"; // DEVONLY DEBUG

		if ( $_REQUEST[Comment] == "Detail" ) {
			$url = preg_replace('/=Detail/', '=Summary', $url);
			print "<P class=trace>Detail: url: ${url}</P>\n"; // DEVONLY DEBUG
			//print "<P class=trace><A HREF=\"$_SERVER[PHP_SELF]?$url\">Show Comment Summary Only</P>\n";
		}else{
			$url = preg_replace('/&Comment=Summary/', '', $url);
			print "<P class=trace>NO Detail: url: $url</P>\n"; // DEVONLY DEBUG
			//print "<P class=trace><A HREF=\"$_SERVER[PHP_SELF]?${url}&Comment=Detail\">Show Comment Details</P>\n";
		}

		$count = mysql_num_rows($result);
		echo "<CENTER>\n";
		$howmany = "Entries";

		if ( $count == "1" ) {
			$howmany = "Entry";
		}
		echo "<TABLE id=${ctable}_comment_table BORDER CELLSPACING=2 CELLPADDING=4>\n";

		if ( $_REQUEST['Comment'] == "Detail" ) {
			echo "<TH class=ths>Details of $count Comment $howmany\n";
			echo "(Show <A HREF=\"$_SERVER[PHP_SELF]?$url\">summaries only</A>.)";
			echo "</TH>\n";
		}else{
			echo "<TH class=ths>Summary of $count Comment $howmany\n";
			echo "(Show <A HREF=\"$_SERVER[PHP_SELF]?${url}&Comment=Detail\">details</A>.)";
			echo "</TH>\n";
		}
		echo "<TR>\n";
		echo "<TD class=tds>\n";
		echo "<UL class=commentlist>\n";

		while ($Comment = mysql_fetch_array($result, MYSQL_ASSOC) ) {

			$ts =  timestamp2display($Comment[date_created]);
			echo "<LI class=commentlistitem>";
			echo "<A HREF=\"/comment.phpx?comment_id=$Comment[comment_id]&Action=View\">";
			echo "<IMG SRC=/images/smallballs/greenball.gif HEIGHT=10 WIDTH=10 VALIGN=CENTER></A>\n";
			echo "&nbsp;[$ts]&nbsp;\n";
			$author_id = $Comment['author_id'];

			echo "<A HREF=\"mailto:$AuthorEmail[$author_id]\">$Who[$author_id]</A>:\n";

			echo "$Comment[comment_summary]\n";

			if ( $_REQUEST[Comment] == "Detail" ) {
				echo "<UL class=commentlistbody><LI>\n";
				echo "<PRE>\n";
				$cleantext = stripslashes($Comment[comment_detail]);
				$display = wordwrap($cleantext, 60, "\n");
				echo "$display";
				echo "</PRE>\n";
				echo "</LI></UL>\n";
			}

			echo "</LI>\n";
		}#Endwhile

		if (! $count) {
			echo "<LI>No comment entries</LI>\n";
		}
		echo "</UL>\n";
		echo "</TD>\n";
		echo "</TABLE>\n";
	
	}// End funtion show_comment_history

	//----------------------------------------------------------------
	// Function send_email_ack
	//----------------------------------------------------------------
	function send_email_ack ( $survey_id ) {
		global $WICCFG;
		$table = 'survey';	// For comment
		echo "<P>Entering send_email_ack</P>\n";	// DEVONLY

		//
		// Responder Information
		//
		$Data = array();
		$wid = $_SESSION['war_id'];
		$sql = "SELECT war_fname, war_lname, war_email, war_email2 from warrior where war_id = '$wid'";
		$result = mysql_query($sql);
		$Data = mysql_fetch_array($result, MYSQL_ASSOC) ;
		echo "<BR><B>Responder Warrior Info</B><BR>\n";	// DEVONLY
		print_r($Data); 		// DEVONLY
		//
		// Survey Information
		//
		$Survey = array();
		$sql = "SELECT * from survey where survey_id = '$survey_id'";
		$result = mysql_query($sql);
		$Survey = mysql_fetch_array($result, MYSQL_ASSOC) ;
		echo "<BR><B>Survey Info</B><BR>\n";	// DEVONLY
		print_r($Survey); 		// DEVONLY
		//
		// Config parameters for email acknowledgement
		//
		$ACKEMAIL = array (
			'subject'		=>	"Thank you for your survey participation", 
			'fromemail'		=>	"jerbowes@yahoo.com",
			'toemail'		=>	"$Data[war_email]",	// Safety, overwritten in send_email_ack
			'fromname'		=>	"MKP USA IGP Survey Administrator" 
		);
		$ACKEMAIL['subject'] .= ', ' . $Data['war_fname'] . ' ' . $Data['war_lname'];

		echo "<CENTER>\n";
		echo "<H1>Thank you for completing this survey</H1>\n";
		if ( isset($Data['war_email']) ) {
			$ACKEMAIL['toemail'] = $Data['war_email'];
			echo "<H2>An acknowledgement has been emailed to $Data[war_email]</H2>\n";
		}else{
			echo "<H3>There is no primary email address on file for you in the ";
			echo "<A HREF=/warrior.phpx?war_id=$wid&Action=Edit>warrior database</A>, so no email was sent</H3>\n";
			echo "<H3>After the survey close date of $Survey[close_date], you will be able to review the";
			echo "<A HREF=$WICCFG[WICURL]/survey.phpx?survey_id=$survey_id&Action=Review>results</A> of the survey.";
			echo "</H3>\n";
			echo "<P class=trace>Any questions or comments, please send email to";
			echo " <A HREF=mailto:jerbowes@yahoo.com>Jerry Bowes</A> or add a comment below</P>\n";
			//
			// Show Comment History
			//
			echo "<FORM ACTION=/comment.phpx TYPE=POST>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_id VALUE=$survey_id>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_name VALUE=$table>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Add Comment\">\n";
			echo "</FORM>\n";

			show_comment_history($survey_id, $table);

			echo "</CENTER>\n";
			spew_footer($FMT);
		}

		echo '<pre>';	//DEBUG DEVONLY
		echo "ENTERING EMAIL ACK<BR>\n";//DEBUG DEVONLY
		echo "ACKEMAIL<BR>\n";//DEBUG DEVONLY
		echo htmlspecialchars(print_r($ACKEMAIL), ENT_QUOTES);	//DEBUG DEVONLY
		echo "Incoming Data<BR>\n";//DEBUG DEVONLY
		echo htmlspecialchars(print_r($Data), ENT_QUOTES);	//DEBUG DEVONLY
		echo '</pre>';	//DEBUG DEVONLY

		$fd = popen($WICCFG[MAILER],"w"); 
		//
		// Construct Mail Headers
		//
		fputs($fd, "From: $ACKEMAIL[fromname] <$ACKEMAIL[fromemail]>\n"); 
		fputs($fd, "To: $ACKEMAIL[toname] <$ACKEMAIL[toemail]>\n"); 

		if ( isset($Data['war_email2']) ) {
			fputs($fd, "Cc: $Data[war_email2]\n"); 
			echo "<CENTER>\n";
			echo "<H2>A copy has also been sent to your alternate email $Data[war_email2]</H2>\n";
			echo "</CENTER>\n";
		}
		fputs($fd, "Bcc: jerbowes@yahoo.com\n"); // BETA ONLY
		//
		// Subject
		//
		fputs($fd, "Subject: $ACKEMAIL[subject]\n\n"); 
		//
		// Body
		//
		fputs($fd, "$Data[war_fname],\n\n"); 
		fputs($fd, "Thank you for completing the survey named: \n\n"); 
		fputs($fd, "$Survey[survey_name]\n\n"); 

		fputs($fd, "After the survey close date of $Survey[close_date], you will be able to see the results at \n\n"); 
		fputs($fd, "$WICCFG[WICURL]/survey.phpx?survey_id=$survey_id&Action=Review\n\n");

		pclose($fd); 

		// Now What

		echo "<H3>After the close date of $Survey[close_date], you will be able to review the ";
		echo "<A HREF=$WICCFG[WICURL]/survey.phpx?survey_id=$survey_id&Action=Review>results</A> of the survey.";
		echo "</H3>\n";
		echo "<P class=trace>Any questions or comments, please send email to";
		echo " <A HREF=mailto:jerbowes@yahoo.com>Jerry Bowes</A> or add a comment below</P>\n";
			//
			// Show Comment History
			//
			echo "<FORM ACTION=/comment.phpx TYPE=POST>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_id VALUE=$survey_id>\n";
			echo "<INPUT TYPE=HIDDEN NAME=table_name VALUE=$table>\n";
			echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Add Comment\">\n";
			echo "</FORM>\n";

			show_comment_history($survey_id, $table);

		echo "</CENTER>\n";
	}//End function send_email_ack

	//----------------------------------------------------------------
	// Function spew_question
	//----------------------------------------------------------------
	function spew_question ($sid, $qid ) {
		global $WICCFG;
		$dbh = caa_connect();
		echo "<P>Entering spew_question : Sid: $sid, Qid: $qid</P>\n";	// DEVONLY
		//
		// Calculate the Section and Order of this Question
		//
		$Ord = array();
		$Qord = array();
		$Sord = array();
		$sql = "SELECT * from surveymanifest where survey_id  = '$sid'";
		$sql .= " ORDER BY surveysection_id, surveyquestion_id";
		echo "<p class=trace>$sql</p>\n";				// DEVONLY
		$oresult = mysql_query($sql);
		while ($Ord = mysql_fetch_array($oresult, MYSQL_ASSOC) ) {
			$tsid = $Ord['surveysection_id'];
			$tqid = $Ord['surveyquestion_id'];
			if ($tsid != $last_tsid){
				$seccnt++;
				$questioncnt=1;
				$Sord[$tsid] = $seccnt;
			};
			$Qord[$tqid] = $seccnt . '.' . $questioncnt;

			$questioncnt++;
			$last_tsid = $tsid;
			$last_tqid = $tqid;
		}
		print_r($Qord);	// DEVONLY

		//
		// Get Details for This Question
		//
		$Question = array();
		$sql = "SELECT DISTINCT q.*, s.surveysection_id, s.surveysection_name ";
		$sql .= " FROM surveyquestion q, surveymanifest m, surveysection s";
		$sql .= " WHERE q.surveyquestion_id = '$qid'";
		$sql .= " AND q.surveyquestion_id = m.surveyquestion_id";
		//$sql .= " AND s.sequence = m.surveysection_id";		// TTT
		$sql .= " AND s.surveysection_id = m.surveysection_id";		// TTT
		echo "<p class=trace>$sql</p>\n";				// DEVONLY
		$qresult = mysql_query($sql);
		$Question = mysql_fetch_array($qresult, MYSQL_ASSOC) ;
		print_r($Question); // DEVONLY

		//
		// Get Details for the answers to this question
		//
		$sql = "SELECT * FROM surveyanswer WHERE surveyquestion_id = '$qid'";
		echo "<p class=trace>$sql</p>\n";				// DEVONLY
		$aresult = mysql_query($sql);
		
		$Ans = array();

		//mysql> describe surveyquestion;
		//+-----------------------------+------------------+------+-----+---------+----------------+
		//| Field                       | Type             | Null | Key | Default | Extra          |
		//+-----------------------------+------------------+------+-----+---------+----------------+
		//| surveyquestion_id           | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
		//| author_id                   | int(10) unsigned | YES  |     | NULL    |                |
		//| surveyquestion_question     | varchar(120)     | YES  |     | NULL    |                |
		//| surveyquestion_type         | varchar(30)      | YES  |     | NULL    |                |
		//| surveyquestion_instructions | text             | YES  |     | NULL    |                |
		//+-----------------------------+------------------+------+-----+---------+----------------+

		//mysql> describe surveyanswer;
		//+---------------------+------------------+------+-----+---------+----------------+
		//| Field               | Type             | Null | Key | Default | Extra          |
		//+---------------------+------------------+------+-----+---------+----------------+
		//| surveyanswer_id     | int(10) unsigned | NO   | PRI | NULL    | auto_increment |
		//| surveyanswer_answer | varchar(120)     | YES  |     | NULL    |                |
		//| answer_type         | varchar(30)      | YES  |     | NULL    |                |
		//| valid_range         | varchar(80)      | YES  |     | NULL    |                |
		//| answer_value        | text             | YES  |     | NULL    |                |
		//+---------------------+------------------+------+-----+---------+----------------+

		$secid = $Question['surveysection_id'];
		echo "<H1>$Sord[$secid] $Question[surveysection_name]</H1>";
		echo "<H3>$Qord[$qid] $Question[surveyquestion_question]</H3>";
		if ( !empty ($Question['surveyquestion_instructions'] )){
			echo "<P><B>$Question[surveyquestion_instructions]</B>\n";
		}else{
			echo "<P><B>$Question[surveyquestion_type]</B>\n";
		}
		echo "</P>\n";
		echo "<P class=sm>Click selections or enter answer and press <B>Next</B> button in highlighted last row.";
		echo "</P>\n";

		//print "<CENTER>\n";
		echo "<FORM ACTION=$_SERVER[PHP_SELF] TYPE=POST>\n";
		print "<TABLE BORDER>\n";

		if ( $Question['surveyquestion_type'] == 'Select One Of Many' ) {
			echo "<TH class=ths>Choose One</TH>\n";
			echo "<TH class=ths>Response Option</TH>\n";
			
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<INPUT TYPE=RADIO NAME=ANSR_${qid} VALUE=${aid}>";
				echo "</TD>\n";
				echo "<TD class=tds>$Ans[surveyanswer_answer]</TD>\n";
			}
		}
		if ( $Question['surveyquestion_type'] == 'Select One Or Several Of Many' ) {
			echo "<TH class=ths>Multiple Choices</TH>\n";
			echo "<TH class=ths>Response Option</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<INPUT TYPE=CHECKBOX NAME=ANSC_${qid}_${aid} VALUE=Selected>";
				echo "</TD>\n";
				echo "<TD class=tds>$Ans[surveyanswer_answer]</TD>\n";
			}
		}
		if ( $Question['surveyquestion_type'] == 'Rate Each 1-4' ) {
			echo "<TH class=ths>Rate 1 (low) - 4 (high)</TH>\n";
			echo "<TH class=ths>Response Option</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<IMG SRC=/images/smallballs/redball.gif BORDER=0>";
				foreach (range(1,4) as $cnt){
					echo "<INPUT TYPE=CHECKBOX NAME=ANSC_${qid}_${aid} VALUE=$cnt>$cnt";
				}
				echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0>";
				echo "</TD>\n";
				echo "<TD class=tds>$Ans[surveyanswer_answer]</TD>\n";
			}
		}
		if ( $Question['surveyquestion_type'] == 'Rate Each 1-9' ) {
			echo "<TH class=ths>Rate 1 (low) - 9 (high)</TH>\n";
			echo "<TH class=ths>Response Option</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<IMG SRC=/images/smallballs/redball.gif BORDER=0>";
				foreach (range(1,9) as $cnt){
					echo "<INPUT TYPE=CHECKBOX NAME=ANSC_${qid}_${aid} VALUE=$cnt>$cnt";
				}
				echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0>";
				echo "</TD>\n";
				echo "<TD class=tds>$Ans[surveyanswer_answer]</TD>\n";
			}
		}


		if ( $Question['surveyquestion_type'] == 'Rank Each In Order' ) {
			echo "<TH class=ths>Rank In Order, 1 is best or most important</TH>\n";
			echo "<TH class=ths>Response Option</TH>\n";
			$rowcount = mysql_num_rows($aresult);
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0>";
				foreach (range(1,$rowcount) as $cnt){
					echo "<INPUT TYPE=RADIO NAME=ANSRR_${qid}_$cnt VALUE=$aid>";
					echo "$cnt&nbsp;";
				}
				echo "<IMG SRC=/images/smallballs/redball.gif BORDER=0>";
				echo "</TD>\n";
				echo "<TD class=tds>$Ans[surveyanswer_answer]</TD>\n";
			}
		}

		if ( $Question['surveyquestion_type'] == 'Rank Each 1-4' ) {
			echo "<TH class=ths>Rank Top 4 In Order, 1 is best or most important</TH>\n";
			echo "<TH class=ths>Response Option</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0>";
				foreach (range(1,4) as $cnt){
					echo "<INPUT TYPE=RADIO NAME=ANSRR_${qid}_$cnt VALUE=$aid>";
					echo "$cnt&nbsp;";
				}
				echo "<IMG SRC=/images/smallballs/redball.gif BORDER=0>";
				echo "</TD>\n";
				echo "<TD class=tds>$Ans[surveyanswer_answer]</TD>\n";
			}
		}
		if ( $Question['surveyquestion_type'] == 'Rank Each 1-9' ) {
			echo "<TH class=ths>Rank Top 9 In Order, 1 is best or most important</TH>\n";
			echo "<TH class=ths>Response Option</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<IMG SRC=/images/smallballs/greenball.gif BORDER=0>";
				foreach (range(1,9) as $cnt){
					echo "<INPUT TYPE=RADIO NAME=ANSRR_${qid}_$cnt VALUE=$aid>";
					echo "$cnt&nbsp;";
				}
				echo "<IMG SRC=/images/smallballs/redball.gif BORDER=0>";
				echo "</TD>\n";
				echo "<TD class=tds>$Ans[surveyanswer_answer]</TD>\n";
			}
		}
		if ( $Question['surveyquestion_type'] == 'Open Short Answer' ) {
			echo "<TH class=ths>Enter text answer</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<INPUT TYPE=TEXT SIZE=80 NAME=ANST_${aid}>";
				echo "</TD>\n";
			}
		}

		if ( $Question['surveyquestion_type'] == 'Open Long Answer' ) {
			echo "<TH class=ths>Enter text answer</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<TEXTAREA ROWS=6 COLS=80 NAME=ANST_${aid}>";
				echo "</TEXTAREA>";
				echo "</TD>\n";
			}
		}

		if ( $Question['surveyquestion_type'] == 'Select From List' ) {
			echo "<TH class=ths>Select From List</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				$Tans = array();
				$qsql = $Ans['valid_range'];
				$Tans = get_menu($qsql);
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				$key = 'ANSM_' . $qid . '_' . $aid;
				spew_select_menu($key,'','',$Tans);
				echo "</TD>\n";
			}
		}

		if ( $Question['surveyquestion_type'] == 'Select From Menu' ) {
			echo "<TH class=ths>Select From Menu</TH>\n";
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				$Tans = array();
				$qsql = $Ans['valid_range'];
				$Tans = get_menu_array($qsql);
				echo "<TR>\n";
				echo "<TD class=tdcs>";
				$key = 'ANSM_' . $qid . '_' . $aid;
				spew_select_hash_menu($key,'','',$Tans);
				echo "</TD>\n";
			}
		}

		//
		// Requires war_id, war_fname, war_lname and where clause
		//
		if ( $Question['surveyquestion_type'] == 'Select Man In My Center' ) {
			echo "<TH class=ths>Select Man In Your Center</TH>\n";
			$Tans = array();
			$Trow = array();
			while ($Ans = mysql_fetch_array($aresult, MYSQL_ASSOC) ) {
				$aid = $Ans['surveyanswer_id'];
				$qsql = $Ans['valid_range'];
				echo "<p class=trace>$qsql</p>\n";	//DEBUG DEVONLY
				$qsql .= " AND w.war_center = '$_SESSION[center_id]'";
				$qsql .= " ORDER BY w.war_lname, w.war_fname";
				echo "<p class=trace>$qsql</p>\n";	//DEBUG DEVONLY
				$qresult = mysql_query($qsql);
				while ($Trow = mysql_fetch_array($qresult, MYSQL_ASSOC) ) {
					$twid = $Trow['war_id'];
					$Tans[$twid] = $Trow['war_fname'] . ' ' . $Trow['war_lname'];
				}

				echo "<TR>\n";
				echo "<TD class=tdcs>";
				echo "<p class=trace>$qsql</p>\n";	//DEBUG DEVONLY
				$key = 'ANSM_' . $qid . '_' . $aid;
				spew_select_hash_menu($key,'None','None',$Tans);
				echo "</TD>\n";
			}
		}

		echo "<TR><TD COLSPAN=2 ALIGN=CENTER class=tdls><INPUT TYPE=SUBMIT NAME=Action VALUE=\"Next\"></TD>\n";
		echo "</TABLE>\n";
		#echo "<CENTER>\n";
		echo "<INPUT TYPE=HIDDEN NAME=survey_id VALUE=$sid>\n";
		echo "<INPUT TYPE=HIDDEN NAME=surveyquestion_id VALUE=$qid>\n";
		#echo "<INPUT TYPE=SUBMIT NAME=Action VALUE=\"Previous\">\n";
		#echo "<B>&lt;&lt;=========================&gt;&gt;</B>";
		#echo "&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;";
		echo "</FORM>\n";
		//echo "</CENTER>\n";

	}//End function spew_question

	//----------------------------------------------------------------
	// Function Get Warrior Full Name Picklist
	//----------------------------------------------------------------
	function get_warrior_name_picklist ( $sql ) {
		global $WICCFG;
		echo "<P class=trace>Entering get_warrior_name_picklist:<BR>$sql</P>\n";	// DEVONLY
		$dbh = caa_connect();
		$row = array();
		$MyWho = array();
		if (empty ($sql) ) {
			die ("Function get_warrior_name_picklist attempted without sql statement: $sql");
		}
		$result =  mysql_query($sql);
		while ($row = mysql_fetch_array($result, MYSQL_ASSOC) ) {
			if ( empty ( $row['war_nname'] ) ) {
				$name = $row['war_fname'] . ' ' . $row['war_lname'];
			}else{
				$name = $row['war_nname'] . ' ' . $row['war_lname'];
			}
			$id = $row['war_id'];
			$MyWho[$id]  = $name;
		}
		return($MyWho);
	}// End funtion get_warrior_name_picklist

	//----------------------------------------------------------------
	// Spew Instructions for First Timers
	//----------------------------------------------------------------
	function spew_instructions ( ) {
		$dbh = caa_connect();
		$sql = "SELECT long_help from help where table_name = 'survey' ";
		$sql .= " AND field_name = 'Instructions'";
		echo "<p class=trace>$sql</p>\n";	//DEBUG DEVONLY
		$answer = get_value($sql);
		echo "<CENTER>\n";
		echo "<TABLE WIDTH=80%>\n";
		echo "<TH class=ths>Instructions On How the Survey Works</TH>\n";
		echo "<TR><TD class=tds>";

		echo "$answer";

		echo "</TABLE>\n";
		echo "</CENTER>\n";
	}// End function spew instructions
	//----------------------------------------------------------------
	// END FUNCTIONS
	//----------------------------------------------------------------
		
?>
